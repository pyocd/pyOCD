<?xml version="1.0" encoding="UTF-8"?>
<device schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>nxp.com</vendor>
  <name>LPC55S16</name>
  <version>1.0</version>
  <description>LPC55S16JBD100,LPC55S16JBD64,LPC55S16JEV98</description>
  <licenseText>
Copyright 2016-2021 NXP
All rights reserved.

SPDX-License-Identifier: BSD-3-Clause
  </licenseText>
  <cpu>
    <name>CM33</name>
    <revision>r2p0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>true</fpuPresent>
    <vtorPresent>true</vtorPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>32</width>
  <peripherals>
    <peripheral>
      <name>FLASH_CFPA0</name>
      <description>FLASH_CFPA</description>
      <groupName>FLASH_CFPA</groupName>
      <headerStructName>FLASH_CFPA</headerStructName>
      <baseAddress>0x3E000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>HEADER</name>
          <description>no description available</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VERSION</name>
          <description>no description available</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>S_FW_Version</name>
          <description>Secure firmware version (Monotonic counter)</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NS_FW_Version</name>
          <description>Non-Secure firmware version (Monotonic counter)</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IMAGE_KEY_REVOKE</name>
          <description>Image key revocation ID (Monotonic counter)</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ROTKH_REVOKE</name>
          <description>no description available</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RoTK0_EN</name>
              <description>RoT Key 0 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RoTK1_EN</name>
              <description>RoT Key 1 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RoTK2_EN</name>
              <description>RoT Key 2 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RoTK3_EN</name>
              <description>RoT Key 3 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VENDOR_USAGE</name>
          <description>no description available</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_VENDOR_USAGE</name>
              <description>DBG_VENDOR_USAGE.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INVERSE_VALUE</name>
              <description>inverse value of bits [15:0]</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCFG_CC_SOCU_PIN</name>
          <description>With TZ-M, the part can be sold by level 1 customers (secure code developer) to level-2 customers who develops non-secure code only. - In this scenario, or easy of development, Level-I customer releases the part to always allow non-secure debug. - To allow level-2 customers to further seal the part DCFG_CC_SOCU_NS is used. - ROM will use this word to further restrict the debug access.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NIDEN</name>
              <description>Non Secure non-invasive debug enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBGEN</name>
              <description>Non Secure debug enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPNIDEN</name>
              <description>Secure non-invasive debug enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPIDEN</name>
              <description>Secure invasive debug enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TAPEN</name>
              <description>JTAG TAP enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ISP_CMD_EN</name>
              <description>ISP Boot Command enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FA_ME_CMD_EN</name>
              <description>FA Command enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UUID_CHECK</name>
              <description>Enforce UUID match during Debug authentication.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INVERSE_VALUE</name>
              <description>inverse value of bits [15:0]</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCFG_CC_SOCU_DFLT</name>
          <description>With TZ-M, the part can be sold by level 1 customers (secure code developer) to level-2 customers who develops non-secure code only. - In this scenario, or easy of development, Level-I customer releases the part to always allow non-secure debug. - To allow level-2 customers to further seal the part DCFG_CC_SOCU_NS is used. - ROM will use this word to further restrict the debug access.</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NIDEN</name>
              <description>Non Secure non-invasive debug fixed state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBGEN</name>
              <description>Non Secure debug fixed state</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPNIDEN</name>
              <description>Secure non-invasive debug fixed state</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPIDEN</name>
              <description>Secure invasive debug fixed state</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TAPEN</name>
              <description>JTAG TAP fixed state</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ISP_CMD_EN</name>
              <description>ISP Boot Command fixed state</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FA_ME_CMD_EN</name>
              <description>FA Command fixed state</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERSE_VALUE</name>
              <description>inverse value of bits [15:0]</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_FA_MODE</name>
          <description>Enable FA mode. SET_FA_MODE Command should write 0xC33CA55A to this word to indicate boot ROM to enter FA mode.</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPA_PROG_IN_PROGRESS</name>
          <description>CMPA Page programming on going. This field shall be set to 0x5CC55AA5 in the active CFPA page each time CMPA page programming is going on. It shall always be set to 0x00000000 in the CFPA scratch area.</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_HEADER0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_HEADER1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>no description available</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE2</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE3</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY2</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE4</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY3</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE5</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY4</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE6</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY5</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE7</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY6</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE8</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY7</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE9</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY8</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE10</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY9</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE11</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY10</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE12</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_BODY11</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_IV_CODE13</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION0_IV_CODE</alternateGroup>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_HEADER0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_HEADER1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>no description available</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE2</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE3</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY2</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE4</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY3</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE5</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY4</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE6</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY5</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE7</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY6</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE8</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY7</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE9</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY8</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE10</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY9</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE11</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY10</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE12</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_BODY11</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_IV_CODE13</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION1_IV_CODE</alternateGroup>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_HEADER0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_HEADER1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>no description available</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY0</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE2</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY1</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE3</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY2</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE4</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY3</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE5</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY4</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE6</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY5</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE7</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY6</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE8</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY7</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE9</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY8</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE10</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY9</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE11</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY10</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE12</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_BODY11</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_IV_CODE13</name>
          <description>no description available</description>
          <alternateGroup>PRINCE_REGION2_IV_CODE</alternateGroup>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>56</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CUSTOMER_DEFINED[%s]</name>
          <description>Customer Defined (Programable through ROM API)</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SHA256_DIGEST[%s]</name>
          <description>SHA256_DIGESTindex for DIGEST[((index * 32) + 31):(index * 32)]</description>
          <addressOffset>0x1E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="FLASH_CFPA0">
      <name>FLASH_CFPA_SCRATCH</name>
      <description>FLASH_CFPA</description>
      <groupName>FLASH_CFPA</groupName>
      <baseAddress>0x3DE00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
    </peripheral>
    <peripheral derivedFrom="FLASH_CFPA0">
      <name>FLASH_CFPA1</name>
      <description>FLASH_CFPA</description>
      <groupName>FLASH_CFPA</groupName>
      <baseAddress>0x3E200</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
    </peripheral>
    <peripheral>
      <name>FLASH_CMPA</name>
      <description>FLASH_CMPA</description>
      <groupName>FLASH_CMPA</groupName>
      <baseAddress>0x3E400</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>BOOT_CFG</name>
          <description>no description available</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DEFAULT_ISP_MODE</name>
              <description>Default ISP mode:</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AUTO_ISP</name>
                  <description>Auto ISP</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USB_HID_ISP</name>
                  <description>USB_HID_ISP</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_ISP</name>
                  <description>UART ISP</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_ISP</name>
                  <description>SPI Slave ISP</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_ISP</name>
                  <description>I2C Slave ISP</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ISP fall through</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_SPEED</name>
              <description>Core clock:</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VALUE_0</name>
                  <description>Defined by NMPA.SYSTEM_SPEED_CODE</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>48MHz FRO</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_FAILURE_PIN</name>
              <description>GPIO port and pin number to use for indicating failure reason. The toggle rate of the pin is used to decode the error type. [2:0] - Defines GPIO port [7:3] - Defines GPIO pin</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FLASH_CFG</name>
          <description>no description available</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPI_RECOVERY_BOOT_EN</name>
              <description>SPI flash recovery boot is enabled, if non-zero value is written to this field.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_ID</name>
          <description>no description available</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USB_VENDOR_ID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PRODUCT_ID</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_CFG</name>
          <description>no description available</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CC_SOCU_PIN</name>
          <description>no description available</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NIDEN</name>
              <description>Non Secure non-invasive debug enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBGEN</name>
              <description>Non Secure debug enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPNIDEN</name>
              <description>Secure non-invasive debug enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPIDEN</name>
              <description>Secure invasive debug enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TAPEN</name>
              <description>JTAG TAP enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ISP_CMD_EN</name>
              <description>ISP Boot Command enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FA_ME_CMD_EN</name>
              <description>FA Command enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Use DAP to enable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Fixed state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UUID_CHECK</name>
              <description>Enforce UUID match during Debug authentication.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INVERSE_VALUE</name>
              <description>inverse value of bits [15:0]</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CC_SOCU_DFLT</name>
          <description>no description available</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NIDEN</name>
              <description>Non Secure non-invasive debug fixed state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBGEN</name>
              <description>Non Secure debug fixed state</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPNIDEN</name>
              <description>Secure non-invasive debug fixed state</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPIDEN</name>
              <description>Secure invasive debug fixed state</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TAPEN</name>
              <description>JTAG TAP fixed state</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ISP_CMD_EN</name>
              <description>ISP Boot Command fixed state</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FA_ME_CMD_EN</name>
              <description>FA Command fixed state</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERSE_VALUE</name>
              <description>inverse value of bits [15:0]</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VENDOR_USAGE</name>
          <description>no description available</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VENDOR_USAGE</name>
              <description>Upper 16 bits of vendor usage field defined in DAP. Lower 16-bits come from customer field area.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SECURE_BOOT_CFG</name>
          <description>Secure boot configuration flags.</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSA4K</name>
              <description>Use RSA4096 keys only.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VALUE_0</name>
                  <description>Allow RSA2048 and higher</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_1</name>
                  <description>RSA4096 only</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>RSA4096 only</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>RSA4096 only</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DICE_INC_NXP_CFG</name>
              <description>Include NXP area in DICE computation.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_INCLUD</name>
                  <description>not included</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INCLUD</name>
                  <description>included</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>included</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>included</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DICE_CUST_CFG</name>
              <description>Include Customer factory area (including keys) in DICE computation.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_INCLUD</name>
                  <description>not included</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNCLUD</name>
                  <description>included</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>included</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>included</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SKIP_DICE</name>
              <description>Skip DICE computation</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable DICE</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable DICE</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Disable DICE</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Disable DICE</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TZM_IMAGE_TYPE</name>
              <description>TrustZone-M mode</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VALUE_0</name>
                  <description>TZ-M image mode is taken from application image header</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_1</name>
                  <description>TZ-M disabled image, boots to non-secure mode</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>TZ-M enabled image, boots to secure mode</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>TZ-M enabled image with TZ-M preset, boot to secure mode TZ-M pre-configured by data from application image header</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BLOCK_SET_KEY</name>
              <description>Block PUF key code generation</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALLOW</name>
                  <description>Allow PUF Key Code generation</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable PUF Key Code generation</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Disable PUF Key Code generation</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Disable PUF Key Code generation</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BLOCK_ENROLL</name>
              <description>Block PUF enrollement</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALLOW</name>
                  <description>Allow PUF enroll operation</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable PUF enroll operation</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Disable PUF enroll operation</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Disable PUF enroll operation</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DICE_INC_SEC_EPOCH</name>
              <description>Include security EPOCH in DICE</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_INCLUD</name>
                  <description>not included</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INCLUD</name>
                  <description>included</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>included</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>included</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SKIP_BOOT_SEED</name>
              <description>Skip boot seed computation</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable BOOT_SEED</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable BOOT_SEED</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Disable BOOT_SEED</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Disable BOOT_SEED</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_SEED_INC_NXP_CFG</name>
              <description>Include NXP area in BOOT SEED computation</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_INCLUD</name>
                  <description>not included</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INCLUD</name>
                  <description>included</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>included</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>included</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_SEED_CUST_CFG</name>
              <description>Include CMPA area in BOOT SEED computation</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_INCLUD</name>
                  <description>not included</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INCLUD</name>
                  <description>included</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>included</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>included</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_SEED_INC_EPOCH</name>
              <description>Include security epoch area in BOOT_SEED computation.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_INCLUD</name>
                  <description>not included</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INCLUD</name>
                  <description>included</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>included</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>included</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEC_BOOT_EN</name>
              <description>Secure boot enable</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Plain image (internal flash with or without CRC)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Boot signed images. (internal flash, RSA signed)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Boot signed images. (internal flash, RSA signed)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Boot signed images. (internal flash, RSA signed)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_BASE_ADDR</name>
          <description>no description available</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR0_PRG</name>
              <description>Programmable portion of the base address of region 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR1_PRG</name>
              <description>Programmable portion of the base address of region 1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR2_PRG</name>
              <description>Programmable portion of the base address of region 2</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOCK_REG0</name>
              <description>Lock PRINCE region0 settings</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCK</name>
                  <description>Region is not locked</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>Region is locked</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Region is locked</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Region is locked</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_REG1</name>
              <description>Lock PRINCE region1 settings</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCK</name>
                  <description>Region is not locked</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>Region is locked</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Region is locked</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Region is locked</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REG0_ERASE_CHECK_EN</name>
              <description>For PRINCE region0 enable checking whether all encrypted pages are erased together</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Region is disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Region is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Region is enabled</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Region is enabled</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REG1_ERASE_CHECK_EN</name>
              <description>For PRINCE region1 enable checking whether all encrypted pages are erased together</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Region is disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Region is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Region is enabled</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Region is enabled</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REG2_ERASE_CHECK_EN</name>
              <description>For PRINCE region2 enable checking whether all encrypted pages are erased together</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Region is disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Region is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_2</name>
                  <description>Region is enabled</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_3</name>
                  <description>Region is enabled</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_SR_0</name>
          <description>Region 0, sub-region enable</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_SR_1</name>
          <description>Region 1, sub-region enable</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_SR_2</name>
          <description>Region 2, sub-region enable</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_32KHZ_CAPABANK_TRIM</name>
          <description>Xtal 32kHz capabank triming.</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TRIM_VALID</name>
              <description>XTAL 32kHz capa bank trimmings</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_TRIM</name>
                  <description>Capa Bank trimmings not valid. Default trimmings value are used</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Capa Bank trimmings valid</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XTAL_LOAD_CAP_IEC_PF_X100</name>
              <description>Load capacitance, pF x 100. For example, 6pF becomes 600.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCB_XIN_PARA_CAP_PF_X100</name>
              <description>PCB XIN parasitic capacitance, pF x 100. For example, 6pF becomes 600.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCB_XOUT_PARA_CAP_PF_X100</name>
              <description>PCB XOUT parasitic capacitance, pF x 100. For example, 6pF becomes 600.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_16MHZ_CAPABANK_TRIM</name>
          <description>Xtal 16MHz capabank triming.</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TRIM_VALID</name>
              <description>XTAL 16MHz capa bank trimmings</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_TRIM</name>
                  <description>Capa Bank trimmings not valid. Default trimmings value are used</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Capa Bank trimmings valid</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XTAL_LOAD_CAP_IEC_PF_X100</name>
              <description>Load capacitance, pF x 100. For example, 6pF becomes 600.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCB_XIN_PARA_CAP_PF_X100</name>
              <description>PCB XIN parasitic capacitance, pF x 100. For example, 6pF becomes 600.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCB_XOUT_PARA_CAP_PF_X100</name>
              <description>PCB XOUT parasitic capacitance, pF x 100. For example, 6pF becomes 600.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_REMAP_SIZE</name>
          <description>This 32-bit register contains the size of the image to remap, in bytes. The 12 LSBs are ignored, so the size granularity is 4KB.</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_REMAP_OFFSET</name>
          <description>This 32-bit register contains the offset by which the image is to be remapped. The 12 LSBs are ignored, so the remap granularity is 4KB.</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ROTKH[%s]</name>
          <description>ROTKHindex for Root of Trust Keys Table hash[(((7 - index) * 32) + 31):((7 - index) * 32)]</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>56</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CUSTOMER_DEFINED[%s]</name>
          <description>Customer Defined (Programable through ROM API)</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SHA256_DIGEST[%s]</name>
          <description>SHA256_DIGESTindex for DIGEST[((index * 32) + 31):(index * 32)]</description>
          <addressOffset>0x1E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLASH_KEY_STORE</name>
      <description>FLASH_KEY_STORE</description>
      <groupName>FLASH_KEY_STORE</groupName>
      <baseAddress>0x3E600</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x600</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>HEADER</name>
          <description>Valid Key Sore Header : 0x95959595</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>puf_discharge_time_in_ms</name>
          <description>puf discharge time in ms.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>298</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ACTIVATION_CODE[%s]</name>
          <description>.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_HEADER0</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE0</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_HEADER1</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4B4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE1</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4B4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY0</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4B8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE2</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4B8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY1</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4BC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE3</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4BC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY2</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE4</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY3</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE5</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY4</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE6</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY5</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE7</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY6</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4D0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE8</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4D0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY7</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4D4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE9</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4D4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY8</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4D8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE10</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4D8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY9</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4DC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE11</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4DC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY10</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE12</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_BODY11</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SBKEY_KEY_CODE13</name>
          <description>.</description>
          <alternateGroup>SBKEY_KEY_CODE</alternateGroup>
          <addressOffset>0x4E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_HEADER0</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4E8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE0</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4E8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_HEADER1</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4EC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE1</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4EC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY0</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4F0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE2</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4F0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY1</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4F4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE3</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4F4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY2</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4F8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE4</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4F8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY3</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4FC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE5</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x4FC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY4</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x500</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE6</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x500</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY5</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x504</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE7</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x504</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY6</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x508</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE8</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x508</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY7</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x50C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE9</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x50C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY8</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x510</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE10</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x510</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY9</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x514</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE11</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x514</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY10</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x518</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE12</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x518</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_BODY11</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x51C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_KEK_KEY_CODE13</name>
          <description>.</description>
          <alternateGroup>USER_KEK_KEY_CODE</alternateGroup>
          <addressOffset>0x51C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_HEADER0</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x520</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE0</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x520</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_HEADER1</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x524</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE1</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x524</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY0</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x528</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE2</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x528</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY1</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x52C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE3</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x52C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY2</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x530</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE4</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x530</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY3</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x534</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE5</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x534</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY4</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x538</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE6</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x538</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY5</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x53C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE7</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x53C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY6</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x540</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE8</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x540</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY7</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x544</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE9</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x544</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY8</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x548</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE10</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x548</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY9</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x54C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE11</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x54C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY10</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x550</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE12</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x550</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_BODY11</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x554</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDS_KEY_CODE13</name>
          <description>.</description>
          <alternateGroup>UDS_KEY_CODE</alternateGroup>
          <addressOffset>0x554</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_HEADER0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x558</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x558</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_HEADER1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x55C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x55C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x560</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE2</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x560</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x564</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE3</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x564</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY2</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x568</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE4</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x568</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY3</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x56C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE5</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x56C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY4</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x570</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE6</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x570</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY5</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x574</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE7</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x574</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY6</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x578</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE8</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x578</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY7</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x57C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE9</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x57C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY8</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x580</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE10</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x580</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY9</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x584</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE11</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x584</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY10</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x588</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE12</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x588</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_BODY11</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x58C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION0_KEY_CODE13</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION0_KEY_CODE</alternateGroup>
          <addressOffset>0x58C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_HEADER0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x590</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x590</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_HEADER1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x594</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x594</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x598</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE2</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x598</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x59C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE3</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x59C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY2</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE4</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY3</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5A4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE5</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5A4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY4</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5A8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE6</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5A8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY5</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5AC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE7</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5AC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY6</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE8</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY7</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5B4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE9</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5B4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY8</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5B8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE10</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5B8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY9</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5BC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE11</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5BC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY10</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE12</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_BODY11</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION1_KEY_CODE13</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION1_KEY_CODE</alternateGroup>
          <addressOffset>0x5C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_HEADER0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_HEADER1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TYPE</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDEX</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY0</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5D0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE2</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5D0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY1</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5D4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE3</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5D4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY2</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5D8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE4</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5D8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY3</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5DC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE5</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5DC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY4</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE6</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY5</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE7</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY6</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5E8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE8</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5E8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY7</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5EC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE9</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5EC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY8</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5F0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE10</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5F0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY9</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5F4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE11</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5F4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY10</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5F8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE12</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5F8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_BODY11</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5FC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRINCE_REGION2_KEY_CODE13</name>
          <description>.</description>
          <alternateGroup>PRINCE_REGION2_KEY_CODE</alternateGroup>
          <addressOffset>0x5FC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLASH_ROMPATCH</name>
      <description>FLASH_ROMPATCH</description>
      <groupName>FLASH_ROMPATCH</groupName>
      <baseAddress>0x3EC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>HEADER</name>
          <description>.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENTRIES</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUB_TYPE</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TYPE</name>
              <description>.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDENTIFIER</name>
              <description>.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>255</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PATCH[%s]</name>
          <description>.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH</name>
              <description>.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLASH_NMPA</name>
      <description>FLASH_NMPA</description>
      <groupName>FLASH_NMPA</groupName>
      <baseAddress>0x3FC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xCC0</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>GPO0_0</name>
          <description>GPO0 register 0 description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRO_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRO32K_NTAT</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRO32K_PTAT</name>
              <description>no description available</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRO32K_CAPCAL</name>
              <description>no description available</description>
              <bitOffset>7</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO0_ARRAY0</name>
          <description>GPO0 array description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO0_1</name>
          <description>GPO0 register 1 description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO0_ARRAY1</name>
          <description>GPO0 array description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO0_2</name>
          <description>GPO0 register 2 description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYSTEM_SPEED_CODE</name>
              <description>00 : FRO12MHz 01 : FRO24MHz 10 : FRO48MHz 11 : FRO96MHz</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_CTRL_OPMODE</name>
              <description>00 : Delay Line 01 : RCLK (back up clock) 10 : PCLK (back up clock)</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO0_ARRAY2</name>
          <description>GPO0 array description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO0_3</name>
          <description>GPO0 register 3 description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO0_ARRAY3</name>
          <description>GPO0 array description</description>
          <alternateGroup>GPO0</alternateGroup>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_0</name>
          <description>GPO1 register 0 description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FINAL_TEST_NOT_DONE</name>
              <description>FINAL_TEST_NOT_DONE[3:0]: 1010 : Final Test Not Done. All Other values: Final Test Done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARTCONFIG</name>
              <description>Device type number. (E.g : LPC5569 stored as 69 decimal)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_TYPE_SEC</name>
              <description>Security device type: 0: LPC55xxx (Non Secure Familly) 1: LPC55Sxxx (Secure Familly)</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_SIZE</name>
              <description>SRAM_SIZE[3:0]: (For Niobe4) 0000 : 320 KB 0001 : 256 KB 0010 : 144 KB 0011 : 80 KB (For Niobe4 Mini) 0100 : 96 KB 0101 : 80 KB 0110 : 64 KB 0111 : 48 KB All others : RESERVED</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU0_SECURITY_EXTENSION_DISABLE</name>
              <description>CPU0_SECURITY_EXTENSION_DISABLE[3:0]: 1010 : CPU0 Security Extension is disabled. All Other values: CPU0 Security Extension is enabled.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM_REVISION_MINOR</name>
              <description>ROM Revision-Minor [3:0]</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>METAL_REVISION_ID</name>
              <description>METAL REVISION ID[3:0]</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_ARRAY0</name>
          <description>GPO1 array description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_1</name>
          <description>GPO1 register 1 description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ROM_PATCH_VERSION</name>
              <description>ROM Patch Version [3:0]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CUSTOMER_REVISION_ID</name>
              <description>CUSTOMER REVISION ID[3:0]</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_ARRAY1</name>
          <description>GPO1 array description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_2</name>
          <description>GPO1 register 2 description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HVST</name>
              <description>High Voltage Stress: 0=not done; 1=done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_ARRAY2</name>
          <description>GPO1 array description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_3</name>
          <description>GPO1 register 3 description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO1_ARRAY3</name>
          <description>GPO1 array description</description>
          <alternateGroup>GPO1</alternateGroup>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_0</name>
          <description>GPO2 register 0 description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USBHS_PHY_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_USB_REG_ENV_TAIL_ADJ_VD</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_USBPHY_TX_D_CAL</name>
              <description>no description available</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_USBPHY_TX_CAL45DP</name>
              <description>no description available</description>
              <bitOffset>7</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_USBPHY_TX_CAL45DN</name>
              <description>no description available</description>
              <bitOffset>12</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_USB2_REFBIAS_TST</name>
              <description>no description available</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_USB2_REFBIAS_VBGADJ</name>
              <description>no description available</description>
              <bitOffset>19</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_PLL_CTRL0_DIV_SEL</name>
              <description>no description available</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_SIZE</name>
              <description>(For Niobe4) 000 : 640 KB 001 : 512 KB 010 : 256 KB 011 : 128 KB 100 : 0 KB All others : RESERVED (For Niobe4 Mini) FLASH_SIZE[2:0] 000 : 256 KB 001 : 128 KB 010 : 80 KB (reserved) 011 : 64 KB 100 : 0 kB (reserved) All others : RESERVED</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU0_SECURITY_EXTENSION_DISABLE</name>
              <description>CPU0_SECURITY_EXTENSION_DISABLE[3:0]: 1010 : CPU0 Security Extension is disabled. All Other values: CPU0 Security Extension is enabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_ARRAY0</name>
          <description>GPO2 array description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_1</name>
          <description>GPO2 register 1 description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_ARRAY1</name>
          <description>GPO2 array description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_2</name>
          <description>GPO2 register 2 description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_ARRAY2</name>
          <description>GPO2 array description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_3</name>
          <description>GPO2 register 3 description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO2_ARRAY3</name>
          <description>GPO2 array description</description>
          <alternateGroup>GPO2</alternateGroup>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_0</name>
          <description>GPO3 register 0 description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AUX_BIAS_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUX_BIAS_ITRIM</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUX_BIAS_PTAT_ITRIM</name>
              <description>no description available</description>
              <bitOffset>6</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUX_BIAS_VREF1_VTRIM</name>
              <description>no description available</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUX_BIAS_VREF1_VCURVE_TRIM</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>19</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODELNUM_EXTENSION</name>
              <description>ModelNumber extension[2:0]</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FINAL_TEST_NOT_DONE</name>
              <description>FINAL_TEST_NOT_DONE[3:0]: 1010 : Final Test Not Done. All Other values: Final Test Done.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_ARRAY0</name>
          <description>GPO3 array description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_1</name>
          <description>GPO3 register 1 description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_ARRAY1</name>
          <description>GPO3 array description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_2</name>
          <description>GPO3 register 2 description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_ARRAY2</name>
          <description>GPO3 array description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_3</name>
          <description>GPO3 register 3 description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO3_ARRAY3</name>
          <description>GPO3 array description</description>
          <alternateGroup>GPO3</alternateGroup>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_0</name>
          <description>checksum of the GPO data in words 0</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_ARRAY0</name>
          <description>checksum of the GPO data in words [3:0]</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_1</name>
          <description>checksum of the GPO data in words 1</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_ARRAY1</name>
          <description>checksum of the GPO data in words [3:0]</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_2</name>
          <description>checksum of the GPO data in words 2</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_ARRAY2</name>
          <description>checksum of the GPO data in words [3:0]</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_3</name>
          <description>checksum of the GPO data in words 3</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPO_CHECKSUM_ARRAY3</name>
          <description>checksum of the GPO data in words [3:0]</description>
          <alternateGroup>GPO_CHECKSUM</alternateGroup>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_0</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_ARRAY0</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_1</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_ARRAY1</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_2</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_ARRAY2</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_3</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_BATCH_ID_ARRAY3</name>
          <description>no description available</description>
          <alternateGroup>FINAL_TEST_BATCH_ID</alternateGroup>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEVICE_TYPE</name>
          <description>no description available</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DEVICE_TYPE_NUM</name>
              <description>Device type number. (E.g : LPC5569 stored as 5569 decimal)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_TYPE_SEC</name>
              <description>Security device type: 0: LPC55xxx (Non Secure Familly) 1: LPC55Sxxx (Secure Familly)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_TYPE_PKG</name>
              <description>Device package type: 0000 : HLQFP 0001 : HTQFP 0010 : HVQFN 0100 : VFBGA 1000 : WLCSP</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_TYPE_PIN</name>
              <description>Number of pins on the package.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_PROGRAM_VERSION</name>
          <description>no description available</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PROGRAM_VERSION</name>
              <description>PROGRAM_VERSION [xx.yy stored as : 100*x+y]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_DATE</name>
          <description>no description available</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATE</name>
              <description>DATE [stored as : year*10000+month*100+day]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FINAL_TEST_TIME</name>
          <description>no description available</description>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TIME</name>
              <description>TIME [stored as : hour*10000+minute*100+seconde]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_0</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_ARRAY0</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_1</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_ARRAY1</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_2</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_ARRAY2</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_3</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UUID_ARRAY3</name>
          <description>no description available</description>
          <alternateGroup>UUID</alternateGroup>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAFER_TEST1_PROGRAM_VERSION</name>
          <description>no description available</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WT1_PROGRAM_VERSION</name>
              <description>WT1_PROGRAM_VERSION [xx.yy stored as : 100*x+y]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAFER_TEST1_DATE</name>
          <description>no description available</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WT1_DATE</name>
              <description>WT1_DATE [stored as : year*10000+month*100+day]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAFER_TEST1_TIME</name>
          <description>no description available</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WT1_TIME</name>
              <description>WT1_TIME [stored as : hour*10000+minute*100+seconde]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAFER_TEST2_PROGRAM_VERSION</name>
          <description>no description available</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WT2_PROGRAM_VERSION</name>
              <description>WT2_PROGRAM_VERSION [xx.yy stored as : 100*x+y]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAFER_TEST2_DATE</name>
          <description>no description available</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WT2_DATE</name>
              <description>WT2_DATE [stored as : year*10000+month*100+day]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAFER_TEST2_TIME</name>
          <description>no description available</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WT2_TIME</name>
              <description>WT2_TIME [stored as : hour*10000+minute*100+seconde]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBCFG</name>
          <description>no description available</description>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XO32M_READY_TIME_OUT_MS</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_SPEED</name>
              <description>USB_SPEED[7:0]= 0x00 : USB High Speed Module used for ISP 0x01 : USB Full SPeed Module used for ISP 0x02 : Neither USB High Speed module nor USB Full Speed module used for ISP 0x03 - 0xFF : RESERVED</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_USE_XO32M_CAPA_BANKS</name>
              <description>Enable the use of Crystal 32 MHz internal Capa Banks during the configuration of the High Speed USB for ISP: 0: Disable Crystal 32 MHz CapaBanks. 1: Enable Crystal 32 MHz CapaBanks.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIPHENCFG</name>
          <description>no description available</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PERIPHERAL_CONFIGURATION</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU1_ENABLE</name>
              <description>no description available</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RAMSIZECFG</name>
          <description>no description available</description>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SRAM_CONFIGURATION</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASHSIZECFG</name>
          <description>no description available</description>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASH_CONFIGURATION</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RINGO_0</name>
          <description>no description available</description>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RINGO_0_CTRL_VALID</name>
              <description>1: RINGO_0_CTRL is valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RINGO_0_CTRL</name>
              <description>To copy RINGO_0_CTRL = ANACTRL-&gt;RINGO0_CTRL[30:0]</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RINGO_1</name>
          <description>no description available</description>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RINGO_1_CTRL_VALID</name>
              <description>1: RINGO_1_CTRL is valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RINGO_1_CTRL</name>
              <description>To copy RINGO_1_CTRL = ANACTRL-&gt;RINGO1_CTRL[30:0]</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RINGO_2</name>
          <description>no description available</description>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RINGO_2_CTRL_VALID</name>
              <description>1: RINGO_2_CTRL is valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RINGO_2_CTRL</name>
              <description>To copy RINGO_2_CTRL = ANACTRL-&gt;RINGO2_CTRL[30:0]</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRO_192MHZ</name>
          <description>no description available</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRO192M_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRO192M_BIASTRIM</name>
              <description>FRO192M_BIASTRIM[5:0].</description>
              <bitOffset>1</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRO192M_TEMPTRIM</name>
              <description>FRO192M_TEMPTRIM[6:0].</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRO192M_DACTRIM</name>
              <description>FRO192M_DACTRIM[7:0].</description>
              <bitOffset>17</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XO_32MHZ</name>
          <description>no description available</description>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XO32M_XIN_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32M_XIN_CAPCAL_6PF</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32M_XIN_CAPCAL_8PF</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32M_XOUT_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32M_XOUT_CAPCAL_6PF</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32M_XOUT_CAPCAL_8PF</name>
              <description>no description available</description>
              <bitOffset>23</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32M_XO_SLAVE_STATUS</name>
              <description>no description available</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32M_XO_AC_BUF_STATUS</name>
              <description>no description available</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XO_32KHZ</name>
          <description>no description available</description>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XO32K_XIN_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32K_XIN_CAPCAL_6PF</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32K_XIN_CAPCAL_8PF</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32K_XOUT_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32K_XOUT_CAPCAL_6PF</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XO32K_XOUT_CAPCAL_8PF</name>
              <description>no description available</description>
              <bitOffset>23</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRO_1MHZ</name>
          <description>no description available</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRO1M_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRO1M_FREQSEL</name>
              <description>Frequency trimming bits.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_HIGH_0</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_HIGH</alternateGroup>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCDC_TRIM_VALID</name>
              <description>DCDC is trimed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RC</name>
              <description>Constant On-Time calibration.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICOMP</name>
              <description>Select the type of ZCD comparator.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISEL</name>
              <description>Alter Internal biasing currents.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICENABLE</name>
              <description>Selection of auto scaling of COT period with variations in VDD.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TMOS</name>
              <description>One-shot generator reference current trimming signal.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DISABLEISENSE</name>
              <description>Disable Current sensing.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT</name>
              <description>Set output regulation voltage.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLICINGENABLE</name>
              <description>Enable staggered switching of power switches.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDUCTORCLAMPENABLE</name>
              <description>Enable shorting of Inductor during PFM idle time.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT_PWD</name>
              <description>Set output regulation voltage during Deep Sleep.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_HIGH_ARRAY0</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_HIGH</alternateGroup>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_HIGH_1</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_HIGH</alternateGroup>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RTRIMOFFET</name>
              <description>Adjust the offset voltage of BJT based comparator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSENSETRIM</name>
              <description>Adjust Max inductor peak current limiting.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTENABLE</name>
              <description>Enable Digital test signals.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETCURVE</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETDC</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTSEL</name>
              <description>Select the output signal for test.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISCALEENABLE</name>
              <description>Modify COT behavior.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEBYPASS</name>
              <description>Force bypass mode.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIMAUTOCOT</name>
              <description>Change the scaling ratio of the feedforward compensation.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEFULLCYCLE</name>
              <description>Force full PFM PMOS and NMOS cycle.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCENABLE</name>
              <description>Change the range of the peak detector of current inside the inductor.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFF</name>
              <description>Constant Off-Time calibration input.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFFENABLE</name>
              <description>Enable Constant Off-Time feature.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_HIGH_ARRAY1</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_HIGH</alternateGroup>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_LOW_0</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_LOW</alternateGroup>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCDC_TRIM_VALID</name>
              <description>DCDC is trimed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RC</name>
              <description>Constant On-Time calibration.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICOMP</name>
              <description>Select the type of ZCD comparator.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISEL</name>
              <description>Alter Internal biasing currents.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICENABLE</name>
              <description>Selection of auto scaling of COT period with variations in VDD.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TMOS</name>
              <description>One-shot generator reference current trimming signal.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DISABLEISENSE</name>
              <description>Disable Current sensing.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT</name>
              <description>Set output regulation voltage.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLICINGENABLE</name>
              <description>Enable staggered switching of power switches.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDUCTORCLAMPENABLE</name>
              <description>Enable shorting of Inductor during PFM idle time.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT_PWD</name>
              <description>Set output regulation voltage during Deep Sleep.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_LOW_ARRAY0</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_LOW</alternateGroup>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_LOW_1</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_LOW</alternateGroup>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RTRIMOFFET</name>
              <description>Adjust the offset voltage of BJT based comparator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSENSETRIM</name>
              <description>Adjust Max inductor peak current limiting.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTENABLE</name>
              <description>Enable Digital test signals.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETCURVE</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETDC</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTSEL</name>
              <description>Select the output signal for test.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISCALEENABLE</name>
              <description>Modify COT behavior.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEBYPASS</name>
              <description>Force bypass mode.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIMAUTOCOT</name>
              <description>Change the scaling ratio of the feedforward compensation.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEFULLCYCLE</name>
              <description>Force full PFM PMOS and NMOS cycle.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCENABLE</name>
              <description>Change the range of the peak detector of current inside the inductor.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFF</name>
              <description>Constant Off-Time calibration input.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFFENABLE</name>
              <description>Enable Constant Off-Time feature.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_LOW_ARRAY1</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_LOW</alternateGroup>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_MEDIUM_0</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_MEDIUM</alternateGroup>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCDC_TRIM_VALID</name>
              <description>DCDC is trimed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RC</name>
              <description>Constant On-Time calibration.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICOMP</name>
              <description>Select the type of ZCD comparator.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISEL</name>
              <description>Alter Internal biasing currents.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICENABLE</name>
              <description>Selection of auto scaling of COT period with variations in VDD.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TMOS</name>
              <description>One-shot generator reference current trimming signal.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DISABLEISENSE</name>
              <description>Disable Current sensing.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT</name>
              <description>Set output regulation voltage.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLICINGENABLE</name>
              <description>Enable staggered switching of power switches.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDUCTORCLAMPENABLE</name>
              <description>Enable shorting of Inductor during PFM idle time.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT_PWD</name>
              <description>Set output regulation voltage during Deep Sleep.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_MEDIUM_ARRAY0</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_MEDIUM</alternateGroup>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_MEDIUM_1</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_MEDIUM</alternateGroup>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RTRIMOFFET</name>
              <description>Adjust the offset voltage of BJT based comparator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSENSETRIM</name>
              <description>Adjust Max inductor peak current limiting.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTENABLE</name>
              <description>Enable Digital test signals.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETCURVE</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETDC</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTSEL</name>
              <description>Select the output signal for test.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISCALEENABLE</name>
              <description>Modify COT behavior.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEBYPASS</name>
              <description>Force bypass mode.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIMAUTOCOT</name>
              <description>Change the scaling ratio of the feedforward compensation.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEFULLCYCLE</name>
              <description>Force full PFM PMOS and NMOS cycle.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCENABLE</name>
              <description>Change the range of the peak detector of current inside the inductor.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFF</name>
              <description>Constant Off-Time calibration input.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFFENABLE</name>
              <description>Enable Constant Off-Time feature.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC_POWER_PROFILE_MEDIUM_ARRAY1</name>
          <description>no description available</description>
          <alternateGroup>DCDC_POWER_PROFILE_MEDIUM</alternateGroup>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOD</name>
          <description>no description available</description>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOD_VBAT_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD_VBAT_TRIGLVL</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD_VBAT_HYST</name>
              <description>no description available</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD_CORE_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD_CORE_TRIGLVL</name>
              <description>no description available</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD_CORE_HYST</name>
              <description>no description available</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LDO_AO</name>
          <description>no description available</description>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ACTIVE_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACTIVE_TRIM</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSLP_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSLP_TRIM</name>
              <description>no description available</description>
              <bitOffset>9</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDWN_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDWN_TRIM</name>
              <description>no description available</description>
              <bitOffset>17</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DPDW_TRIM_VALID</name>
              <description>no description available</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DPDW_TRIM</name>
              <description>no description available</description>
              <bitOffset>25</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_DELAY</name>
          <description>no description available</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDIO_0_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_0_DELAY</name>
              <description>SDIO_0_DELAY (unit: 100 ps).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_0</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_0</name>
              <description>VREF1VCURVETRIM_0 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_1</name>
              <description>VREF1VCURVETRIM_1 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_ARRAY0</name>
          <description>Aux Bias Curve Ambient (30degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_1</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_2</name>
              <description>VREF1VCURVETRIM_2 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_3</name>
              <description>VREF1VCURVETRIM_3 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_ARRAY1</name>
          <description>Aux Bias Curve Ambient (30degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_2</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_4</name>
              <description>VREF1VCURVETRIM_4 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_5</name>
              <description>VREF1VCURVETRIM_5 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_ARRAY2</name>
          <description>Aux Bias Curve Ambient (30degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_3</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_6</name>
              <description>VREF1VCURVETRIM_6 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_7</name>
              <description>VREF1VCURVETRIM_7 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_AMBIENT_ARRAY3</name>
          <description>Aux Bias Curve Ambient (30degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_AMBIENT</alternateGroup>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_0</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_0</name>
              <description>VREF1VCURVETRIM_0 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_1</name>
              <description>VREF1VCURVETRIM_1 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_ARRAY0</name>
          <description>Aux Bias Curve TEMP (105degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_1</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_2</name>
              <description>VREF1VCURVETRIM_2 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_3</name>
              <description>VREF1VCURVETRIM_3 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_ARRAY1</name>
          <description>Aux Bias Curve TEMP (105degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_2</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_4</name>
              <description>VREF1VCURVETRIM_4 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_5</name>
              <description>VREF1VCURVETRIM_5 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_ARRAY2</name>
          <description>Aux Bias Curve TEMP (105degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_3</name>
          <description>no description available</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VREF1VCURVETRIM_6</name>
              <description>VREF1VCURVETRIM_6 (unit: 100uV)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM_7</name>
              <description>VREF1VCURVETRIM_7 (unit: 100uV)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS_CURVE_TEMP_ARRAY3</name>
          <description>Aux Bias Curve TEMP (105degC)</description>
          <alternateGroup>AUX_BIAS_CURVE_TEMP</alternateGroup>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEMP_SENS_VBE1VBE8_REF_1</name>
          <description>no description available</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VBE1</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBE8</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEMP_SENS_VBE1VBE8_REF_2</name>
          <description>no description available</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VBE1</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBE8</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEMP_SENS_SLOPE</name>
          <description>no description available</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOPE_x1024</name>
              <description>SLOPE_x1024[30:0]</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEMP_SENS_OFFSET</name>
          <description>no description available</description>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_x1024</name>
              <description>OFFSET_x1024[30:0]</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_0_ARRAY0</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_0</alternateGroup>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_0_RINGO</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_0</alternateGroup>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RINGO_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RINGO_FREQ_HZ</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_0_ARRAY1</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_0</alternateGroup>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_0_DELAYS_LSB</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_0</alternateGroup>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DELAY_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_0</name>
              <description>Delay in us.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_1</name>
              <description>Delay in us.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_2</name>
              <description>Delay in us.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_0_ARRAY2</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_0</alternateGroup>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_0_DELAYS_MSB</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_0</alternateGroup>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DELAY_3</name>
              <description>Delay in us.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_4</name>
              <description>Delay in us.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_5</name>
              <description>Delay in us.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_1_ARRAY0</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_1</alternateGroup>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_1_RINGO</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_1</alternateGroup>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RINGO_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RINGO_FREQ_HZ</name>
              <description>no description available</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_1_ARRAY1</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_1</alternateGroup>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_1_DELAYS_LSB</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_1</alternateGroup>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DELAY_VALID</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_0</name>
              <description>Delay in us.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_1</name>
              <description>Delay in us.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_2</name>
              <description>Delay in us.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_1_ARRAY2</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_1</alternateGroup>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PVT_MONITOR_1_DELAYS_MSB</name>
          <description>no description available</description>
          <alternateGroup>PVT_MONITOR_1</alternateGroup>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DELAY_3</name>
              <description>Delay in us.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_4</name>
              <description>Delay in us.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_5</name>
              <description>Delay in us.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>13</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>NXP_DEVICE_PRIVATE_KEY[%s]</name>
          <description>no description available</description>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>NXP_DEVICE_CERTIFICATE_0[%s]</name>
          <description>NXP Device Certificate (ECDSA_sign - r[255:128])</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>NXP_DEVICE_CERTIFICATE_1[%s]</name>
          <description>NXP Device Certificate (ECDSA_sign - r[127:0])</description>
          <addressOffset>0x190</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>NXP_DEVICE_CERTIFICATE_2[%s]</name>
          <description>NXP Device Certificate (ECDSA_sign - s[255:128])</description>
          <addressOffset>0x1A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>NXP_DEVICE_CERTIFICATE_3[%s]</name>
          <description>NXP Device Certificate (ECDSA_sign - s[127:0])</description>
          <addressOffset>0x1B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SHA256_DIGEST[%s]</name>
          <description>SHA-256 DIGEST (9EC00 - 9FDBC) ROM Patch Area + NXP Area (IMPORTANT NOTE: Pages used for Repair (N-8 to N-3) are excluded from the computation) SHA256_DIGESTindex for DIGEST[((index * 32) + 31):(index * 32)]</description>
          <addressOffset>0x1C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_0</name>
          <description>no description available</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>COORD_Y</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COORD_X</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_ARRAY0</name>
          <description>ECID backup (the original is in page n-1)</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_1</name>
          <description>no description available</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAFER</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_ARRAY1</name>
          <description>ECID backup (the original is in page n-1)</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_2</name>
          <description>no description available</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1E8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOTID_LSB</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_ARRAY2</name>
          <description>ECID backup (the original is in page n-1)</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1E8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_3</name>
          <description>no description available</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1EC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOTID_MSB</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECID_BACKUP_ARRAY3</name>
          <description>ECID backup (the original is in page n-1)</description>
          <alternateGroup>ECID_BACKUP</alternateGroup>
          <addressOffset>0x1EC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIELD</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CHECKSUM[%s]</name>
          <description>Checksum of the whole page</description>
          <addressOffset>0x1F0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
        <register>
          <name>DIS_ROM_HIDING</name>
          <description>no description available</description>
          <addressOffset>0xCAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DIS_ROM_HIDING</name>
              <description>When 0x3CC35AA5 ROM hiding feture is disabled. All other values critical ROM is hidden.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PUF_SRAM</name>
          <description>no description available</description>
          <addressOffset>0xCBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PUF_SRAM_VALID</name>
              <description>1: PUF_SRAM is valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>mode</name>
              <description>PUF SRAM Controller operating mode</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ckgating</name>
              <description>PUF SRAM Clock Gating control</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMB</name>
              <description>Source Biasing voltage.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low leakage.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MEDIUM</name>
                  <description>Medium leakage.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGHEST</name>
                  <description>Highest leakage.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RM</name>
              <description>Read Margin control settings.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WM</name>
              <description>Write Margin control settings.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WRME</name>
              <description>Write read margin enable.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RAEN</name>
              <description>SRAM Read Assist Enable</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RAM</name>
              <description>SRAM Read Assist settings</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAEN</name>
              <description>SRAM Write Assist Enable</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAM</name>
              <description>SRAM Write Assist settings</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STBP</name>
              <description>STBP</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYSCON</name>
      <description>SYSCON</description>
      <groupName>SYSCON</groupName>
      <baseAddress>0x40000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>MEMORYREMAP</name>
          <description>Memory Remap control register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>MAP</name>
              <description>Select the location of the vector table :.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ROM0</name>
                  <description>Vector Table in ROM.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAM1</name>
                  <description>Vector Table in RAM.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASH0</name>
                  <description>Vector Table in Flash.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASH1</name>
                  <description>Vector Table in Flash.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBMATPRIO</name>
          <description>AHB Matrix priority control register Priority values are 3 = highest, 0 = lowest</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFF</resetMask>
          <fields>
            <field>
              <name>PRI_CPU0_CBUS</name>
              <description>CPU0 C-AHB bus.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_CPU0_SBUS</name>
              <description>CPU0 S-AHB bus.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_SDMA0</name>
              <description>DMA0 controller priority.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_SDMA1</name>
              <description>DMA1 controller priority.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_USB_FSD</name>
              <description>USB0-FS Device.(USB0)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_USB_FSH</name>
              <description>USB0-FS host.(USB0)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_HASH_AES</name>
              <description>HASH_AES.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_CANFD</name>
              <description>CANFD.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU0STCKCAL</name>
          <description>System tick calibration for secure part of CPU0</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFF</resetMask>
          <fields>
            <field>
              <name>TENMS</name>
              <description>Reload value for 10ms (100Hz) timing, subject to system clock skew errors. If the value reads as zero, the calibration value is not known.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SKEW</name>
              <description>Initial value for the Systick timer.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOREF</name>
              <description>Indicates whether the device provides a reference clock to the processor: 0 = reference clock provided; 1 = no reference clock provided.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU0NSTCKCAL</name>
          <description>System tick calibration for non-secure part of CPU0</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFF</resetMask>
          <fields>
            <field>
              <name>TENMS</name>
              <description>Reload value for 10 ms (100 Hz) timing, subject to system clock skew errors. If the value reads as zero, the calibration value is not known.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SKEW</name>
              <description>Indicates whether the TENMS value is exact: 0 = TENMS value is exact; 1 = TENMS value is inexact, or not given.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOREF</name>
              <description>Initial value for the Systick timer.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NMISRC</name>
          <description>NMI Source Select</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC0003F3F</resetMask>
          <fields>
            <field>
              <name>IRQCPU0</name>
              <description>The IRQ number of the interrupt that acts as the Non-Maskable Interrupt (NMI) for the CPU0, if enabled by NMIENCPU0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NMIENCPU0</name>
              <description>Write a 1 to this bit to enable the Non-Maskable Interrupt (NMI) source selected by IRQCPU0.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESETCTRL0</name>
          <description>Peripheral reset control 0</description>
          <alternateGroup>PRESETCTRL</alternateGroup>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xCFFE9FA</resetMask>
          <fields>
            <field>
              <name>ROM_RST</name>
              <description>ROM reset control.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_CTRL1_RST</name>
              <description>SRAM Controller 1 reset control.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_CTRL2_RST</name>
              <description>SRAM Controller 2 reset control.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLASH_RST</name>
              <description>Flash controller reset control.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FMC_RST</name>
              <description>FMC controller reset control.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MUX_RST</name>
              <description>Input Mux reset control.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IOCON_RST</name>
              <description>I/O controller reset control.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO0_RST</name>
              <description>GPIO0 reset control.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO1_RST</name>
              <description>GPIO1 reset control.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PINT_RST</name>
              <description>Pin interrupt (PINT) reset control.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GINT_RST</name>
              <description>Group interrupt (GINT) reset control.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_RST</name>
              <description>DMA0 reset control.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRCGEN_RST</name>
              <description>CRCGEN reset control.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WWDT_RST</name>
              <description>Watchdog Timer reset control.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC_RST</name>
              <description>Real Time Clock (RTC) reset control.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MAILBOX_RST</name>
              <description>Inter CPU communication Mailbox reset control.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_RST</name>
              <description>ADC reset control.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESETCTRLX0</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>PRESETCTRL</alternateGroup>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESETCTRL1</name>
          <description>Peripheral reset control 1</description>
          <alternateGroup>PRESETCTRL</alternateGroup>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xDE57FC47</resetMask>
          <fields>
            <field>
              <name>MRT_RST</name>
              <description>MRT reset control.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OSTIMER_RST</name>
              <description>OS Event Timer reset control.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCT_RST</name>
              <description>SCT reset control.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAN_RST</name>
              <description>CAN reset control.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UTICK_RST</name>
              <description>UTICK reset control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC0_RST</name>
              <description>FC0 reset control.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC1_RST</name>
              <description>FC1 reset control.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC2_RST</name>
              <description>FC2 reset control.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC3_RST</name>
              <description>FC3 reset control.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC4_RST</name>
              <description>FC4 reset control.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC5_RST</name>
              <description>FC5 reset control.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC6_RST</name>
              <description>FC6 reset control.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC7_RST</name>
              <description>FC7 reset control.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER2_RST</name>
              <description>Timer 2 reset control.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB0_DEV_RST</name>
              <description>USB0-FS DEV reset control.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER0_RST</name>
              <description>Timer 0 reset control.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER1_RST</name>
              <description>Timer 1 reset control.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESETCTRLX1</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>PRESETCTRL</alternateGroup>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESETCTRL2</name>
          <description>Peripheral reset control 2</description>
          <alternateGroup>PRESETCTRL</alternateGroup>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FFF77FE</resetMask>
          <fields>
            <field>
              <name>DMA1_RST</name>
              <description>DMA1 reset control.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMP_RST</name>
              <description>Comparator reset control.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_HOST_RST</name>
              <description>USB1-HS Host reset control.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_DEV_RST</name>
              <description>USB1-HS dev reset control.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_RAM_RST</name>
              <description>USB1-HS RAM reset control.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_PHY_RST</name>
              <description>USB1-HS PHY reset control.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQME_RST</name>
              <description>Frequency meter reset control.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CDOG_RST</name>
              <description>Code Watchdog reset control.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RNG_RST</name>
              <description>RNG reset control.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSCTL_RST</name>
              <description>SYSCTL Block reset.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB0_HOSTM_RST</name>
              <description>USB0-FS Host Master reset control.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB0_HOSTS_RST</name>
              <description>USB0-FS Host Slave reset control.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH_AES_RST</name>
              <description>HASH_AES reset control.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLULUT_RST</name>
              <description>PLU LUT reset control.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER3_RST</name>
              <description>Timer 3 reset control.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER4_RST</name>
              <description>Timer 4 reset control.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PUF_RST</name>
              <description>PUF reset control reset control.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CASPER_RST</name>
              <description>Casper reset control.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ANALOG_CTRL_RST</name>
              <description>analog control reset control.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_LSPI_RST</name>
              <description>HS LSPI reset control.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO_SEC_RST</name>
              <description>GPIO secure reset control.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO_SEC_INT_RST</name>
              <description>GPIO secure int reset control.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESETCTRLX2</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>PRESETCTRL</alternateGroup>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>3</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PRESETCTRLSET[%s]</name>
          <description>Peripheral reset control set register</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>3</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PRESETCTRLCLR[%s]</name>
          <description>Peripheral reset control clear register</description>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWR_RESET</name>
          <description>generate a software_reset</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWR_RESET</name>
              <description>Write 0x5A00_0001 to generate a software_reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Generate a software reset.</description>
                  <value>0x5A000001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBCLKCTRL0</name>
          <description>AHB Clock control 0</description>
          <alternateGroup>AHBCLKCTRL</alternateGroup>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x180</resetValue>
          <resetMask>0xCFFE9FA</resetMask>
          <fields>
            <field>
              <name>ROM</name>
              <description>Enables the clock for the ROM.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_CTRL1</name>
              <description>Enables the clock for the SRAM Controller 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_CTRL2</name>
              <description>Enables the clock for the SRAM Controller 2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLASH</name>
              <description>Enables the clock for the Flash controller.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FMC</name>
              <description>Enables the clock for the FMC controller.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MUX</name>
              <description>Enables the clock for the Input Mux.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IOCON</name>
              <description>Enables the clock for the I/O controller.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO0</name>
              <description>Enables the clock for the GPIO0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO1</name>
              <description>Enables the clock for the GPIO1.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PINT</name>
              <description>Enables the clock for the Pin interrupt (PINT).</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GINT</name>
              <description>Enables the clock for the Group interrupt (GINT).</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0</name>
              <description>Enables the clock for the DMA0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRCGEN</name>
              <description>Enables the clock for the CRCGEN.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WWDT</name>
              <description>Enables the clock for the Watchdog Timer.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC</name>
              <description>Enables the clock for the Real Time Clock (RTC).</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MAILBOX</name>
              <description>Enables the clock for the Inter CPU communication Mailbox.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC</name>
              <description>Enables the clock for the ADC.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBCLKCTRLX0</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>AHBCLKCTRL</alternateGroup>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBCLKCTRL1</name>
          <description>AHB Clock control 1</description>
          <alternateGroup>AHBCLKCTRL</alternateGroup>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xDE57FC47</resetMask>
          <fields>
            <field>
              <name>MRT</name>
              <description>Enables the clock for the MRT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OSTIMER</name>
              <description>Enables the clock for the OS Event Timer.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCT</name>
              <description>Enables the clock for the SCT.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAN</name>
              <description>Enables the clock for the CAN.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UTICK</name>
              <description>Enables the clock for the UTICK.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC0</name>
              <description>Enables the clock for the FC0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC1</name>
              <description>Enables the clock for the FC1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC2</name>
              <description>Enables the clock for the FC2.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC3</name>
              <description>Enables the clock for the FC3.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC4</name>
              <description>Enables the clock for the FC4.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC5</name>
              <description>Enables the clock for the FC5.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC6</name>
              <description>Enables the clock for the FC6.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC7</name>
              <description>Enables the clock for the FC7.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER2</name>
              <description>Enables the clock for the Timer 2.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB0_DEV</name>
              <description>Enables the clock for the USB0-FS device.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER0</name>
              <description>Enables the clock for the Timer 0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER1</name>
              <description>Enables the clock for the Timer 1.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBCLKCTRLX1</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>AHBCLKCTRL</alternateGroup>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBCLKCTRL2</name>
          <description>AHB Clock control 2</description>
          <alternateGroup>AHBCLKCTRL</alternateGroup>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FFF77FE</resetMask>
          <fields>
            <field>
              <name>DMA1</name>
              <description>Enables the clock for the DMA1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMP</name>
              <description>Enables the clock for the Comparator.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_HOST</name>
              <description>Enables the clock for the USB1-HS Host.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_DEV</name>
              <description>Enables the clock for the USB1-HS device.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_RAM</name>
              <description>Enables the clock for the USB1-HS RAM.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB1_PHY</name>
              <description>Enables the clock for the USB1-HS PHY.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQME</name>
              <description>Enables the clock for the Frequency meter.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CDOG</name>
              <description>Enables the clock for the code watchdog.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RNG</name>
              <description>Enables the clock for the RNG.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSCTL</name>
              <description>SYSCTL block clock.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB0_HOSTM</name>
              <description>Enables the clock for the USB0-FS Host Master.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB0_HOSTS</name>
              <description>Enables the clock for the USB0-FS Host Slave.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH_AES</name>
              <description>Enables the clock for the HASH_AES.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLULUT</name>
              <description>Enables the clock for the PLU LUT.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER3</name>
              <description>Enables the clock for the Timer 3.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER4</name>
              <description>Enables the clock for the Timer 4.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PUF</name>
              <description>Enables the clock for the PUF reset control.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CASPER</name>
              <description>Enables the clock for the Casper.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ANALOG_CTRL</name>
              <description>Enables the clock for the analog control.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_LSPI</name>
              <description>Enables the clock for the HS LSPI.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO_SEC</name>
              <description>Enables the clock for the GPIO secure.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO_SEC_INT</name>
              <description>Enables the clock for the GPIO secure int.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBCLKCTRLX2</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>AHBCLKCTRL</alternateGroup>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>3</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>AHBCLKCTRLSET[%s]</name>
          <description>Peripheral reset control register</description>
          <addressOffset>0x220</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>3</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>AHBCLKCTRLCLR[%s]</name>
          <description>Peripheral reset control register</description>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTICKCLKSEL0</name>
          <description>System Tick Timer for CPU0 source select</description>
          <alternateGroup>SYSTICKCLKSEL</alternateGroup>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>System Tick Timer for CPU0 source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>System Tick 0 divided clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>No clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTICKCLKSELX0</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>SYSTICKCLKSEL</alternateGroup>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRACECLKSEL</name>
          <description>Trace clock source select</description>
          <addressOffset>0x268</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Trace clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Trace divided clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>No clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSEL0</name>
          <description>CTimer 0 clock source select</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x26C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>CTimer 0 clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>No clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSELX0</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x26C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSEL1</name>
          <description>CTimer 1 clock source select</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x270</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>CTimer 1 clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>No clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSELX1</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x270</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSEL2</name>
          <description>CTimer 2 clock source select</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x274</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>CTimer 2 clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>No clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSELX2</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x274</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSEL3</name>
          <description>CTimer 3 clock source select</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x278</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>CTimer 3 clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>No clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSELX3</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x278</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSEL4</name>
          <description>CTimer 4 clock source select</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x27C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>CTimer 4 clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>No clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIMERCLKSELX4</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>CTIMERCLKSEL</alternateGroup>
          <addressOffset>0x27C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MAINCLKSELA</name>
          <description>Main clock A source select</description>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Main clock A source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>CLKIN clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MAINCLKSELB</name>
          <description>Main clock source select</description>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Main clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main Clock A.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>PLL1 clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKOUTSEL</name>
          <description>CLKOUT clock source select</description>
          <addressOffset>0x288</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xF</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>CLKOUT clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>CLKIN clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>PLL1 clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0xC</name>
                  <description>No clock.</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0xD</name>
                  <description>No clock.</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0xE</name>
                  <description>No clock.</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0xF</name>
                  <description>No clock.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0CLKSEL</name>
          <description>PLL0 clock source select</description>
          <addressOffset>0x290</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>PLL0 clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>CLKIN clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL1CLKSEL</name>
          <description>PLL1 clock source select</description>
          <addressOffset>0x294</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>PLL1 clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>CLKIN clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>Oscillator 32kHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CANCLKSEL</name>
          <description>CAN clock source select</description>
          <addressOffset>0x2A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>CAN clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>CAN divided clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>No clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADCCLKSEL</name>
          <description>ADC clock source select</description>
          <addressOffset>0x2A4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>ADC clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>Xtal clock coming directly.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB0CLKSEL</name>
          <description>FS USB clock source select</description>
          <addressOffset>0x2A8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>FS USB clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>No clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>PLL1 clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK32KCLKSEL</name>
          <description>clock low speed source select for HS USB.</description>
          <addressOffset>0x2AC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x8</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>clock low speed source select for HS USB.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>FRO1MHz_divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL0</name>
          <description>Flexcomm Interface 0 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 0 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX0</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL1</name>
          <description>Flexcomm Interface 1 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2B4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 1 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX1</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2B4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL2</name>
          <description>Flexcomm Interface 2 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2B8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 2 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX2</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2B8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL3</name>
          <description>Flexcomm Interface 3 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2BC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 3 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX3</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2BC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL4</name>
          <description>Flexcomm Interface 4 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 4 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX4</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL5</name>
          <description>Flexcomm Interface 5 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 5 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX5</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL6</name>
          <description>Flexcomm Interface 6 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 6 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX6</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSEL7</name>
          <description>Flexcomm Interface 7 clock source select for Fractional Rate Divider</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Flexcomm Interface 7 clock source select for Fractional Rate Divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FCCLKSELX7</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FCCLKSEL</alternateGroup>
          <addressOffset>0x2CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSLSPICLKSEL</name>
          <description>HS LSPI clock source select</description>
          <addressOffset>0x2D0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>HS LSPI clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>system PLL divided clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>FRO 12 MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MCLKCLKSEL</name>
          <description>MCLK clock source select</description>
          <addressOffset>0x2E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>MCLK clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>No clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SCTCLKSEL</name>
          <description>SCTimer/PWM clock source select</description>
          <addressOffset>0x2F0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>SCTimer/PWM clock source select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Main clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>PLL0 clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>CLKIN clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>FRO 96 MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x4</name>
                  <description>No clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x5</name>
                  <description>MCLK clock.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x6</name>
                  <description>No clock.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x7</name>
                  <description>No clock.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTICKCLKDIV0</name>
          <description>System Tick Timer divider for CPU0</description>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TRACECLKDIV</name>
          <description>TRACE clock divider</description>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CANCLKDIV</name>
          <description>CAN clock divider</description>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG0CTRL</name>
          <description>Fractional rate divider for flexcomm 0</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL0</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG1CTRL</name>
          <description>Fractional rate divider for flexcomm 1</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x324</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL1</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x324</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG2CTRL</name>
          <description>Fractional rate divider for flexcomm 2</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x328</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL2</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x328</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG3CTRL</name>
          <description>Fractional rate divider for flexcomm 3</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x32C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL3</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x32C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG4CTRL</name>
          <description>Fractional rate divider for flexcomm 4</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x330</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL4</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x330</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG5CTRL</name>
          <description>Fractional rate divider for flexcomm 5</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x334</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL5</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x334</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG6CTRL</name>
          <description>Fractional rate divider for flexcomm 6</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x338</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL6</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x338</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRG7CTRL</name>
          <description>Fractional rate divider for flexcomm 7</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x33C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Denominator of the fractional rate divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Numerator of the fractional rate divider.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLEXFRGXCTRL7</name>
          <description>Peripheral reset control register</description>
          <alternateGroup>FLEXFRGCTRL</alternateGroup>
          <addressOffset>0x33C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Data array value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBCLKDIV</name>
          <description>System clock divider</description>
          <addressOffset>0x380</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKOUTDIV</name>
          <description>CLKOUT clock divider</description>
          <addressOffset>0x384</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FROHFDIV</name>
          <description>FRO_HF (96MHz) clock divider</description>
          <addressOffset>0x388</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCLKDIV</name>
          <description>WDT clock divider</description>
          <addressOffset>0x38C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE000003F</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADCCLKDIV</name>
          <description>ADC clock divider</description>
          <addressOffset>0x394</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE0000007</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB0CLKDIV</name>
          <description>USB0-FS Clock divider</description>
          <addressOffset>0x398</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FRO1MCLKDIV</name>
          <description>FRO1MHz Clock divider (FRO1M_divided)</description>
          <addressOffset>0x3A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x4000001F</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MCLKDIV</name>
          <description>I2S MCLK clock divider</description>
          <addressOffset>0x3AC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SCTCLKDIV</name>
          <description>SCT/PWM clock divider</description>
          <addressOffset>0x3B4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0CLKDIV</name>
          <description>PLL0 clock divider</description>
          <addressOffset>0x3C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xE00000FF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>Clock divider value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>Resets the divider counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Divider is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Divider is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Divider clock is running.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HALT</name>
                  <description>Divider clock is stoped.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQFLAG</name>
              <description>Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>Divider clock is stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONGOING</name>
                  <description>Clock frequency is not stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCKGENUPDATELOCKOUT</name>
          <description>Control clock configuration registers access (like xxxDIV, xxxSEL)</description>
          <addressOffset>0x3FC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLOCKGENUPDATELOCKOUT</name>
              <description>Control clock configuration registers access (for example, xxxDIV, xxxSEL).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FREEZE</name>
                  <description>all hardware clock configruration are freeze.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>update all clock configuration.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FMCCR</name>
          <description>FMC configuration register</description>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FETCHCFG</name>
              <description>Instruction fetch configuration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOBUF</name>
                  <description>Instruction fetches from flash are not buffered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONEBUF</name>
                  <description>One buffer is used for all instruction fetches.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALLBUF</name>
                  <description>All buffers may be used for instruction fetches.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATACFG</name>
              <description>Data read configuration.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOBUF</name>
                  <description>Data accesses from flash are not buffered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONEBUF</name>
                  <description>One buffer is used for all data accesses.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALLBUF</name>
                  <description>All buffers can be used for data accesses.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACCEL</name>
              <description>Acceleration enable.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Flash acceleration is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Flash acceleration is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PREFEN</name>
              <description>Prefetch enable.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>No instruction prefetch is performed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Instruction prefetch is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PREFOVR</name>
              <description>Prefetch override.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Any previously initiated prefetch will be completed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OVERRIDE</name>
                  <description>Any previously initiated prefetch will be aborted, and the next flash line following the current execution address will be prefetched if not already buffered.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLASHTIM</name>
              <description>Flash memory access time.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FLASHTIM0</name>
                  <description>1 system clock flash access time (for system clock rates up to 11 MHz).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM1</name>
                  <description>2 system clocks flash access time (for system clock rates up to 22 MHz).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM2</name>
                  <description>3 system clocks flash access time (for system clock rates up to 33 MHz).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM3</name>
                  <description>4 system clocks flash access time (for system clock rates up to 44 MHz).</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM4</name>
                  <description>5 system clocks flash access time (for system clock rates up to 55 MHz).</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM5</name>
                  <description>6 system clocks flash access time (for system clock rates up to 66 MHz).</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM6</name>
                  <description>7 system clocks flash access time (for system clock rates up to 84 MHz).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM7</name>
                  <description>8 system clocks flash access time (for system clock rates up to 104 MHz).</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM8</name>
                  <description>9 system clocks flash access time (for system clock rates up to 119 MHz).</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM9</name>
                  <description>10 system clocks flash access time (for system clock rates up to 129 MHz).</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM10</name>
                  <description>11 system clocks flash access time (for system clock rates up to 144 MHz).</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLASHTIM11</name>
                  <description>12 system clocks flash access time (for system clock rates up to 150 MHz).</description>
                  <value>0xB</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB0NEEDCLKCTRL</name>
          <description>USB0-FS need clock control</description>
          <addressOffset>0x40C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>AP_FS_DEV_NEEDCLK</name>
              <description>USB0-FS Device USB0_NEEDCLK signal control:.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HW_CTRL</name>
                  <description>Under hardware control.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCED</name>
                  <description>Forced high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>POL_FS_DEV_NEEDCLK</name>
              <description>USB0-FS Device USB0_NEEDCLK polarity for triggering the USB0-FS wake-up interrupt:.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FALLING</name>
                  <description>Falling edge of device USB0_NEEDCLK triggers wake-up.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RISING</name>
                  <description>Rising edge of device USB0_NEEDCLK triggers wake-up.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AP_FS_HOST_NEEDCLK</name>
              <description>USB0-FS Host USB0_NEEDCLK signal control:.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HW_CTRL</name>
                  <description>Under hardware control.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCED</name>
                  <description>Forced high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>POL_FS_HOST_NEEDCLK</name>
              <description>USB0-FS Host USB0_NEEDCLK polarity for triggering the USB0-FS wake-up interrupt:.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FALLING</name>
                  <description>Falling edge of device USB0_NEEDCLK triggers wake-up.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RISING</name>
                  <description>Rising edge of device USB0_NEEDCLK triggers wake-up.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB0NEEDCLKSTAT</name>
          <description>USB0-FS need clock status</description>
          <addressOffset>0x410</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>DEV_NEEDCLK</name>
              <description>USB0-FS Device USB0_NEEDCLK signal status:.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>USB0-FS Device clock is low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>USB0-FS Device clock is high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_NEEDCLK</name>
              <description>USB0-FS Host USB0_NEEDCLK signal status:.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>USB0-FS Host clock is low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>USB0-FS Host clock is high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FMCFLUSH</name>
          <description>FMCflush control</description>
          <addressOffset>0x41C</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLUSH</name>
              <description>Flush control</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_FLUSH</name>
                  <description>No action is performed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLUSH</name>
                  <description>Flush the FMC buffer contents.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MCLKIO</name>
          <description>MCLK control</description>
          <addressOffset>0x420</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>MCLKIO</name>
              <description>MCLK control.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>input mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>output mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1NEEDCLKCTRL</name>
          <description>USB1-HS need clock control</description>
          <addressOffset>0x424</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x10</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>AP_HS_DEV_NEEDCLK</name>
              <description>USB1-HS Device need_clock signal control:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HW_CTRL</name>
                  <description>HOST_NEEDCLK is under hardware control.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCED</name>
                  <description>HOST_NEEDCLK is forced high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>POL_HS_DEV_NEEDCLK</name>
              <description>USB1-HS device need clock polarity for triggering the USB1_NEEDCLK wake-up interrupt:</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FALLING</name>
                  <description>Falling edge of DEV_NEEDCLK triggers wake-up.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RISING</name>
                  <description>Rising edge of DEV_NEEDCLK triggers wake-up.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AP_HS_HOST_NEEDCLK</name>
              <description>USB1-HS Host need clock signal control:</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HW_CTRL</name>
                  <description>HOST_NEEDCLK is under hardware control.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCED</name>
                  <description>HOST_NEEDCLK is forced high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>POL_HS_HOST_NEEDCLK</name>
              <description>USB1-HS host need clock polarity for triggering the USB1_NEEDCLK wake-up interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FALLING</name>
                  <description>Falling edge of HOST_NEEDCLK triggers wake-up.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RISING</name>
                  <description>Rising edge of HOST_NEEDCLK triggers wake-up.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_DEV_WAKEUP_N</name>
              <description>Software override of device controller PHY wake up logic.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FORCE_WUP</name>
                  <description>Forces USB1_PHY to wake-up.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NORMAL_WUP</name>
                  <description>Normal USB1_PHY behavior.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1NEEDCLKSTAT</name>
          <description>USB1-HS need clock status</description>
          <addressOffset>0x428</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>DEV_NEEDCLK</name>
              <description>USB1-HS Device need_clock signal status:.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>DEV_NEEDCLK is low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>DEV_NEEDCLK is high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_NEEDCLK</name>
              <description>USB1-HS Host need_clock signal status:.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>HOST_NEEDCLK is low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>HOST_NEEDCLK is high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASHREMAP_SIZE</name>
          <description>This 32-bit register contains the size of the image to remap, in bytes. The 12 LSBs are ignored, so the size granularity is 4KB.</description>
          <addressOffset>0x440</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASHREMAP_SIZE</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASHREMAP_SIZE_DP</name>
          <description>This 32-bit register is a duplicate of FLASHREMAPSIZE for increased security.</description>
          <addressOffset>0x444</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASHREMAP_SIZE</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASHREMAP_OFFSET</name>
          <description>This 32-bit register contains the offset by which the image is to be remapped. The 12 LSBs are ignored, so the remap granularity is 4KB.</description>
          <addressOffset>0x448</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASHREMAP_OFFSET</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASHREMAP_OFFSET_DP</name>
          <description>This 32-bit register is a duplicate of FLASHREMAPOFFSET for increased security.</description>
          <addressOffset>0x44C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASHREMAP_OFFSET</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASHREMAP_LOCK</name>
          <description>Control write access to FLASHREMAP_SIZE and FLASHREMAP_OFFSET registers.</description>
          <addressOffset>0x45C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xC33CA55A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOCK</name>
              <description>Control write access to FLASHREMAP_SIZE and FLASHREMAP_OFFSET registers. Any value other than 0xC33CA55A and 0x3CC35AA5 does not modify the state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCK</name>
                  <description>Write access to 4 registers FLASHREMAP_SIZE* and FLASHREMAP_OFFSET* is unlocked.</description>
                  <value>0x3CC35AA5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>Write access to 4 registers FLASHREMAP_SIZE* and FLASHREMAP_OFFSET* is locked.</description>
                  <value>0xC33CA55A</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CASPER_CTRL</name>
          <description>Control CASPER integration.</description>
          <addressOffset>0x470</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>INTERLEAVE</name>
              <description>Control RAM access for RAMX0 and RAMX1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>RAM access to RAMX0 and RAMX1 is consecutive.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INTERLEAVE</name>
                  <description>RAM access to RAMX0 and RAMX1 is interleaved.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL1CTRL</name>
          <description>PLL1 550m control</description>
          <addressOffset>0x560</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SELR</name>
              <description>Bandwidth select R value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SELI</name>
              <description>Bandwidth select I value.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SELP</name>
              <description>Bandwidth select P value.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BYPASSPLL</name>
              <description>Bypass PLL input clock is sent directly to the PLL output (default).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use PLL.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>PLL input clock is sent directly to the PLL output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASSPOSTDIV2</name>
              <description>bypass of the divide-by-2 divider in the post-divider.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use the divide-by-2 divider in the post-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>bypass of the divide-by-2 divider in the post-divider.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LIMUPOFF</name>
              <description>limup_off = 1 in spread spectrum and fractional PLL applications.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BWDIRECT</name>
              <description>control of the bandwidth of the PLL.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SYNC</name>
                  <description>the bandwidth is changed synchronously with the feedback-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIRECT</name>
                  <description>modify the bandwidth of the PLL directly.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASSPREDIV</name>
              <description>bypass of the pre-divider.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use the pre-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>bypass of the pre-divider.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASSPOSTDIV</name>
              <description>bypass of the post-divider.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use the post-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>bypass of the post-divider.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLKEN</name>
              <description>enable the output clock.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the output clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the output clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRMEN</name>
              <description>1: free running mode.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRMCLKSTABLE</name>
              <description>free running mode clockstable: Warning: Only make frm_clockstable = 1 after the PLL output frequency is stable.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SKEWEN</name>
              <description>Skew mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>skewmode is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>skewmode is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL1STAT</name>
          <description>PLL1 550m status</description>
          <addressOffset>0x564</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>LOCK</name>
              <description>lock detector output (active high) Warning: The lock signal is only reliable between fref[2] :100 kHz to 20 MHz.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PREDIVACK</name>
              <description>pre-divider ratio change acknowledge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FEEDDIVACK</name>
              <description>feedback divider ratio change acknowledge.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POSTDIVACK</name>
              <description>post-divider ratio change acknowledge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRMDET</name>
              <description>free running detector output (active high).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL1NDEC</name>
          <description>PLL1 550m N divider</description>
          <addressOffset>0x568</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>NDIV</name>
              <description>pre-divider divider ratio (N-divider).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NREQ</name>
              <description>pre-divider ratio change request.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL1MDEC</name>
          <description>PLL1 550m M divider</description>
          <addressOffset>0x56C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFFF</resetMask>
          <fields>
            <field>
              <name>MDIV</name>
              <description>feedback divider divider ratio (M-divider).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MREQ</name>
              <description>feedback ratio change request.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL1PDEC</name>
          <description>PLL1 550m P divider</description>
          <addressOffset>0x570</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>PDIV</name>
              <description>post-divider divider ratio (P-divider)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PREQ</name>
              <description>feedback ratio change request.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0CTRL</name>
          <description>PLL0 550m control</description>
          <addressOffset>0x580</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SELR</name>
              <description>Bandwidth select R value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SELI</name>
              <description>Bandwidth select I value.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SELP</name>
              <description>Bandwidth select P value.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BYPASSPLL</name>
              <description>Bypass PLL input clock is sent directly to the PLL output (default).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use PLL.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>Bypass PLL input clock is sent directly to the PLL output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASSPOSTDIV2</name>
              <description>bypass of the divide-by-2 divider in the post-divider.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use the divide-by-2 divider in the post-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>bypass of the divide-by-2 divider in the post-divider.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LIMUPOFF</name>
              <description>limup_off = 1 in spread spectrum and fractional PLL applications.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BWDIRECT</name>
              <description>Control of the bandwidth of the PLL.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SYNC</name>
                  <description>the bandwidth is changed synchronously with the feedback-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIRECT</name>
                  <description>modify the bandwidth of the PLL directly.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASSPREDIV</name>
              <description>bypass of the pre-divider.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use the pre-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>bypass of the pre-divider.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASSPOSTDIV</name>
              <description>bypass of the post-divider.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use the post-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASSED</name>
                  <description>bypass of the post-divider.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLKEN</name>
              <description>enable the output clock.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>disable the output clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>enable the output clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRMEN</name>
              <description>free running mode.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>free running mode is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>free running mode is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRMCLKSTABLE</name>
              <description>free running mode clockstable: Warning: Only make frm_clockstable =1 after the PLL output frequency is stable.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SKEWEN</name>
              <description>skew mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>skew mode is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>skew mode is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0STAT</name>
          <description>PLL0 550m status</description>
          <addressOffset>0x584</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>LOCK</name>
              <description>lock detector output (active high) Warning: The lock signal is only reliable between fref[2] :100 kHz to 20 MHz.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PREDIVACK</name>
              <description>pre-divider ratio change acknowledge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FEEDDIVACK</name>
              <description>feedback divider ratio change acknowledge.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POSTDIVACK</name>
              <description>post-divider ratio change acknowledge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRMDET</name>
              <description>free running detector output (active high).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0NDEC</name>
          <description>PLL0 550m N divider</description>
          <addressOffset>0x588</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>NDIV</name>
              <description>pre-divider divider ratio (N-divider).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NREQ</name>
              <description>pre-divider ratio change request.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0PDEC</name>
          <description>PLL0 550m P divider</description>
          <addressOffset>0x58C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>PDIV</name>
              <description>post-divider divider ratio (P-divider)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PREQ</name>
              <description>feedback ratio change request.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0SSCG0</name>
          <description>PLL0 Spread Spectrum Wrapper control register 0</description>
          <addressOffset>0x590</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MD_LBS</name>
              <description>input word of the wrapper bit 31 to 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL0SSCG1</name>
          <description>PLL0 Spread Spectrum Wrapper control register 1</description>
          <addressOffset>0x594</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>MD_MBS</name>
              <description>input word of the wrapper bit 32.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MD_REQ</name>
              <description>md change request.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MF</name>
              <description>programmable modulation frequency fm = Fref/Nss mf[2:0] = 000 =&gt; Nss=512 (fm ~ 3.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR</name>
              <description>programmable frequency modulation depth Dfmodpk-pk = Fref*kss/Fcco = kss/(2*md[32:25]dec) mr[2:0] = 000 =&gt; kss = 0 (no spread spectrum) mr[2:0] = 001 =&gt; kss ~ 1 mr[2:0] = 010 =&gt; kss ~ 1.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MC</name>
              <description>modulation waveform control Compensation for low pass filtering of the PLL to get a triangular modulation at the output of the PLL, giving a flat frequency spectrum.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MDIV_EXT</name>
              <description>to select an external mdiv value.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MREQ</name>
              <description>to select an external mreq value.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DITHER</name>
              <description>dithering between two modulation frequencies in a random way or in a pseudo random way (white noise), in order to decrease the probability that the modulated waveform will occur with the same phase on a particular point on the screen.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_EXT</name>
              <description>to select mdiv_ext and mreq_ext sel_ext = 0: mdiv ~ md[32:0], mreq = 1 sel_ext = 1 : mdiv = mdiv_ext, mreq = mreq_ext.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FUNCRETENTIONCTRL</name>
          <description>Functional retention control register</description>
          <addressOffset>0x704</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x50C000</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>FUNCRETENA</name>
              <description>functional retention in power down only.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>disable functional retention.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>enable functional retention.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RET_START</name>
              <description>Start address divided by 4 inside SRAMX bank.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RET_LENTH</name>
              <description>lenth of Scan chains to save.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPSTAT</name>
          <description>CPU Status</description>
          <addressOffset>0x80C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CPU0SLEEPING</name>
              <description>The CPU0 sleeping state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AWAKE</name>
                  <description>the CPU is not sleeping.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLEEPING</name>
                  <description>the CPU is sleeping.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0LOCKUP</name>
              <description>The CPU0 lockup state.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AWAKE</name>
                  <description>the CPU is not in lockup.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLEEPING</name>
                  <description>the CPU is in lockup.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG0</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x920</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG0</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG1</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x924</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG1</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG2</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x928</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG2</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG3</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x92C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG3</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG4</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x930</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG4</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG5</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x934</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG5</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG6</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x938</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG6</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_SEED_REG7</name>
          <description>boot seed (256-bit random value)</description>
          <addressOffset>0x93C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_SEED_REG7</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG0</name>
          <description>HMAC</description>
          <addressOffset>0x940</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG0</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG1</name>
          <description>HMAC</description>
          <addressOffset>0x944</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG1</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG2</name>
          <description>HMAC</description>
          <addressOffset>0x948</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG2</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG3</name>
          <description>HMAC</description>
          <addressOffset>0x94C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG3</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG4</name>
          <description>HMAC</description>
          <addressOffset>0x950</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG4</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG5</name>
          <description>HMAC</description>
          <addressOffset>0x954</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG5</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG6</name>
          <description>HMAC</description>
          <addressOffset>0x958</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG6</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMAC_REG7</name>
          <description>HMAC</description>
          <addressOffset>0x95C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HMAC_REG7</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_LOCK</name>
          <description>Control write access to boot seed security registers.</description>
          <addressOffset>0x960</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>LOCK_BOOT_SEED</name>
              <description>Control write access to BOOT_SEED_REG registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>write access to all 8 registers BOOT_SEED_REG is locked. This register is write once.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_HMAC</name>
              <description>Control write access to HMAC_REG registers.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>write access to all 8 registers HMAC_REG is locked. This register is write once.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_CTRL</name>
          <description>Various system clock controls : Flash clock (48 MHz) control, clocks to Frequency Measures</description>
          <addressOffset>0xA18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>XTAL32MHZ_FREQM_ENA</name>
              <description>Enable XTAL32MHz clock for Frequency Measure module.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRO1MHZ_UTICK_ENA</name>
              <description>Enable FRO 1MHz clock for Frequency Measure module and for UTICK.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRO12MHZ_FREQM_ENA</name>
              <description>Enable FRO 12MHz clock for Frequency Measure module.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRO_HF_FREQM_ENA</name>
              <description>Enable FRO 96MHz clock for Frequency Measure module.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLKIN_ENA</name>
              <description>Enable clock_in clock for clock module.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRO1MHZ_CLK_ENA</name>
              <description>Enable FRO 1MHz clock for clock muxing in clock gen.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ANA_FRO12M_CLK_ENA</name>
              <description>Enable FRO 12MHz clock for analog control of the FRO 192MHz.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XO_CAL_CLK_ENA</name>
              <description>Enable clock for cristal oscilator calibration.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLU_DEGLITCH_CLK_ENA</name>
              <description>Enable clocks FRO_1MHz and FRO_12MHz for PLU deglitching.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>The clock is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>The clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP_INT_CTRL</name>
          <description>Comparator Interrupt control</description>
          <addressOffset>0xB10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>INT_ENABLE</name>
              <description>Analog Comparator interrupt enable control:.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INT_DISABLE</name>
                  <description>interrupt disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INT_ENABLE</name>
                  <description>interrupt enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_CLEAR</name>
              <description>Analog Comparator interrupt clear.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NONE</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt. Self-cleared bit.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_CTRL</name>
              <description>Comparator interrupt type selector:.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>EDGE_DISABLE</name>
                  <description>The analog comparator interrupt edge sensitive is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVL_DISABLE</name>
                  <description>The analog comparator interrupt level sensitive is disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EDGE_RISING</name>
                  <description>analog comparator interrupt is rising edge sensitive.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVL_HIGH</name>
                  <description>Analog Comparator interrupt is high level sensitive.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EDGE_FALLING</name>
                  <description>analog comparator interrupt is falling edge sensitive.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVL_LOW</name>
                  <description>Analog Comparator interrupt is low level sensitive.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EDGE_BOTH</name>
                  <description>analog comparator interrupt is rising and falling edge sensitive.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVL_DIS2</name>
                  <description>The analog comparator interrupt level sensitive is disabled.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_SOURCE</name>
              <description>Select which Analog comparator output (filtered our un-filtered) is used for interrupt detection.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FILTER_INT</name>
                  <description>Select Analog Comparator filtered output as input for interrupt detection.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RAW_INT</name>
                  <description>Select Analog Comparator raw output (unfiltered) as input for interrupt detection. Must be used when Analog comparator is used as wake up source in Power down mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP_INT_STATUS</name>
          <description>Comparator Interrupt status</description>
          <addressOffset>0xB14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>STATUS</name>
              <description>Interrupt status BEFORE Interrupt Enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_INT</name>
                  <description>no interrupt pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>interrupt pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_STATUS</name>
              <description>Interrupt status AFTER Interrupt Enable.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_INT</name>
                  <description>no interrupt pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>interrupt pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VAL</name>
              <description>comparator analog output.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SMALLER</name>
                  <description>P+ is smaller than P-.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GREATER</name>
                  <description>P+ is greater than P-.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AUTOCLKGATEOVERRIDE</name>
          <description>Control automatic clock gating</description>
          <addressOffset>0xE04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ROM</name>
              <description>Control automatic clock gating of ROM controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAMX_CTRL</name>
              <description>Control automatic clock gating of RAMX controller.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAM0_CTRL</name>
              <description>Control automatic clock gating of RAM0 controller.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAM1_CTRL</name>
              <description>Control automatic clock gating of RAM1 controller.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAM2_CTRL</name>
              <description>Control automatic clock gating of RAM2 controller.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNC0_APB</name>
              <description>Control automatic clock gating of synchronous bridge controller 0.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNC1_APB</name>
              <description>Control automatic clock gating of synchronous bridge controller 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRCGEN</name>
              <description>Control automatic clock gating of CRCGEN controller.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDMA0</name>
              <description>Control automatic clock gating of DMA0 controller.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDMA1</name>
              <description>Control automatic clock gating of DMA1 controller.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB0</name>
              <description>Control automatic clock gating of USB controller.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSCON</name>
              <description>Control automatic clock gating of synchronous system controller registers bank.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Automatic clock gating is not overridden.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Automatic clock gating is overridden (Clock gating is disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLEUPDATE</name>
              <description>The value 0xC0DE must be written for AUTOCLKGATEOVERRIDE registers fields updates to have effect.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Bit Fields 0 - 15 of this register are not updated</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Bit Fields 0 - 15 of this register are updated</description>
                  <value>0xC0DE</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOPSYNC</name>
          <description>Enable bypass of the first stage of synchonization inside GPIO_INT module</description>
          <addressOffset>0xE08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PSYNC</name>
              <description>Enable bypass of the first stage of synchonization inside GPIO_INT module.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>use the first stage of synchonization inside GPIO_INT module.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASS</name>
                  <description>bypass of the first stage of synchonization inside GPIO_INT module.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HASHRESTHWKEY</name>
          <description>Controls whether the HASH AES hardware secret key is restricted to use by secure code</description>
          <addressOffset>0xF88</addressOffset>
          <size>32</size>
          <access>read-writeOnce</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UNLOCKCODE</name>
              <description>Code value that controls whether HASH AES hardware secret key is unlocked</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-writeOnce</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCK</name>
                  <description>HASH AES hardware secret key is unlocked for use by non-secure code. Any other value means that the hardware secret key is restricted to use by secure code only.</description>
                  <value>0xC33CA55A</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_LOCK_EN</name>
          <description>Control write access to security registers.</description>
          <addressOffset>0xFA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x5</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>LOCK_ALL</name>
              <description>Control write access to security registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b1010: disable write access to all registers.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>1010: Enable write access to all registers.</description>
                  <value>0xA</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_FEATURES</name>
          <description>Cortex debug features control.</description>
          <addressOffset>0xFA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>CPU0_DBGEN</name>
              <description>CPU0 Invasive debug control:.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_NIDEN</name>
              <description>CPU0 Non Invasive debug control:.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_SPIDEN</name>
              <description>CPU0 Secure Invasive debug control:.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_SPNIDEN</name>
              <description>CPU0 Secure Non Invasive debug control:.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_FEATURES_DP</name>
          <description>Cortex debug features control. (duplicate)</description>
          <addressOffset>0xFA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x555</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>CPU0_DBGEN</name>
              <description>CPU0 (CPU0) Invasive debug control:.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_NIDEN</name>
              <description>CPU0 Non Invasive debug control:.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_SPIDEN</name>
              <description>CPU0 Secure Invasive debug control:.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_SPNIDEN</name>
              <description>CPU0 Secure Non Invasive debug control:.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Any other value than b10: invasive debug is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>10: Invasive debug is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SWD_ACCESS_CPU0</name>
          <description>This register is used by ROM during DEBUG authentication mechanism to enable debug access port for CPU0.</description>
          <addressOffset>0xFB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SEC_CODE</name>
              <description>CPU0 SWD-AP: 0x12345678.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>CPU0 DAP is not allowed. Reading back register will be read as 0x5.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Value to write to enable CPU0 SWD access. Reading back register will be read as 0xA.</description>
                  <value>0x12345678</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_BLOCK</name>
          <description>block quiddikey/PUF all index.</description>
          <addressOffset>0xFBC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x3CC35AA5</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KEY_BLOCK</name>
              <description>Write a value to block quiddikey/PUF all index.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_AUTH_BEACON</name>
          <description>Debug authentication BEACON register</description>
          <addressOffset>0xFC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BEACON</name>
              <description>Set by the debug authentication code in ROM to pass the debug beacons (Credential Beacon and Authentication Beacon) to application code.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEVICE_ID0</name>
          <description>Device ID</description>
          <addressOffset>0xFF8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ROM_REV_MINOR</name>
              <description>ROM revision.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEID</name>
          <description>Chip revision ID and Number</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x426B0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>REV_ID</name>
              <description>Chip Metal Revision ID.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MCO_NUM_IN_DIE_ID</name>
              <description>Chip Number 0x426B.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IOCON</name>
      <description>I/O pin configuration (IOCON)</description>
      <groupName>IOCON</groupName>
      <baseAddress>0x40001000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PIO0_0</name>
          <description>Digital I/O control for port 0 pins PIO0_0</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_1</name>
          <description>Digital I/O control for port 0 pins PIO0_1</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_2</name>
          <description>Digital I/O control for port 0 pins PIO0_2</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x110</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_3</name>
          <description>Digital I/O control for port 0 pins PIO0_3</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_4</name>
          <description>Digital I/O control for port 0 pins PIO0_4</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_5</name>
          <description>Digital I/O control for port 0 pins PIO0_5</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x120</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_6</name>
          <description>Digital I/O control for port 0 pins PIO0_6</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_7</name>
          <description>Digital I/O control for port 0 pins PIO0_7</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_8</name>
          <description>Digital I/O control for port 0 pins PIO0_8</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_9</name>
          <description>Digital I/O control for port 0 pins PIO0_9</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_10</name>
          <description>Digital I/O control for port 0 pins PIO0_10</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_11</name>
          <description>Digital I/O control for port 0 pins PIO0_11</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x116</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_12</name>
          <description>Digital I/O control for port 0 pins PIO0_12</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x126</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_13</name>
          <description>Digital I/O control for port 0 pins PIO0_13</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x5000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode in standard GPIO mode (EGP = 1). This bit has no effect in I2C mode (EGP=0).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSEL</name>
              <description>Supply Selection bit.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEL3V3</name>
                  <description>3V3 Signaling in I2C Mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEL1V8</name>
                  <description>1V8 Signaling in I2C Mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTEROFF</name>
              <description>Controls input glitch filter.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Filter enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Filter disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECS</name>
              <description>Pull-up current source enable in I2C mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. IO is in open drain cell.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Pull resistor is conencted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EGP</name>
              <description>Switch between GPIO mode and I2C mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>I2C_MODE</name>
                  <description>I2C mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO_MODE</name>
                  <description>GPIO mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2CFILTER</name>
              <description>Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation and High-Speed mode operation.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FAST_MODE</name>
                  <description>I2C 50 ns glitch filter enabled. Typically used for Standard-mode, Fast-mode and Fast-mode Plus I2C.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STANDARD_MODE</name>
                  <description>I2C 10 ns glitch filter enabled. Typically used for High-speed mode I2C.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_14</name>
          <description>Digital I/O control for port 0 pins PIO0_14</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x5000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode in standard GPIO mode (EGP = 1). This bit has no effect in I2C mode (EGP=0).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSEL</name>
              <description>Supply Selection bit.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEL3V3</name>
                  <description>3V3 Signaling in I2C Mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEL1V8</name>
                  <description>1V8 Signaling in I2C Mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTEROFF</name>
              <description>Controls input glitch filter.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Filter enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Filter disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECS</name>
              <description>Pull-up current source enable in I2C mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. IO is in open drain cell.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Pull resistor is conencted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EGP</name>
              <description>Switch between GPIO mode and I2C mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>I2C_MODE</name>
                  <description>I2C mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO_MODE</name>
                  <description>GPIO mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2CFILTER</name>
              <description>Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation and High-Speed mode operation.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FAST_MODE</name>
                  <description>I2C 50 ns glitch filter enabled. Typically used for Standard-mode, Fast-mode and Fast-mode Plus I2C.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STANDARD_MODE</name>
                  <description>I2C 10 ns glitch filter enabled. Typically used for High-speed mode I2C.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_15</name>
          <description>Digital I/O control for port 0 pins PIO0_15</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_16</name>
          <description>Digital I/O control for port 0 pins PIO0_16</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_17</name>
          <description>Digital I/O control for port 0 pins PIO0_17</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_18</name>
          <description>Digital I/O control for port 0 pins PIO0_18</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_19</name>
          <description>Digital I/O control for port 0 pins PIO0_19</description>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_20</name>
          <description>Digital I/O control for port 0 pins PIO0_20</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_21</name>
          <description>Digital I/O control for port 0 pins PIO0_21</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_22</name>
          <description>Digital I/O control for port 0 pins PIO0_22</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_23</name>
          <description>Digital I/O control for port 0 pins PIO0_23</description>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_24</name>
          <description>Digital I/O control for port 0 pins PIO0_24</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_25</name>
          <description>Digital I/O control for port 0 pins PIO0_25</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_26</name>
          <description>Digital I/O control for port 0 pins PIO0_26</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_27</name>
          <description>Digital I/O control for port 0 pins PIO0_27</description>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_28</name>
          <description>Digital I/O control for port 0 pins PIO0_28</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_29</name>
          <description>Digital I/O control for port 0 pins PIO0_29</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_30</name>
          <description>Digital I/O control for port 0 pins PIO0_30</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO0_31</name>
          <description>Digital I/O control for port 0 pins PIO0_31</description>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_0</name>
          <description>Digital I/O control for port 1 pins PIO1_0</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_1</name>
          <description>Digital I/O control for port 1 pins PIO1_1</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_2</name>
          <description>Digital I/O control for port 1 pins PIO1_2</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_3</name>
          <description>Digital I/O control for port 1 pins PIO1_3</description>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_4</name>
          <description>Digital I/O control for port 1 pins PIO1_4</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_5</name>
          <description>Digital I/O control for port 1 pins PIO1_5</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_6</name>
          <description>Digital I/O control for port 1 pins PIO1_6</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_7</name>
          <description>Digital I/O control for port 1 pins PIO1_7</description>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_8</name>
          <description>Digital I/O control for port 1 pins PIO1_8</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_9</name>
          <description>Digital I/O control for port 1 pins PIO1_9</description>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_10</name>
          <description>Digital I/O control for port 1 pins PIO1_10</description>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_11</name>
          <description>Digital I/O control for port 1 pins PIO1_11</description>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_12</name>
          <description>Digital I/O control for port 1 pins PIO1_12</description>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_13</name>
          <description>Digital I/O control for port 1 pins PIO1_13</description>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_14</name>
          <description>Digital I/O control for port 1 pins PIO1_14</description>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_15</name>
          <description>Digital I/O control for port 1 pins PIO1_15</description>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_16</name>
          <description>Digital I/O control for port 1 pins PIO1_16</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_17</name>
          <description>Digital I/O control for port 1 pins PIO1_17</description>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_18</name>
          <description>Digital I/O control for port 1 pins PIO1_18</description>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_19</name>
          <description>Digital I/O control for port 1 pins PIO1_19</description>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASW</name>
              <description>Analog switch input control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog switch is open. (disable)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog switch is closed. (enable)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_20</name>
          <description>Digital I/O control for port 1 pins PIO1_20</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_21</name>
          <description>Digital I/O control for port 1 pins PIO1_21</description>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_22</name>
          <description>Digital I/O control for port 1 pins PIO1_22</description>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_23</name>
          <description>Digital I/O control for port 1 pins PIO1_23</description>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_24</name>
          <description>Digital I/O control for port 1 pins PIO1_24</description>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_25</name>
          <description>Digital I/O control for port 1 pins PIO1_25</description>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_26</name>
          <description>Digital I/O control for port 1 pins PIO1_26</description>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_27</name>
          <description>Digital I/O control for port 1 pins PIO1_27</description>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_28</name>
          <description>Digital I/O control for port 1 pins PIO1_28</description>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_29</name>
          <description>Digital I/O control for port 1 pins PIO1_29</description>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_30</name>
          <description>Digital I/O control for port 1 pins PIO1_30</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO1_31</name>
          <description>Digital I/O control for port 1 pins PIO1_31</description>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>FUNC</name>
              <description>Selects pin function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALT0</name>
                  <description>Alternative connection 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT1</name>
                  <description>Alternative connection 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT2</name>
                  <description>Alternative connection 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT3</name>
                  <description>Alternative connection 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT4</name>
                  <description>Alternative connection 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT5</name>
                  <description>Alternative connection 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT6</name>
                  <description>Alternative connection 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALT7</name>
                  <description>Alternative connection 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEW</name>
              <description>Driver slew rate.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard-mode, output slew rate is slower. More outputs can be switched simultaneously.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>Fast-mode, output slew rate is faster. Refer to the appropriate specific device data sheet for details.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVERT</name>
              <description>Input polarity.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Input function is not inverted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Input is function inverted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGIMODE</name>
              <description>Select Digital mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ANALOG</name>
                  <description>Disable digital mode. Digital input set to 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIGITAL</name>
                  <description>Enable Digital mode. Digital input is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OD</name>
              <description>Controls open-drain mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal. Normal push-pull output</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPEN_DRAIN</name>
                  <description>Open-drain. Simulated open-drain output (high drive disabled).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GINT0</name>
      <description>Group GPIO input interrupt (GINT0/1)</description>
      <groupName>GINT</groupName>
      <headerStructName>GINT</headerStructName>
      <baseAddress>0x40002000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x48</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GINT0</name>
        <value>2</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>GPIO grouped interrupt control register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>INT</name>
              <description>Group interrupt status. This bit is cleared by writing a one to it. Writing zero has no effect.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_REQUEST</name>
                  <description>No request. No interrupt request is pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REQUEST_ACTIVE</name>
                  <description>Request active. Interrupt request is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMB</name>
              <description>Combine enabled inputs for group interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OR</name>
                  <description>Or. OR functionality: A grouped interrupt is generated when any one of the enabled inputs is active (based on its programmed polarity).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AND</name>
                  <description>And. AND functionality: An interrupt is generated when all enabled bits are active (based on their programmed polarity).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIG</name>
              <description>Group interrupt trigger</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>EDGE_TRIGGERED</name>
                  <description>Edge-triggered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LEVEL_TRIGGERED</name>
                  <description>Level-triggered.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PORT_POL[%s]</name>
          <description>GPIO grouped interrupt port 0 polarity register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>POL</name>
              <description>Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PORT_ENA[%s]</name>
          <description>GPIO grouped interrupt port 0 enable register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENA</name>
              <description>Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="GINT0">
      <name>GINT1</name>
      <description>Group GPIO input interrupt (GINT0/1)</description>
      <groupName>GINT</groupName>
      <baseAddress>0x40003000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x48</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GINT1</name>
        <value>3</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>PINT</name>
      <description>Pin interrupt and pattern match (PINT)</description>
      <groupName>PINT</groupName>
      <headerStructName>PINT</headerStructName>
      <baseAddress>0x40004000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x34</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PIN_INT0</name>
        <value>4</value>
      </interrupt>
      <interrupt>
        <name>PIN_INT1</name>
        <value>5</value>
      </interrupt>
      <interrupt>
        <name>PIN_INT2</name>
        <value>6</value>
      </interrupt>
      <interrupt>
        <name>PIN_INT3</name>
        <value>7</value>
      </interrupt>
      <interrupt>
        <name>PIN_INT4</name>
        <value>32</value>
      </interrupt>
      <interrupt>
        <name>PIN_INT5</name>
        <value>33</value>
      </interrupt>
      <interrupt>
        <name>PIN_INT6</name>
        <value>34</value>
      </interrupt>
      <interrupt>
        <name>PIN_INT7</name>
        <value>35</value>
      </interrupt>
      <registers>
        <register>
          <name>ISEL</name>
          <description>Pin Interrupt Mode register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>PMODE</name>
              <description>Selects the interrupt mode for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Edge sensitive 1 = Level sensitive</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IENR</name>
          <description>Pin interrupt level or rising edge interrupt enable register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ENRL</name>
              <description>Enables the rising edge or level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable rising edge or level interrupt. 1 = Enable rising edge or level interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIENR</name>
          <description>Pin interrupt level or rising edge interrupt set register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SETENRL</name>
              <description>Ones written to this address set bits in the IENR, thus enabling interrupts. Bit n sets bit n in the IENR register. 0 = No operation. 1 = Enable rising edge or level interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIENR</name>
          <description>Pin interrupt level (rising edge interrupt) clear register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CENRL</name>
              <description>Ones written to this address clear bits in the IENR, thus disabling the interrupts. Bit n clears bit n in the IENR register. 0 = No operation. 1 = Disable rising edge or level interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IENF</name>
          <description>Pin interrupt active level or falling edge interrupt enable register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ENAF</name>
              <description>Enables the falling edge or configures the active level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable falling edge interrupt or set active interrupt level LOW. 1 = Enable falling edge interrupt enabled or set active interrupt level HIGH.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIENF</name>
          <description>Pin interrupt active level or falling edge interrupt set register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SETENAF</name>
              <description>Ones written to this address set bits in the IENF, thus enabling interrupts. Bit n sets bit n in the IENF register. 0 = No operation. 1 = Select HIGH-active interrupt or enable falling edge interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIENF</name>
          <description>Pin interrupt active level or falling edge interrupt clear register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CENAF</name>
              <description>Ones written to this address clears bits in the IENF, thus disabling interrupts. Bit n clears bit n in the IENF register. 0 = No operation. 1 = LOW-active interrupt selected or falling edge interrupt disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RISE</name>
          <description>Pin interrupt rising edge register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RDET</name>
              <description>Rising edge detect. Bit n detects the rising edge of the pin selected in PINTSELn. Read 0: No rising edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a rising edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear rising edge detection for this pin.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FALL</name>
          <description>Pin interrupt falling edge register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FDET</name>
              <description>Falling edge detect. Bit n detects the falling edge of the pin selected in PINTSELn. Read 0: No falling edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a falling edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear falling edge detection for this pin.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IST</name>
          <description>Pin interrupt status register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>PSTAT</name>
              <description>Pin interrupt status. Bit n returns the status, clears the edge interrupt, or inverts the active level of the pin selected in PINTSELn. Read 0: interrupt is not being requested for this interrupt pin. Write 0: no operation. Read 1: interrupt is being requested for this interrupt pin. Write 1 (edge-sensitive): clear rising- and falling-edge detection for this pin. Write 1 (level-sensitive): switch the active level for this pin (in the IENF register).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMCTRL</name>
          <description>Pattern match interrupt control register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF000003</resetMask>
          <fields>
            <field>
              <name>SEL_PMATCH</name>
              <description>Specifies whether the 8 pin interrupts are controlled by the pin interrupt function or by the pattern match function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PIN_INTERRUPT</name>
                  <description>Pin interrupt. Interrupts are driven in response to the standard pin interrupt function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PATTERN_MATCH</name>
                  <description>Pattern match. Interrupts are driven in response to pattern matches.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENA_RXEV</name>
              <description>Enables the RXEV output to the CPU and/or to a GPIO output when the specified boolean expression evaluates to true.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. RXEV output to the CPU is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. RXEV output to the CPU is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PMAT</name>
              <description>This field displays the current state of pattern matches. A 1 in any bit of this field indicates that the corresponding product term is matched by the current state of the appropriate inputs.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMSRC</name>
          <description>Pattern match interrupt bit-slice source register</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>SRC0</name>
              <description>Selects the input source for bit slice 0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 0.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 0.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 0.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 0.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 0.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 0.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1</name>
              <description>Selects the input source for bit slice 1</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 1.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 1.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 1.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 1.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 1.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 1.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2</name>
              <description>Selects the input source for bit slice 2</description>
              <bitOffset>14</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 2.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 2.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 2.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 2.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 2.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 2.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 2.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC3</name>
              <description>Selects the input source for bit slice 3</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 3.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 3.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 3.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 3.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 3.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 3.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 3.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC4</name>
              <description>Selects the input source for bit slice 4</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 4.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 4.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 4.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 4.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 4.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 4.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 4.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC5</name>
              <description>Selects the input source for bit slice 5</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 5.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 5.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 5.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 5.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 5.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 5.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 5.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC6</name>
              <description>Selects the input source for bit slice 6</description>
              <bitOffset>26</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 6.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 6.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 6.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 6.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 6.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 6.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 6.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC7</name>
              <description>Selects the input source for bit slice 7</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT0</name>
                  <description>Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 7.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT1</name>
                  <description>Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 7.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT2</name>
                  <description>Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 7.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT3</name>
                  <description>Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 7.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT4</name>
                  <description>Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 7.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT5</name>
                  <description>Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 7.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT6</name>
                  <description>Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 7.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT7</name>
                  <description>Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PMCFG</name>
          <description>Pattern match interrupt bit slice configuration register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF7F</resetMask>
          <fields>
            <field>
              <name>PROD_ENDPTS0</name>
              <description>Determines whether slice 0 is an endpoint.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Slice 0 is not an endpoint.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENDPOINT</name>
                  <description>endpoint. Slice 0 is the endpoint of a product term (minterm). Pin interrupt 0 in the NVIC is raised if the minterm evaluates as true.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROD_ENDPTS1</name>
              <description>Determines whether slice 1 is an endpoint.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Slice 1 is not an endpoint.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENDPOINT</name>
                  <description>endpoint. Slice 1 is the endpoint of a product term (minterm). Pin interrupt 1 in the NVIC is raised if the minterm evaluates as true.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROD_ENDPTS2</name>
              <description>Determines whether slice 2 is an endpoint.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Slice 2 is not an endpoint.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENDPOINT</name>
                  <description>endpoint. Slice 2 is the endpoint of a product term (minterm). Pin interrupt 2 in the NVIC is raised if the minterm evaluates as true.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROD_ENDPTS3</name>
              <description>Determines whether slice 3 is an endpoint.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Slice 3 is not an endpoint.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENDPOINT</name>
                  <description>endpoint. Slice 3 is the endpoint of a product term (minterm). Pin interrupt 3 in the NVIC is raised if the minterm evaluates as true.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROD_ENDPTS4</name>
              <description>Determines whether slice 4 is an endpoint.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Slice 4 is not an endpoint.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENDPOINT</name>
                  <description>endpoint. Slice 4 is the endpoint of a product term (minterm). Pin interrupt 4 in the NVIC is raised if the minterm evaluates as true.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROD_ENDPTS5</name>
              <description>Determines whether slice 5 is an endpoint.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Slice 5 is not an endpoint.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENDPOINT</name>
                  <description>endpoint. Slice 5 is the endpoint of a product term (minterm). Pin interrupt 5 in the NVIC is raised if the minterm evaluates as true.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROD_ENDPTS6</name>
              <description>Determines whether slice 6 is an endpoint.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Slice 6 is not an endpoint.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENDPOINT</name>
                  <description>endpoint. Slice 6 is the endpoint of a product term (minterm). Pin interrupt 6 in the NVIC is raised if the minterm evaluates as true.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG0</name>
              <description>Specifies the match contribution condition for bit slice 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG1</name>
              <description>Specifies the match contribution condition for bit slice 1.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG2</name>
              <description>Specifies the match contribution condition for bit slice 2.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG3</name>
              <description>Specifies the match contribution condition for bit slice 3.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG4</name>
              <description>Specifies the match contribution condition for bit slice 4.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG5</name>
              <description>Specifies the match contribution condition for bit slice 5.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG6</name>
              <description>Specifies the match contribution condition for bit slice 6.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFG7</name>
              <description>Specifies the match contribution condition for bit slice 7.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONSTANT_HIGH</name>
                  <description>Constant HIGH. This bit slice always contributes to a product term match.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_EDGE</name>
                  <description>Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_FALLING_EDGE</name>
                  <description>Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STICKY_RISING_FALLING_EDGE</name>
                  <description>Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_LEVEL</name>
                  <description>High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_LEVEL</name>
                  <description>Low level. Match occurs when there is a low level on the specified input.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONSTANT_ZERO</name>
                  <description>Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices).</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="PINT">
      <name>SECPINT</name>
      <description>Pin interrupt and pattern match (PINT)</description>
      <groupName>PINT</groupName>
      <baseAddress>0x40005000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x34</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SEC_HYPERVISOR_CALL</name>
        <value>49</value>
      </interrupt>
      <interrupt>
        <name>SEC_GPIO_INT0_IRQ0</name>
        <value>50</value>
      </interrupt>
      <interrupt>
        <name>SEC_GPIO_INT0_IRQ1</name>
        <value>51</value>
      </interrupt>
      <interrupt>
        <name>SEC_VIO</name>
        <value>53</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>INPUTMUX</name>
      <description>Input multiplexing (INPUT MUX)</description>
      <groupName>INPUTMUX</groupName>
      <baseAddress>0x40006000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x7B4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>7</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SCT0_INMUX[%s]</name>
          <description>Input mux register for SCT0 input</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>INP_N</name>
              <description>Input number to SCT0 inputs 0 to 6..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>SCT_GPI0 function selected from IOCON register</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>SCT_GPI1 function selected from IOCON register</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>SCT_GPI2 function selected from IOCON register</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>SCT_GPI3 function selected from IOCON register</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>SCT_GPI4 function selected from IOCON register</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>SCT_GPI5 function selected from IOCON register</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>SCT_GPI6 function selected from IOCON register</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>SCT_GPI7 function selected from IOCON register</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>T0_OUT0 ctimer 0 match[0] output</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>T1_OUT0 ctimer 1 match[0] output</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>T2_OUT0 ctimer 2 match[0] output</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>T3_OUT0 ctimer 3 match[0] output</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>T4_OUT0 ctimer 4 match[0] output</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>ADC_IRQ interrupt request from ADC</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>GPIOINT_BMATCH</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>USB0_FRAME_TOGGLE</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val16</name>
                  <description>USB1_FRAME_TOGGLE</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val17</name>
                  <description>COMP_OUTPUT output from analog comparator</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val18</name>
                  <description>I2S_SHARED_SCK[0] output from I2S pin sharing</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val19</name>
                  <description>I2S_SHARED_SCK[1] output from I2S pin sharing</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val20</name>
                  <description>I2S_SHARED_WS[0] output from I2S pin sharing</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val21</name>
                  <description>I2S_SHARED_WS[1] output from I2S pin sharing</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>ARM_TXEV interrupt event from cpu0 or cpu1</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val23</name>
                  <description>DEBUG_HALTED from cpu0 or cpu1</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>None</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TIMER0CAPTSEL[%s]</name>
          <description>Capture select registers for TIMER0 inputs</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>CAPTSEL</name>
              <description>Input number to TIMER0 capture inputs 0 to 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>CT_INP0 function selected from IOCON register</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>CT_INP1 function selected from IOCON register</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>CT_INP2 function selected from IOCON register</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>CT_INP3 function selected from IOCON register</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>CT_INP4 function selected from IOCON register</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>CT_INP5 function selected from IOCON register</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>CT_INP6 function selected from IOCON register</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>CT_INP7 function selected from IOCON register</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>CT_INP8 function selected from IOCON register</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>CT_INP9 function selected from IOCON register</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>CT_INP10 function selected from IOCON register</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>CT_INP11 function selected from IOCON register</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>CT_INP12 function selected from IOCON register</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>CT_INP13 function selected from IOCON register</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>CT_INP14 function selected from IOCON register</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>CT_INP15 function selected from IOCON register</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val16</name>
                  <description>CT_INP16 function selected from IOCON register</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val17</name>
                  <description>None</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val18</name>
                  <description>None</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val19</name>
                  <description>None</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val20</name>
                  <description>USB0_FRAME_TOGGLE</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val21</name>
                  <description>USB1_FRAME_TOGGLE</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>COMP_OUTPUT output from analog comparator</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val23</name>
                  <description>I2S_SHARED_WS[0] output from I2S pin sharing</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>I2S_SHARED_WS[1] output from I2S pin sharing</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TIMER1CAPTSEL[%s]</name>
          <description>Capture select registers for TIMER1 inputs</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>CAPTSEL</name>
              <description>Input number to TIMER1 capture inputs 0 to 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>CT_INP0 function selected from IOCON register</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>CT_INP1 function selected from IOCON register</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>CT_INP2 function selected from IOCON register</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>CT_INP3 function selected from IOCON register</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>CT_INP4 function selected from IOCON register</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>CT_INP5 function selected from IOCON register</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>CT_INP6 function selected from IOCON register</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>CT_INP7 function selected from IOCON register</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>CT_INP8 function selected from IOCON register</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>CT_INP9 function selected from IOCON register</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>CT_INP10 function selected from IOCON register</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>CT_INP11 function selected from IOCON register</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>CT_INP12 function selected from IOCON register</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>CT_INP13 function selected from IOCON register</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>CT_INP14 function selected from IOCON register</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>CT_INP15 function selected from IOCON register</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val16</name>
                  <description>CT_INP16 function selected from IOCON register</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val17</name>
                  <description>None</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val18</name>
                  <description>None</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val19</name>
                  <description>None</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val20</name>
                  <description>USB0_FRAME_TOGGLE</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val21</name>
                  <description>USB1_FRAME_TOGGLE</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>COMP_OUTPUT output from analog comparator</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val23</name>
                  <description>I2S_SHARED_WS[0] output from I2S pin sharing</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>I2S_SHARED_WS[1] output from I2S pin sharing</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TIMER2CAPTSEL[%s]</name>
          <description>Capture select registers for TIMER2 inputs</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>CAPTSEL</name>
              <description>Input number to TIMER2 capture inputs 0 to 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>CT_INP0 function selected from IOCON register</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>CT_INP1 function selected from IOCON register</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>CT_INP2 function selected from IOCON register</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>CT_INP3 function selected from IOCON register</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>CT_INP4 function selected from IOCON register</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>CT_INP5 function selected from IOCON register</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>CT_INP6 function selected from IOCON register</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>CT_INP7 function selected from IOCON register</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>CT_INP8 function selected from IOCON register</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>CT_INP9 function selected from IOCON register</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>CT_INP10 function selected from IOCON register</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>CT_INP11 function selected from IOCON register</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>CT_INP12 function selected from IOCON register</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>CT_INP13 function selected from IOCON register</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>CT_INP14 function selected from IOCON register</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>CT_INP15 function selected from IOCON register</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val16</name>
                  <description>CT_INP16 function selected from IOCON register</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val17</name>
                  <description>None</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val18</name>
                  <description>None</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val19</name>
                  <description>None</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val20</name>
                  <description>USB0_FRAME_TOGGLE</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val21</name>
                  <description>USB1_FRAME_TOGGLE</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>COMP_OUTPUT output from analog comparator</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val23</name>
                  <description>I2S_SHARED_WS[0] output from I2S pin sharing</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>I2S_SHARED_WS[1] output from I2S pin sharing</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PINTSEL[%s]</name>
          <description>Pin interrupt select register</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7F</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>INTPIN</name>
              <description>Pin number select for pin interrupt or pattern match engine input. For PIOx_y: INTPIN = (x * 32) + y. PIO0_0 to PIO1_31 correspond to numbers 0 to 63.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>23</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DMA0_ITRIG_INMUX[%s]</name>
          <description>Trigger select register for DMA0 channel</description>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>INP</name>
              <description>Trigger input number (decimal value) for DMA channel n (n = 0 to 22).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>Pin interrupt 0</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>Pin interrupt 1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>Pin interrupt 2</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>Pin interrupt 3</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>Timer CTIMER0 Match 0</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>Timer CTIMER0 Match 1</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>Timer CTIMER1 Match 0</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>Timer CTIMER1 Match 1</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>Timer CTIMER2 Match 0</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>Timer CTIMER2 Match 1</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>Timer CTIMER3 Match 0</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>Timer CTIMER3 Match 1</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>Timer CTIMER4 Match 0</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>Timer CTIMER4 Match 1</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>COMP_OUTPUT</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>DMA0 output trigger mux 0</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val16</name>
                  <description>DMA0 output trigger mux 1</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val17</name>
                  <description>DMA0 output trigger mux 1</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val18</name>
                  <description>DMA0 output trigger mux 3</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val19</name>
                  <description>SCT0 DMA request 0</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val20</name>
                  <description>SCT0 DMA request 1</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val21</name>
                  <description>HASH DMA RX trigger</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>None</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DMA0_OTRIG_INMUX[%s]</name>
          <description>DMA0 output trigger selection to become DMA0 trigger</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>INP</name>
              <description>DMA trigger output number (decimal value) for DMA channel n (n = 0 to 22).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FREQMEAS_REF</name>
          <description>Selection for frequency measurement reference clock</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>CLKIN</name>
              <description>Clock source number (decimal value) for frequency measure function reference clock:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VALUE0</name>
                  <description>External main crystal oscilator (Clock_in).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE1</name>
                  <description>FRO 12MHz clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE2</name>
                  <description>FRO 96MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE3</name>
                  <description>Watchdog oscillator / FRO1MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE4</name>
                  <description>32 kHz oscillator (32k_clk) clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE5</name>
                  <description>main clock (main_clock).</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE6</name>
                  <description>FREQME_GPIO_CLK_A.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE7</name>
                  <description>FREQME_GPIO_CLK_B.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FREQMEAS_TARGET</name>
          <description>Selection for frequency measurement target clock</description>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>CLKIN</name>
              <description>Clock source number (decimal value) for frequency measure function target clock:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VALUE0</name>
                  <description>External main crystal oscilator (Clock_in).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE1</name>
                  <description>FRO 12MHz clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE2</name>
                  <description>FRO 96MHz clock.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE3</name>
                  <description>Watchdog oscillator / FRO1MHz clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE4</name>
                  <description>32 kHz oscillator (32k_clk) clock.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE5</name>
                  <description>main clock (main_clock).</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE6</name>
                  <description>FREQME_GPIO_CLK_A.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE7</name>
                  <description>FREQME_GPIO_CLK_B.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TIMER3CAPTSEL[%s]</name>
          <description>Capture select registers for TIMER3 inputs</description>
          <addressOffset>0x1A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>CAPTSEL</name>
              <description>Input number to TIMER3 capture inputs 0 to 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>CT_INP0 function selected from IOCON register</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>CT_INP1 function selected from IOCON register</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>CT_INP2 function selected from IOCON register</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>CT_INP3 function selected from IOCON register</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>CT_INP4 function selected from IOCON register</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>CT_INP5 function selected from IOCON register</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>CT_INP6 function selected from IOCON register</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>CT_INP7 function selected from IOCON register</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>CT_INP8 function selected from IOCON register</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>CT_INP9 function selected from IOCON register</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>CT_INP10 function selected from IOCON register</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>CT_INP11 function selected from IOCON register</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>CT_INP12 function selected from IOCON register</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>CT_INP13 function selected from IOCON register</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>CT_INP14 function selected from IOCON register</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>CT_INP15 function selected from IOCON register</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val16</name>
                  <description>CT_INP16 function selected from IOCON register</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val17</name>
                  <description>None</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val18</name>
                  <description>None</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val19</name>
                  <description>None</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val20</name>
                  <description>USB0_FRAME_TOGGLE</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val21</name>
                  <description>USB1_FRAME_TOGGLE</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>COMP_OUTPUT output from analog comparator</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val23</name>
                  <description>I2S_SHARED_WS[0] output from I2S pin sharing</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>I2S_SHARED_WS[1] output from I2S pin sharing</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TIMER4CAPTSEL[%s]</name>
          <description>Capture select registers for TIMER4 inputs</description>
          <addressOffset>0x1C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>CAPTSEL</name>
              <description>Input number to TIMER4 capture inputs 0 to 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>CT_INP0 function selected from IOCON register</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>CT_INP1 function selected from IOCON register</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>CT_INP2 function selected from IOCON register</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>CT_INP3 function selected from IOCON register</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>CT_INP4 function selected from IOCON register</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>CT_INP5 function selected from IOCON register</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>CT_INP6 function selected from IOCON register</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>CT_INP7 function selected from IOCON register</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>CT_INP8 function selected from IOCON register</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>CT_INP9 function selected from IOCON register</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>CT_INP10 function selected from IOCON register</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>CT_INP11 function selected from IOCON register</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>CT_INP12 function selected from IOCON register</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>CT_INP13 function selected from IOCON register</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>CT_INP14 function selected from IOCON register</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>CT_INP15 function selected from IOCON register</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val16</name>
                  <description>CT_INP16 function selected from IOCON register</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val17</name>
                  <description>None</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val18</name>
                  <description>None</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val19</name>
                  <description>None</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val20</name>
                  <description>USB0_FRAME_TOGGLE</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val21</name>
                  <description>USB1_FRAME_TOGGLE</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val22</name>
                  <description>COMP_OUTPUT output from analog comparator</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val23</name>
                  <description>I2S_SHARED_WS[0] output from I2S pin sharing</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val24</name>
                  <description>I2S_SHARED_WS[1] output from I2S pin sharing</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val25</name>
                  <description>None</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PINTSECSEL[%s]</name>
          <description>Pin interrupt secure select register</description>
          <addressOffset>0x1E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x3F</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>INTPIN</name>
              <description>Pin number select for pin interrupt secure or pattern match engine input. For PIO0_x: INTPIN = x. PIO0_0 to PIO0_31 correspond to numbers 0 to 31.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>10</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DMA1_ITRIG_INMUX[%s]</name>
          <description>Trigger select register for DMA1 channel</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xF</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>INP</name>
              <description>Trigger input number (decimal value) for DMA channel n (n = 0 to 9).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>val0</name>
                  <description>Pin interrupt 0</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val1</name>
                  <description>Pin interrupt 1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val2</name>
                  <description>Pin interrupt 2</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val3</name>
                  <description>Pin interrupt 3</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val4</name>
                  <description>Timer CTIMER0 Match 0</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val5</name>
                  <description>Timer CTIMER0 Match 1</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val6</name>
                  <description>Timer CTIMER2 Match 0</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val7</name>
                  <description>Timer CTIMER4 Match 0</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val8</name>
                  <description>DMA1 output trigger mux 0</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val9</name>
                  <description>DMA1 output trigger mux 1</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val10</name>
                  <description>DMA1 output trigger mux 2</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val11</name>
                  <description>DMA1 output trigger mux 3</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val12</name>
                  <description>SCT0 DMA request 0</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val13</name>
                  <description>SCT0 DMA request 1</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val14</name>
                  <description>HASH DMA RX trigger</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>val15</name>
                  <description>None</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DMA1_OTRIG_INMUX[%s]</name>
          <description>DMA1 output trigger selection to become DMA1 trigger</description>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xF</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>INP</name>
              <description>DMA trigger output number (decimal value) for DMA channel n (n = 0 to 9).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA0_REQ_ENA</name>
          <description>Enable DMA0 requests</description>
          <addressOffset>0x740</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7FFFFF</resetValue>
          <resetMask>0x7FFFFF</resetMask>
          <fields>
            <field>
              <name>REQ_ENA</name>
              <description>Controls the 23 request inputs of DMA0. If bit i is '1' the DMA request input #i is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA0_REQ_ENA_SET</name>
          <description>Set one or several bits in DMA0_REQ_ENA register</description>
          <addressOffset>0x748</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FFFFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Write : If bit #i = 1, bit #i in DMA0_REQ_ENA register is set to 1; if bit #i = 0 , no change in DMA0_REQ_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>23</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA0_REQ_ENA_CLR</name>
          <description>Clear one or several bits in DMA0_REQ_ENA register</description>
          <addressOffset>0x750</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FFFFF</resetMask>
          <fields>
            <field>
              <name>CLR</name>
              <description>Write : If bit #i = 1, bit #i in DMA0_REQ_ENA register is reset to 0; if bit #i = 0 , no change in DMA0_REQ_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>23</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA1_REQ_ENA</name>
          <description>Enable DMA1 requests</description>
          <addressOffset>0x760</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x3FF</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>REQ_ENA</name>
              <description>Controls the 10 request inputs of DMA1. If bit i is '1' the DMA request input #i is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA1_REQ_ENA_SET</name>
          <description>Set one or several bits in DMA1_REQ_ENA register</description>
          <addressOffset>0x768</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Write : If bit #i = 1, bit #i in DMA1_REQ_ENA register is set to 1; if bit #i = 0 , no change in DMA1_REQ_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA1_REQ_ENA_CLR</name>
          <description>Clear one or several bits in DMA1_REQ_ENA register</description>
          <addressOffset>0x770</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>CLR</name>
              <description>Write : If bit #i = 1, bit #i in DMA1_REQ_ENA register is reset to 0; if bit #i = 0 , no change in DMA1_REQ_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA0_ITRIG_ENA</name>
          <description>Enable DMA0 triggers</description>
          <addressOffset>0x780</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x3FFFFF</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>ITRIG_ENA</name>
              <description>Controls the 22 trigger inputs of DMA0. If bit i is '1' the DMA trigger input #i is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA0_ITRIG_ENA_SET</name>
          <description>Set one or several bits in DMA0_ITRIG_ENA register</description>
          <addressOffset>0x788</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Write : If bit #i = 1, bit #i in DMA0_ITRIG_ENA register is set to 1; if bit #i = 0 , no change in DMA0_ITRIG_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA0_ITRIG_ENA_CLR</name>
          <description>Clear one or several bits in DMA0_ITRIG_ENA register</description>
          <addressOffset>0x790</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>CLR</name>
              <description>Write : If bit #i = 1, bit #i in DMA0_ITRIG_ENA register is reset to 0; if bit #i = 0 , no change in DMA0_ITRIG_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA1_ITRIG_ENA</name>
          <description>Enable DMA1 triggers</description>
          <addressOffset>0x7A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x7FFF</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>ITRIG_ENA</name>
              <description>Controls the 15 trigger inputs of DMA1. If bit i is '1' the DMA trigger input #i is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA1_ITRIG_ENA_SET</name>
          <description>Set one or several bits in DMA1_ITRIG_ENA register</description>
          <addressOffset>0x7A8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Write : If bit #i = 1, bit #i in DMA1_ITRIG_ENA register is set to 1; if bit #i = 0 , no change in DMA1_ITRIG_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA1_ITRIG_ENA_CLR</name>
          <description>Clear one or several bits in DMA1_ITRIG_ENA register</description>
          <addressOffset>0x7B0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>CLR</name>
              <description>Write : If bit #i = 1, bit #i in DMA1_ITRIG_ENA register is reset to 0; if bit #i = 0 , no change in DMA1_ITRIG_ENA register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CTIMER0</name>
      <description>Standard counter/timers (CTIMER0 to 4)</description>
      <groupName>CTIMER</groupName>
      <headerStructName>CTIMER</headerStructName>
      <baseAddress>0x40008000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x88</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CTIMER0</name>
        <value>10</value>
      </interrupt>
      <registers>
        <register>
          <name>IR</name>
          <description>Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>MR0INT</name>
              <description>Interrupt flag for match channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR1INT</name>
              <description>Interrupt flag for match channel 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR2INT</name>
              <description>Interrupt flag for match channel 2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR3INT</name>
              <description>Interrupt flag for match channel 3.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CR0INT</name>
              <description>Interrupt flag for capture channel 0 event.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CR1INT</name>
              <description>Interrupt flag for capture channel 1 event.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CR2INT</name>
              <description>Interrupt flag for capture channel 2 event.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CR3INT</name>
              <description>Interrupt flag for capture channel 3 event.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCR</name>
          <description>Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CEN</name>
              <description>Counter enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled.The counters are disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The Timer Counter and Prescale Counter are enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRST</name>
              <description>Counter reset.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Do nothing.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of the APB bus clock. The counters remain reset until TCR[1] is returned to zero.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC</name>
          <description>Timer Counter</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TCVAL</name>
              <description>Timer counter value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PR</name>
          <description>Prescale Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRVAL</name>
              <description>Prescale counter value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC</name>
          <description>Prescale Counter</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PCVAL</name>
              <description>Prescale counter value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MCR</name>
          <description>Match Control Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF000FFF</resetMask>
          <fields>
            <field>
              <name>MR0I</name>
              <description>Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR0R</name>
              <description>Reset on MR0: the TC will be reset if MR0 matches it.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR0S</name>
              <description>Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR1I</name>
              <description>Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR1R</name>
              <description>Reset on MR1: the TC will be reset if MR1 matches it.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR1S</name>
              <description>Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR2I</name>
              <description>Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR2R</name>
              <description>Reset on MR2: the TC will be reset if MR2 matches it.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR2S</name>
              <description>Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR3I</name>
              <description>Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR3R</name>
              <description>Reset on MR3: the TC will be reset if MR3 matches it.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR3S</name>
              <description>Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR0RL</name>
              <description>Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR1RL</name>
              <description>Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR2RL</name>
              <description>Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MR3RL</name>
              <description>Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>MR[%s]</name>
          <description>Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCH</name>
              <description>Timer counter match value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR</name>
          <description>Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>CAP0RE</name>
              <description>Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP0FE</name>
              <description>Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP0I</name>
              <description>Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1RE</name>
              <description>Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1FE</name>
              <description>Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1I</name>
              <description>Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2RE</name>
              <description>Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2FE</name>
              <description>Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2I</name>
              <description>Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP3RE</name>
              <description>Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP3FE</name>
              <description>Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP3I</name>
              <description>Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CR[%s]</name>
          <description>Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAP</name>
              <description>Timer counter capture value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMR</name>
          <description>External Match Register. The EMR controls the match function and the external match pins.</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EM0</name>
              <description>External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EM1</name>
              <description>External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EM2</name>
              <description>External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EM3</name>
              <description>External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EMC0</name>
              <description>External Match Control 0. Determines the functionality of External Match 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do Nothing.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear. Clear the corresponding External Match bit/output to 0 (MAT0 pin is LOW if pinned out).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set. Set the corresponding External Match bit/output to 1 (MAT0 pin is HIGH if pinned out).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle. Toggle the corresponding External Match bit/output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMC1</name>
              <description>External Match Control 1. Determines the functionality of External Match 1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do Nothing.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear. Clear the corresponding External Match bit/output to 0 (MAT1 pin is LOW if pinned out).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set. Set the corresponding External Match bit/output to 1 (MAT1 pin is HIGH if pinned out).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle. Toggle the corresponding External Match bit/output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMC2</name>
              <description>External Match Control 2. Determines the functionality of External Match 2.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do Nothing.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear. Clear the corresponding External Match bit/output to 0 (MAT2 pin is LOW if pinned out).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set. Set the corresponding External Match bit/output to 1 (MAT2 pin is HIGH if pinned out).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle. Toggle the corresponding External Match bit/output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMC3</name>
              <description>External Match Control 3. Determines the functionality of External Match 3.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do Nothing.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear. Clear the corresponding External Match bit/output to 0 (MAT3 pin is LOW if pinned out).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set. Set the corresponding External Match bit/output to 1 (MAT3 pin is HIGH if pinned out).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle. Toggle the corresponding External Match bit/output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTCR</name>
          <description>Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CTMODE</name>
              <description>Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TIMER</name>
                  <description>Timer Mode. Incremented every rising APB bus clock edge.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNTER_RISING_EDGE</name>
                  <description>Counter Mode rising edge. TC is incremented on rising edges on the CAP input selected by bits 3:2.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNTER_FALLING_EDGE</name>
                  <description>Counter Mode falling edge. TC is incremented on falling edges on the CAP input selected by bits 3:2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNTER_DUAL_EDGE</name>
                  <description>Counter Mode dual edge. TC is incremented on both edges on the CAP input selected by bits 3:2.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CINSEL</name>
              <description>Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CHANNEL_0</name>
                  <description>Channel 0. CAPn.0 for CTIMERn</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_1</name>
                  <description>Channel 1. CAPn.1 for CTIMERn</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_2</name>
                  <description>Channel 2. CAPn.2 for CTIMERn</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_3</name>
                  <description>Channel 3. CAPn.3 for CTIMERn</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENCC</name>
              <description>Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SELCC</name>
              <description>Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CHANNEL_0_RISING</name>
                  <description>Channel 0 Rising Edge. Rising edge of the signal on capture channel 0 clears the timer (if bit 4 is set).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_0_FALLING</name>
                  <description>Channel 0 Falling Edge. Falling edge of the signal on capture channel 0 clears the timer (if bit 4 is set).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_1_RISING</name>
                  <description>Channel 1 Rising Edge. Rising edge of the signal on capture channel 1 clears the timer (if bit 4 is set).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_1_FALLING</name>
                  <description>Channel 1 Falling Edge. Falling edge of the signal on capture channel 1 clears the timer (if bit 4 is set).</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_2_RISING</name>
                  <description>Channel 2 Rising Edge. Rising edge of the signal on capture channel 2 clears the timer (if bit 4 is set).</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CHANNEL_2_FALLING</name>
                  <description>Channel 2 Falling Edge. Falling edge of the signal on capture channel 2 clears the timer (if bit 4 is set).</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWMC</name>
          <description>PWM Control Register. This register enables PWM mode for the external match pins.</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PWMEN0</name>
              <description>PWM mode enable for channel0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MATCH</name>
                  <description>Match. CTIMERn_MAT0 is controlled by EM0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM. PWM mode is enabled for CTIMERn_MAT0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWMEN1</name>
              <description>PWM mode enable for channel1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MATCH</name>
                  <description>Match. CTIMERn_MAT01 is controlled by EM1.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM. PWM mode is enabled for CTIMERn_MAT1.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWMEN2</name>
              <description>PWM mode enable for channel2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MATCH</name>
                  <description>Match. CTIMERn_MAT2 is controlled by EM2.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM. PWM mode is enabled for CTIMERn_MAT2.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWMEN3</name>
              <description>PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MATCH</name>
                  <description>Match. CTIMERn_MAT3 is controlled by EM3.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM. PWM mode is enabled for CT132Bn_MAT3.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>MSR[%s]</name>
          <description>Match Shadow Register</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SHADOW</name>
              <description>Timer counter match shadow value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="CTIMER0">
      <name>CTIMER1</name>
      <description>Standard counter/timers (CTIMER0 to 4)</description>
      <groupName>CTIMER</groupName>
      <baseAddress>0x40009000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x88</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CTIMER1</name>
        <value>11</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="CTIMER0">
      <name>CTIMER2</name>
      <description>Standard counter/timers (CTIMER0 to 4)</description>
      <groupName>CTIMER</groupName>
      <baseAddress>0x40028000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x88</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CTIMER2</name>
        <value>36</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="CTIMER0">
      <name>CTIMER3</name>
      <description>Standard counter/timers (CTIMER0 to 4)</description>
      <groupName>CTIMER</groupName>
      <baseAddress>0x40029000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x88</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CTIMER3</name>
        <value>13</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="CTIMER0">
      <name>CTIMER4</name>
      <description>Standard counter/timers (CTIMER0 to 4)</description>
      <groupName>CTIMER</groupName>
      <baseAddress>0x4002A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x88</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CTIMER4</name>
        <value>37</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>WWDT</name>
      <description>Windowed Watchdog Timer (WWDT)</description>
      <groupName>WWDT</groupName>
      <baseAddress>0x4000C000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>WDT_BOD</name>
        <value>0</value>
      </interrupt>
      <registers>
        <register>
          <name>MOD</name>
          <description>Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>WDEN</name>
              <description>Watchdog enable bit. Once this bit is set to one and a watchdog feed is performed, the watchdog timer will run permanently.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>Stop. The watchdog timer is stopped.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Run. The watchdog timer is running.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WDRESET</name>
              <description>Watchdog reset enable bit. Once this bit has been written with a 1 it cannot be re-written with a 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INTERRUPT</name>
                  <description>Interrupt. A watchdog time-out will not cause a chip reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET</name>
                  <description>Reset. A watchdog time-out will cause a chip reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WDTOF</name>
              <description>Watchdog time-out flag. Set when the watchdog timer times out, by a feed error, or by events associated with WDPROTECT. Cleared by software writing a 0 to this bit position. Causes a chip reset if WDRESET = 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDINT</name>
              <description>Warning interrupt flag. Set when the timer is at or below the value in WDWARNINT. Cleared by software writing a 1 to this bit position. Note that this bit cannot be cleared while the WARNINT value is equal to the value of the TV register. This can occur if the value of WARNINT is 0 and the WDRESET bit is 0 when TV decrements to 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDPROTECT</name>
              <description>Watchdog update mode. This bit can be set once by software and is only cleared by a reset.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FLEXIBLE</name>
                  <description>Flexible. The watchdog time-out value (TC) can be changed at any time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THRESHOLD</name>
                  <description>Threshold. The watchdog time-out value (TC) can be changed only after the counter is below the value of WDWARNINT and WDWINDOW.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC</name>
          <description>Watchdog timer constant register. This 24-bit register determines the time-out value.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>COUNT</name>
              <description>Watchdog time-out value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FEED</name>
          <description>Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in TC.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>FEED</name>
              <description>Feed value should be 0xAA followed by 0x55.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV</name>
          <description>Watchdog timer value register. This 24-bit register reads out the current value of the Watchdog timer.</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>COUNT</name>
              <description>Counter timer value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WARNINT</name>
          <description>Watchdog Warning Interrupt compare value.</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>WARNINT</name>
              <description>Watchdog warning interrupt compare value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WINDOW</name>
          <description>Watchdog Window compare value.</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFF</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>WINDOW</name>
              <description>Watchdog window value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MRT0</name>
      <description>Multi-Rate Timer (MRT)</description>
      <groupName>MRT</groupName>
      <baseAddress>0x4000D000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xFC</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>MRT0</name>
        <value>9</value>
      </interrupt>
      <registers>
        <cluster>
          <dim>4</dim>
          <dimIncrement>0x10</dimIncrement>
          <name>CHANNEL[%s]</name>
          <description>no description available</description>
          <addressOffset>0</addressOffset>
          <register>
            <name>INTVAL</name>
            <description>MRT Time interval value register. This value is loaded into the TIMER register.</description>
            <addressOffset>0</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x80FFFFFF</resetMask>
            <fields>
              <field>
                <name>IVALUE</name>
                <description>Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>24</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>LOAD</name>
                <description>Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.</description>
                <bitOffset>31</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO_FORCE_LOAD</name>
                    <description>No force load. The load from the INTVALn register to the TIMERn register is processed at the end of the time interval if the repeat mode is selected.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>FORCE_LOAD</name>
                    <description>Force load. The INTVALn interval value IVALUE -1 is immediately loaded into the TIMERn register while TIMERn is running.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TIMER</name>
            <description>MRT Timer register. This register reads the value of the down-counter.</description>
            <addressOffset>0x4</addressOffset>
            <size>32</size>
            <access>read-only</access>
            <resetValue>0xFFFFFF</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>VALUE</name>
                <description>Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF).</description>
                <bitOffset>0</bitOffset>
                <bitWidth>24</bitWidth>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CTRL</name>
            <description>MRT Control register. This register controls the MRT modes.</description>
            <addressOffset>0x8</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>INTEN</name>
                <description>Enable the TIMERn interrupt.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DISABLED</name>
                    <description>Disabled. TIMERn interrupt is disabled.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ENABLED</name>
                    <description>Enabled. TIMERn interrupt is enabled.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MODE</name>
                <description>Selects timer mode.</description>
                <bitOffset>1</bitOffset>
                <bitWidth>2</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>REPEAT_INTERRUPT_MODE</name>
                    <description>Repeat interrupt mode.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ONE_SHOT_INTERRUPT_MODE</name>
                    <description>One-shot interrupt mode.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ONE_SHOT_STALL_MODE</name>
                    <description>One-shot stall mode.</description>
                    <value>0x2</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>STAT</name>
            <description>MRT Status register.</description>
            <addressOffset>0xC</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>INTFLAG</name>
                <description>Monitors the interrupt flag.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO_PENDING_INTERRUPT</name>
                    <description>No pending interrupt. Writing a zero is equivalent to no operation.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>PENDING_INTERRUPT</name>
                    <description>Pending interrupt. The interrupt is pending because TIMERn has reached the end of the time interval. If the INTEN bit in the CONTROLn is also set to 1, the interrupt for timer channel n and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RUN</name>
                <description>Indicates the state of TIMERn. This bit is read-only.</description>
                <bitOffset>1</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>IDLE_STATE</name>
                    <description>Idle state. TIMERn is stopped.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>RUNNING</name>
                    <description>Running. TIMERn is running.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>INUSE</name>
                <description>Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.</description>
                <bitOffset>2</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO</name>
                    <description>This channel is not in use.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>YES</name>
                    <description>This channel is in use.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>MODCFG</name>
          <description>Module Configuration register. This register provides information about this particular MRT instance, and allows choosing an overall mode for the idle channel feature.</description>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x184</resetValue>
          <resetMask>0x800001FF</resetMask>
          <fields>
            <field>
              <name>NOC</name>
              <description>Identifies the number of channels in this MRT.(4 channels on this device.)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOB</name>
              <description>Identifies the number of timer bits in this MRT. (24 bits wide on this device.)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MULTITASK</name>
              <description>Selects the operating mode for the INUSE flags and the IDLE_CH register.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HARDWARE_STATUS_MODE</name>
                  <description>Hardware status mode. In this mode, the INUSE(n) flags for all channels are reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MULTI_TASK_MODE</name>
                  <description>Multi-task mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IDLE_CH</name>
          <description>Idle channel register. This register returns the number of the first idle channel.</description>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF0</resetMask>
          <fields>
            <field>
              <name>CHAN</name>
              <description>Idle channel. Reading the CHAN bits, returns the lowest idle timer channel. The number is positioned such that it can be used as an offset from the MRT base address in order to access the registers for the allocated channel. If all timer channels are running, CHAN = 0xF. See text above for more details.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQ_FLAG</name>
          <description>Global interrupt flag register</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>GFLAG0</name>
              <description>Monitors the interrupt flag of TIMER0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING_INTERRUPT</name>
                  <description>No pending interrupt. Writing a zero is equivalent to no operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING_INTERRUPT</name>
                  <description>Pending interrupt. The interrupt is pending because TIMER0 has reached the end of the time interval. If the INTEN bit in the CONTROL0 register is also set to 1, the interrupt for timer channel 0 and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GFLAG1</name>
              <description>Monitors the interrupt flag of TIMER1. See description of channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GFLAG2</name>
              <description>Monitors the interrupt flag of TIMER2. See description of channel 0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GFLAG3</name>
              <description>Monitors the interrupt flag of TIMER3. See description of channel 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UTICK0</name>
      <description>Micro-tick Timer (UTICK)</description>
      <groupName>UTICK</groupName>
      <baseAddress>0x4000E000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>UTICK0</name>
        <value>8</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>Control register.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DELAYVAL</name>
              <description>Tick interval value. The delay will be equal to DELAYVAL + 1 periods of the timer clock. The minimum usable value is 1, for a delay of 2 timer clocks. A value of 0 stops the timer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REPEAT</name>
              <description>Repeat delay. 0 = One-time delay. 1 = Delay repeats continuously.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STAT</name>
          <description>Status register.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>INTR</name>
              <description>Interrupt flag. 0 = No interrupt is pending. 1 = An interrupt is pending. A write of any value to this register clears this flag.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACTIVE</name>
              <description>Active flag. 0 = The Micro-Tick Timer is stopped. 1 = The Micro-Tick Timer is currently active.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFG</name>
          <description>Capture configuration register.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF0F</resetMask>
          <fields>
            <field>
              <name>CAPEN0</name>
              <description>Enable Capture 0. 1 = Enabled, 0 = Disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPEN1</name>
              <description>Enable Capture 1. 1 = Enabled, 0 = Disabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPEN2</name>
              <description>Enable Capture 2. 1 = Enabled, 0 = Disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPEN3</name>
              <description>Enable Capture 3. 1 = Enabled, 0 = Disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPPOL0</name>
              <description>Capture Polarity 0. 0 = Positive edge capture, 1 = Negative edge capture.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPPOL1</name>
              <description>Capture Polarity 1. 0 = Positive edge capture, 1 = Negative edge capture.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPPOL2</name>
              <description>Capture Polarity 2. 0 = Positive edge capture, 1 = Negative edge capture.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPPOL3</name>
              <description>Capture Polarity 3. 0 = Positive edge capture, 1 = Negative edge capture.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCLR</name>
          <description>Capture clear register.</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CAPCLR0</name>
              <description>Clear capture 0. Writing 1 to this bit clears the CAP0 register value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAPCLR1</name>
              <description>Clear capture 1. Writing 1 to this bit clears the CAP1 register value.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAPCLR2</name>
              <description>Clear capture 2. Writing 1 to this bit clears the CAP2 register value.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAPCLR3</name>
              <description>Clear capture 3. Writing 1 to this bit clears the CAP3 register value.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CAP[%s]</name>
          <description>Capture register .</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAP_VALUE</name>
              <description>Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VALID</name>
              <description>Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ANACTRL</name>
      <description>ANALOGCTRL</description>
      <groupName>ANACTRL</groupName>
      <baseAddress>0x40013000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x108</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ANALOG_CTRL_CFG</name>
          <description>Various Analog blocks configuration (like FRO 192MHz trimmings source ...)</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>FRO192M_TRIM_SRC</name>
              <description>FRO192M trimming and 'Enable' source.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>EFUSE</name>
                  <description>FRO192M trimming and 'Enable' comes from eFUSE.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRO192MCTRL</name>
                  <description>FRO192M trimming and 'Enable' comes from FRO192M_CTRL registers.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ANALOG_CTRL_STATUS</name>
          <description>Analog Macroblock Identity registers, Flash Status registers</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x50000000</resetValue>
          <resetMask>0xF0003FFF</resetMask>
          <fields>
            <field>
              <name>FLASH_PWRDWN</name>
              <description>Flash Power Down status.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWRUP</name>
                  <description>Flash is not in power down mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWRDWN</name>
                  <description>Flash is in power down mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLASH_INIT_ERROR</name>
              <description>Flash initialization error status.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOERROR</name>
                  <description>No error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>At least one error occured during flash initialization..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FREQ_ME_CTRL</name>
          <description>Frequency Measure function control register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPVAL_SCALE</name>
              <description>Frequency measure result /Frequency measur scale</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PROG</name>
              <description>Set this bit to one to initiate a frequency measurement cycle. Hardware clears this bit when the measurement cycle has completed and there is valid capture data in the CAPVAL field (bits 30:0).</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRO192M_CTRL</name>
          <description>192MHz Free Running OScillator (FRO) Control register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x80D01A</resetValue>
          <resetMask>0xF3FFFFBF</resetMask>
          <fields>
            <field>
              <name>ENA_12MHZCLK</name>
              <description>12 MHz clock control.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>12 MHz clock is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>12 MHz clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_TRIM</name>
              <description>Frequency trim.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USBCLKADJ</name>
              <description>If this bit is set and the USB peripheral is enabled into full speed device mode, the USB block will provide FRO clock adjustments to lock it to the host clock using the SOF packets.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USBMODCHG</name>
              <description>If it reads as 1 when reading the DAC_TRIM field and USBCLKADJ=1, it should be re-read until it is 0.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENA_96MHZCLK</name>
              <description>96 MHz clock control.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>96 MHz clock is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>96 MHz clock is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WRTRIM</name>
              <description>This must be written to 1 to modify the BIAS_TRIM and TEMP_TRIM fields.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRO192M_STATUS</name>
          <description>192MHz Free Running OScillator (FRO) Status register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x3</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CLK_VALID</name>
              <description>Output clock valid signal. Indicates that CCO clock has settled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOCLKOUT</name>
                  <description>No output clock present (None of 12 MHz, 48 MHz or 96 MHz clock is available).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLKOUT</name>
                  <description>Clock is present (12 MHz, 48 MHz or 96 MHz can be output if they are enable respectively by FRO192M_CTRL.ENA_12MHZCLK/ENA_48MHZCLK/ENA_96MHZCLK).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ATB_VCTRL</name>
              <description>CCO threshold voltage detector output (signal vcco_ok). Once the CCO voltage crosses the threshold voltage of a SLVT transistor, this output signal will go high. It is also possible to observe the clk_valid signal.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_CTRL</name>
          <description>General Purpose ADC VBAT Divider branch control</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>VBATDIVENABLE</name>
              <description>Switch On/Off VBAT divider branch.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>VBAT divider branch is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>VBAT divider branch is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>XO32M_CTRL</name>
          <description>High speed Crystal Oscillator Control register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x21428A</resetValue>
          <resetMask>0x1FFFFFFE</resetMask>
          <fields>
            <field>
              <name>SLAVE</name>
              <description>Xo in slave mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSC_CAP_IN</name>
              <description>Tune capa banks of High speed Crystal Oscillator input pin</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSC_CAP_OUT</name>
              <description>Tune capa banks of High speed Crystal Oscillator output pin</description>
              <bitOffset>15</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACBUF_PASS_ENABLE</name>
              <description>Bypass enable of XO AC buffer enable in pll and top level.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>XO AC buffer bypass is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>XO AC buffer bypass is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_PLL_USB_OUT</name>
              <description>Enable High speed Crystal oscillator output to USB HS PLL.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>High speed Crystal oscillator output to USB HS PLL is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>High speed Crystal oscillator output to USB HS PLL is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_SYSTEM_CLK_OUT</name>
              <description>Enable High speed Crystal oscillator output to CPU system.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>High speed Crystal oscillator output to CPU system is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>High speed Crystal oscillator output to CPU system is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>XO32M_STATUS</name>
          <description>High speed Crystal Oscillator Status register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>XO_READY</name>
              <description>Indicates XO out frequency statibilty.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_STABLE</name>
                  <description>XO output frequency is not yet stable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STABLE</name>
                  <description>XO output frequency is stable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BOD_DCDC_INT_CTRL</name>
          <description>Brown Out Detectors (BoDs) &amp; DCDC interrupts generation control register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>BODVBAT_INT_ENABLE</name>
              <description>BOD VBAT interrupt control.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>BOD VBAT interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>BOD VBAT interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODVBAT_INT_CLEAR</name>
              <description>BOD VBAT interrupt clear.1: Clear the interrupt. Self-cleared bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BODCORE_INT_ENABLE</name>
              <description>BOD CORE interrupt control.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>BOD CORE interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>BOD CORE interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODCORE_INT_CLEAR</name>
              <description>BOD CORE interrupt clear.1: Clear the interrupt. Self-cleared bit.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCDC_INT_ENABLE</name>
              <description>DCDC interrupt control.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>DCDC interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>DCDC interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCDC_INT_CLEAR</name>
              <description>DCDC interrupt clear.1: Clear the interrupt. Self-cleared bit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOD_DCDC_INT_STATUS</name>
          <description>BoDs &amp; DCDC interrupts status register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x12D</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>BODVBAT_STATUS</name>
              <description>BOD VBAT Interrupt status before Interrupt Enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>No interrupt pending..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Interrupt pending..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODVBAT_INT_STATUS</name>
              <description>BOD VBAT Interrupt status after Interrupt Enable.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>No interrupt pending..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Interrupt pending..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODVBAT_VAL</name>
              <description>Current value of BOD VBAT power status output.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OK</name>
                  <description>VBAT voltage level is below the threshold.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OK</name>
                  <description>VBAT voltage level is above the threshold.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODCORE_STATUS</name>
              <description>BOD CORE Interrupt status before Interrupt Enable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>No interrupt pending..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Interrupt pending..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODCORE_INT_STATUS</name>
              <description>BOD CORE Interrupt status after Interrupt Enable.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>No interrupt pending..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Interrupt pending..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODCORE_VAL</name>
              <description>Current value of BOD CORE power status output.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OK</name>
                  <description>CORE voltage level is below the threshold.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OK</name>
                  <description>CORE voltage level is above the threshold.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCDC_STATUS</name>
              <description>DCDC Interrupt status before Interrupt Enable.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>No interrupt pending..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Interrupt pending..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCDC_INT_STATUS</name>
              <description>DCDC Interrupt status after Interrupt Enable.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>No interrupt pending..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Interrupt pending..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCDC_VAL</name>
              <description>Current value of DCDC power status output.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OK</name>
                  <description>DCDC output Voltage is below the targeted regulation level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OK</name>
                  <description>DCDC output Voltage is above the targeted regulation level.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RINGO0_CTRL</name>
          <description>First Ring Oscillator module control register.</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40</resetValue>
          <resetMask>0x803F1FFF</resetMask>
          <fields>
            <field>
              <name>SL</name>
              <description>Select short or long ringo (for all ringos types).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHORT</name>
                  <description>Select short ringo (few elements).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LONG</name>
                  <description>Select long ringo (many elements).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FS</name>
              <description>Ringo frequency output divider.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>High frequency output (frequency lower than 100 MHz).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLOW</name>
                  <description>Low frequency output (frequency lower than 10 MHz).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWN_SWP</name>
              <description>PN-Ringos (P-Transistor and N-Transistor processing) control.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>P_MONITOR</name>
                  <description>P-Monitor mode. Measure with weak P transistor.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>N_MONITOR</name>
                  <description>P-Monitor mode. Measure with weak N transistor.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORBIDDEN</name>
                  <description>Don't use.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD</name>
              <description>Ringo module Power control.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWERED_ON</name>
                  <description>The Ringo module is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWERED_DOWN</name>
                  <description>The Ringo module is disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_ND0</name>
              <description>First NAND2-based ringo control.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>First NAND2-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>First NAND2-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_ND1</name>
              <description>Second NAND2-based ringo control.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Second NAND2-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Second NAND2-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_NR0</name>
              <description>First NOR2-based ringo control.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>First NOR2-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>First NOR2-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_NR1</name>
              <description>Second NOR2-based ringo control.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Second NORD2-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Second NORD2-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_IV0</name>
              <description>First Inverter-based ringo control.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>First INV-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>First INV-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_IV1</name>
              <description>Second Inverter-based ringo control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Second INV-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Second INV-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_PN0</name>
              <description>First PN (P-Transistor and N-Transistor processing) monitor control.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>First PN-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>First PN-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_PN1</name>
              <description>Second PN (P-Transistor and N-Transistor processing) monitor control.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Second PN-based ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Second PN-based ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIVISOR</name>
              <description>Ringo out Clock divider value. Frequency Output = Frequency input / (DIViSOR+1). (minimum = Frequency input / 16)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV_UPDATE_REQ</name>
              <description>Ringo clock out Divider status flag. Set when a change is made to the divider value, cleared when the change is complete.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RINGO1_CTRL</name>
          <description>Second Ring Oscillator module control register.</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40</resetValue>
          <resetMask>0x803F01FF</resetMask>
          <fields>
            <field>
              <name>S</name>
              <description>Select short or long ringo (for all ringos types).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHORT</name>
                  <description>Select short ringo (few elements).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LONG</name>
                  <description>Select long ringo (many elements).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FS</name>
              <description>Ringo frequency output divider.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>High frequency output (frequency lower than 100 MHz).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLOW</name>
                  <description>Low frequency output (frequency lower than 10 MHz).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD</name>
              <description>Ringo module Power control.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWERED_ON</name>
                  <description>The Ringo module is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWERED_DOWN</name>
                  <description>The Ringo module is disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_R24</name>
              <description>.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_R35</name>
              <description>.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M2</name>
              <description>Metal 2 (M2) monitor control.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M3</name>
              <description>Metal 3 (M3) monitor control.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M4</name>
              <description>Metal 4 (M4) monitor control.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M5</name>
              <description>Metal 5 (M5) monitor control.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIVISOR</name>
              <description>Ringo out Clock divider value. Frequency Output = Frequency input / (DIViSOR+1). (minimum = Frequency input / 16)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV_UPDATE_REQ</name>
              <description>Ringo clock out Divider status flag. Set when a change is made to the divider value, cleared when the change is complete.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RINGO2_CTRL</name>
          <description>Third Ring Oscillator module control register.</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40</resetValue>
          <resetMask>0x803F01FF</resetMask>
          <fields>
            <field>
              <name>S</name>
              <description>Select short or long ringo (for all ringos types).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHORT</name>
                  <description>Select short ringo (few elements).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LONG</name>
                  <description>Select long ringo (many elements).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FS</name>
              <description>Ringo frequency output divider.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FAST</name>
                  <description>High frequency output (frequency lower than 100 MHz).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLOW</name>
                  <description>Low frequency output (frequency lower than 10 MHz).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD</name>
              <description>Ringo module Power control.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWERED_ON</name>
                  <description>The Ringo module is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWERED_DOWN</name>
                  <description>The Ringo module is disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_R24</name>
              <description>.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_R35</name>
              <description>.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M2</name>
              <description>Metal 2 (M2) monitor control.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M3</name>
              <description>Metal 3 (M3) monitor control.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M4</name>
              <description>Metal 4 (M4) monitor control.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>E_M5</name>
              <description>Metal 5 (M5) monitor control.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ringo is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Ringo is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIVISOR</name>
              <description>Ringo out Clock divider value. Frequency Output = Frequency input / (DIViSOR+1). (minimum = Frequency input / 16)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV_UPDATE_REQ</name>
              <description>Ringo clock out Divider status flag. Set when a change is made to the divider value, cleared when the change is complete.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LDO_XO32M</name>
          <description>High Speed Crystal Oscillator (12 MHz - 32 MHz) Voltage Source Supply Control register</description>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x3A0</resetValue>
          <resetMask>0x3FE</resetMask>
          <fields>
            <field>
              <name>BYPASS</name>
              <description>Activate LDO bypass.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable bypass mode (for normal operations).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Activate LDO bypass.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HIGHZ</name>
              <description>.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMALMPEDANCE</name>
                  <description>Output in High normal state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGHIMPEDANCE</name>
                  <description>Output in High Impedance state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VOUT</name>
              <description>Sets the LDO output level.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V_0P750</name>
                  <description>0.750 V.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P775</name>
                  <description>0.775 V.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P800</name>
                  <description>0.800 V.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P825</name>
                  <description>0.825 V.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P850</name>
                  <description>0.850 V.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P875</name>
                  <description>0.875 V.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P900</name>
                  <description>0.900 V.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P925</name>
                  <description>0.925 V.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IBIAS</name>
              <description>Adjust the biasing current.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STABMODE</name>
              <description>Stability configuration.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUX_BIAS</name>
          <description>AUX_BIAS</description>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x703A0</resetValue>
          <resetMask>0x3FFFFE</resetMask>
          <fields>
            <field>
              <name>VREF1VENABLE</name>
              <description>Control output of 1V reference voltage.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Output of 1V reference voltage buffer is bypassed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Output of 1V reference voltage is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ITRIM</name>
              <description>current trimming control word.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PTATITRIM</name>
              <description>current trimming control word for ptat current.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VTRIM</name>
              <description>voltage trimming control word.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF1VCURVETRIM</name>
              <description>Control bit to configure trimming state of mirror.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ITRIMCTRL0</name>
              <description>Control bit to configure trimming state of mirror.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ITRIMCTRL1</name>
              <description>Control bit to configure trimming state of mirror.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DUMMY_CTRL</name>
          <description>Dummy Control bus to analog modules</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF7</resetMask>
          <fields>
            <field>
              <name>XO32M_ADC_CLK_MODE</name>
              <description>Control High speed Crystal oscillator mode of the ADC clock.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>High speed Crystal oscillator output to ADC is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XO_ADC_ENABLE</name>
                  <description>High speed Crystal oscillator output to ADC is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USBHS_PHY_CTRL</name>
          <description>USB High Speed Phy Control</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x8</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>usb_vbusvalid_ext</name>
              <description>Override value for Vbus if using external detectors.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>usb_id_ext</name>
              <description>Override value for ID if using external detectors.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_atx</name>
              <description>.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBHS_PHY_TRIM</name>
          <description>USB High Speed Phy Trim values</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>trim_usb_reg_env_tail_adj_vd</name>
              <description>Adjusts time constant of HS RX squelch (envelope) comparator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>trim_usbphy_tx_d_cal</name>
              <description>.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>trim_usbphy_tx_cal45dp</name>
              <description>.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>trim_usbphy_tx_cal45dm</name>
              <description>.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>trim_usb2_refbias_tst</name>
              <description>.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>trim_usb2_refbias_vbgadj</name>
              <description>.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>trim_pll_ctrl0_div_sel</name>
              <description>.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PMC</name>
      <description>PMC</description>
      <groupName>PMC</groupName>
      <baseAddress>0x40020000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xD8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ACMP</name>
        <value>24</value>
      </interrupt>
      <registers>
        <register>
          <name>STATUS</name>
          <description>Power Management Controller FSM (Finite State Machines) status</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF00FFFFF</resetMask>
          <fields>
            <field>
              <name>FSMMAIN</name>
              <description>Power Management Controller Main Finite State Machine (FSM) status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FSMMAIN_POWERUP</name>
                  <description>POWER UP : The IC is powering up.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FSMMAIN_ACTIVE</name>
                  <description>ACTIVE : Power up is completed. The IC is in normal functional operation mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FSMMAIN_POWERDOWN</name>
                  <description>POWER DOWN : the IC has entered POWER DOWN mode.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FSMMAIN_DEEPSLEEP</name>
                  <description>DEEP SLEEP: The IC has entered DEEP SLEEP mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FSMMAIN_DEEPPOWERDOWN</name>
                  <description>DEEP POWER DOWN : The IC entred DEEP POWER DOWN mode.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FSMMAIN_DFT_ACTIVE</name>
                  <description>IC Structural TEST Mode : The IC has entered in IC Test mode.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSMPWUP</name>
              <description>POWER UP Finite State Machine (FSM) status.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FSMDSLP</name>
              <description>DEEP SLEEP Finite State Machine (FSM) status.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FSMPWDN</name>
              <description>POWER DOWN Finite State Machine (FSM) status.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FSMDPWD</name>
              <description>DEEP POWER DOWN Finite State Machine (FSM) status.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BOOTMODE</name>
              <description>Latest IC Boot cause:.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWERUP</name>
                  <description>Latest IC boot was a Full power cycle boot sequence (PoR, Pin Reset, Brown Out Detectors Reset, Software Reset).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DEEPSLEEP</name>
                  <description>Latest IC boot was from DEEP SLEEP low power mode..</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWERDOWN</name>
                  <description>Latest IC boot was from POWER DOWN low power mode..</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DEEPPOWERDOWN</name>
                  <description>Latest IC boot was from DEEP POWER DOWN low power mode..</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAFERTESTDONEVECT</name>
              <description>Indicates cuurent status of wafer test level.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RESETCTRL</name>
          <description>Reset Control [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x50000050</resetValue>
          <resetMask>0xF00000F9</resetMask>
          <fields>
            <field>
              <name>DPDWAKEUPRESETENABLE</name>
              <description>Wake-up from DEEP POWER DOWN reset event (either from wake up I/O or RTC or OS Event Timer).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Reset event from DEEP POWER DOWN mode is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Reset event from DEEP POWER DOWN mode is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWRRESETENABLE</name>
              <description>Software reset enable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Software reset is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Software reset is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODVBATRESETENA_SECURE</name>
              <description>BOD VBAT reset enable.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Any other value than b10, BOD VBAT reset is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>BOD VBAT reset is disable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODCORERESETENA_SECURE</name>
              <description>BOD Core reset enable.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Any other value than b10, BOD Core reset is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>BOD Core reset is disable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODVBATRESETENA_SECURE_DP</name>
              <description>BOD VBAT reset enable.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Any other value than b10, BOD VBAT reset is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>BOD VBAT reset is disable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BODCORERESETENA_SECURE_DP</name>
              <description>BOD Core reset enable.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Any other value than b10, BOD Core reset is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>BOD Core reset is disable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC0</name>
          <description>DCDC (first) control register [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x10C4E68</resetValue>
          <resetMask>0x7FFFFFF</resetMask>
          <fields>
            <field>
              <name>RC</name>
              <description>Constant On-Time calibration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICOMP</name>
              <description>Select the type of ZCD comparator.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISEL</name>
              <description>Alter Internal biasing currents.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICENABLE</name>
              <description>Selection of auto scaling of COT period with variations in VDD.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TMOS</name>
              <description>One-shot generator reference current trimming signal.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DISABLEISENSE</name>
              <description>Disable Current sensing.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT</name>
              <description>Set output regulation voltage.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V_DCDC_0P950</name>
                  <description>0.95 V.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_0P975</name>
                  <description>0.975 V.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P000</name>
                  <description>1 V.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P025</name>
                  <description>1.025 V.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P050</name>
                  <description>1.05 V.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P075</name>
                  <description>1.075 V.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P100</name>
                  <description>1.1 V.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P125</name>
                  <description>1.125 V.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P150</name>
                  <description>1.15 V.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P175</name>
                  <description>1.175 V.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_DCDC_1P200</name>
                  <description>1.2 V.</description>
                  <value>0xA</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLICINGENABLE</name>
              <description>Enable staggered switching of power switches.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDUCTORCLAMPENABLE</name>
              <description>Enable shorting of Inductor during PFM idle time.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VOUT_PWD</name>
              <description>Set output regulation voltage during Deep Sleep.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCDC1</name>
          <description>DCDC (second) control register [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1803A98</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RTRIMOFFET</name>
              <description>Adjust the offset voltage of BJT based comparator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSENSETRIM</name>
              <description>Adjust Max inductor peak current limiting.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTENABLE</name>
              <description>Enable Digital test signals.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETCURVE</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETDC</name>
              <description>Bandgap calibration parameter.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTESTSEL</name>
              <description>Select the output signal for test.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISCALEENABLE</name>
              <description>Modify COT behavior.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEBYPASS</name>
              <description>Force bypass mode.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIMAUTOCOT</name>
              <description>Change the scaling ratio of the feedforward compensation.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEFULLCYCLE</name>
              <description>Force full PFM PMOS and NMOS cycle.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCENABLE</name>
              <description>Change the range of the peak detector of current inside the inductor.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFF</name>
              <description>Constant Off-Time calibration input.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOFFENABLE</name>
              <description>Enable Constant Off-Time feature.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LDOPMU</name>
          <description>Power Management Unit (PMU) and Always-On domains LDO control [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x10EF718</resetValue>
          <resetMask>0x31FFFFF</resetMask>
          <fields>
            <field>
              <name>VADJ</name>
              <description>Sets the Always-On domain LDO output level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V_1P220</name>
                  <description>1.22 V.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P700</name>
                  <description>0.7 V.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P725</name>
                  <description>0.725 V.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P750</name>
                  <description>0.75 V.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P775</name>
                  <description>0.775 V.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P800</name>
                  <description>0.8 V.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P825</name>
                  <description>0.825 V.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P850</name>
                  <description>0.85 V.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P875</name>
                  <description>0.875 V.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P900</name>
                  <description>0.9 V.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P960</name>
                  <description>0.96 V.</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P970</name>
                  <description>0.97 V.</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P980</name>
                  <description>0.98 V.</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_0P990</name>
                  <description>0.99 V.</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P000</name>
                  <description>1 V.</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P010</name>
                  <description>1.01 V.</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P020</name>
                  <description>1.02 V.</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P030</name>
                  <description>1.03 V.</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P040</name>
                  <description>1.04 V.</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P050</name>
                  <description>1.05 V.</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P060</name>
                  <description>1.06 V.</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P070</name>
                  <description>1.07 V.</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P080</name>
                  <description>1.08 V.</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P090</name>
                  <description>1.09 V.</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P100</name>
                  <description>1.1 V.</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P110</name>
                  <description>1.11 V.</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P120</name>
                  <description>1.12 V.</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P130</name>
                  <description>1.13 V.</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P140</name>
                  <description>1.14 V.</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P150</name>
                  <description>1.15 V.</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P160</name>
                  <description>1.16 V.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P220_1</name>
                  <description>1.22 V.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VADJ_PWD</name>
              <description>Sets the Always-On domain LDO output level in all power down modes.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VADJ_BOOST</name>
              <description>Sets the Always-On domain LDO Boost output level.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VADJ_BOOST_PWD</name>
              <description>Sets the Always-On domain LDO Boost output level in all power down modes.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLEED</name>
              <description>Controls LDOMEM bleed current.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Bleed current is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Bleed current is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOST_ENA</name>
              <description>Control the LDO AO boost mode in ACTIVE mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>LDO AO Boost Mode is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>LDO AO Boost Mode is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOST_ENA_PWD</name>
              <description>Control the LDO AO boost mode in the different low power modes (DEEP SLEEP, POWERDOWN, and DEEP POWER DOWN).</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>LDO AO Boost Mode is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>LDO AO Boost Mode is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BODVBAT</name>
          <description>VBAT Brown Out Dectector (BoD) control register [Reset by: PoR, Pin Reset, Software Reset]</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x47</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TRIGLVL</name>
              <description>BoD trigger level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V_1P00</name>
                  <description>1.00 V.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P10</name>
                  <description>1.10 V.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P20</name>
                  <description>1.20 V.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P30</name>
                  <description>1.30 V.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P40</name>
                  <description>1.40 V.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P50</name>
                  <description>1.50 V.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P60</name>
                  <description>1.60 V.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P65</name>
                  <description>1.65 V.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P70</name>
                  <description>1.70 V.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P75</name>
                  <description>1.75 V.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P80</name>
                  <description>1.80 V.</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_1P90</name>
                  <description>1.90 V.</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P00</name>
                  <description>2.00 V.</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P10</name>
                  <description>2.10 V.</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P20</name>
                  <description>2.20 V.</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P30</name>
                  <description>2.30 V.</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P40</name>
                  <description>2.40 V.</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P50</name>
                  <description>2.50 V.</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P60</name>
                  <description>2.60 V.</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P70</name>
                  <description>2.70 V.</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P80</name>
                  <description>2.806 V.</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_2P90</name>
                  <description>2.90 V.</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P00</name>
                  <description>3.00 V.</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P10</name>
                  <description>3.10 V.</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P20</name>
                  <description>3.20 V.</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P30_2</name>
                  <description>3.30 V.</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P30_3</name>
                  <description>3.30 V.</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P30_4</name>
                  <description>3.30 V.</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P30_5</name>
                  <description>3.30 V.</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P30_6</name>
                  <description>3.30 V.</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P30_7</name>
                  <description>3.30 V.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_3P30_8</name>
                  <description>3.30 V.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HYST</name>
              <description>BoD Hysteresis control.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HYST_25MV</name>
                  <description>25 mV.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HYST_50MV</name>
                  <description>50 mV.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HYST_75MV</name>
                  <description>75 mV.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HYST_100MV</name>
                  <description>100 mV.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>REFFASTWKUP</name>
          <description>Analog References fast wake-up Control register [Reset by: PoR]</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>LPWKUP</name>
              <description>Analog References fast wake-up in case of wake-up from a low power mode (DEEP SLEEP, POWER DOWN and DEEP POWER DOWN): .</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog References fast wake-up feature is disabled in case of wake-up from any Low power mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog References fast wake-up feature is enabled in case of wake-up from any Low power mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HWWKUP</name>
              <description>Analog References fast wake-up in case of Hardware Pin reset: .</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Analog References fast wake-up feature is disabled in case of Hardware Pin reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Analog References fast wake-up feature is enabled in case of Hardware Pin reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL32K</name>
          <description>32 KHz Crystal oscillator (XTAL) control register [Reset by: PoR, Brown Out Detectors Reset]</description>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x204052</resetValue>
          <resetMask>0x3FFFFFE</resetMask>
          <fields>
            <field>
              <name>IREF</name>
              <description>reference output current selection inputs.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEST</name>
              <description>Oscillator Test Mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBIAS</name>
              <description>bias current selection inputs.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMPL</name>
              <description>oscillator amplitude selection inputs.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPBANKIN</name>
              <description>Capa bank setting input.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPBANKOUT</name>
              <description>Capa bank setting output.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPTESTSTARTSRCSEL</name>
              <description>Source selection for xo32k_captest_start_ao_set.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CAPSTART</name>
                  <description>Sourced from CAPTESTSTART.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CALIB</name>
                  <description>Sourced from calibration.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAPTESTSTART</name>
              <description>Start test.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPTESTENABLE</name>
              <description>Enable signal for cap test.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPTESTOSCINSEL</name>
              <description>Select the input for test.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSCOUT</name>
                  <description>Oscillator output pin (osc_out).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSCIN</name>
                  <description>Oscillator input pin (osc_in).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP</name>
          <description>Analog Comparator control register [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA</resetValue>
          <resetMask>0xFF7FFE</resetMask>
          <fields>
            <field>
              <name>HYST</name>
              <description>Hysteris when hyst = '1'.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Hysteresis is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Hysteresis is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREFINPUT</name>
              <description>Dedicated control bit to select between internal VREF and VDDA (for the resistive ladder).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INTERNALREF</name>
                  <description>Select internal VREF.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDDA</name>
                  <description>Select VDDA.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOWPOWER</name>
              <description>Low power mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGHSPEED</name>
                  <description>High speed mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOWSPEED</name>
                  <description>Low power mode (Low speed).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PMUX</name>
              <description>Control word for P multiplexer:.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VREF</name>
                  <description>VREF (See fiedl VREFINPUT).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_A</name>
                  <description>Pin P0_0.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_B</name>
                  <description>Pin P0_9.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_C</name>
                  <description>Pin P0_18.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_D</name>
                  <description>Pin P1_14.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_E</name>
                  <description>Pin P2_23.</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NMUX</name>
              <description>Control word for N multiplexer:.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VREF</name>
                  <description>VREF (See field VREFINPUT).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_A</name>
                  <description>Pin P0_0.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_B</name>
                  <description>Pin P0_9.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_C</name>
                  <description>Pin P0_18.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_D</name>
                  <description>Pin P1_14.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMP0_E</name>
                  <description>Pin P2_23.</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREF</name>
              <description>Control reference voltage step, per steps of (VREFINPUT/31).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTERCGF_SAMPLEMODE</name>
              <description>Control the filtering of the Analog Comparator output.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BYPASS</name>
                  <description>Bypass mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER1CLK</name>
                  <description>Filter 1 clock period.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER2CLK</name>
                  <description>Filter 2 clock period.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER3CLK</name>
                  <description>Filter 3 clock period.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTERCGF_CLKDIV</name>
              <description>Filter Clock divider.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FILTER_1CLK_PERIOD</name>
                  <description>Filter clock period duration equals 1 Analog Comparator clock period.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_2CLK_PERIOD</name>
                  <description>Filter clock period duration equals 2 Analog Comparator clock period.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_4CLK_PERIOD</name>
                  <description>Filter clock period duration equals 4 Analog Comparator clock period.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_8CLK_PERIOD</name>
                  <description>Filter clock period duration equals 8 Analog Comparator clock period.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_16CLK_PERIOD</name>
                  <description>Filter clock period duration equals 16 Analog Comparator clock period.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_32CLK_PERIOD</name>
                  <description>Filter clock period duration equals 32 Analog Comparator clock period.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_64CLK_PERIOD</name>
                  <description>Filter clock period duration equals 64 Analog Comparator clock period.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_128CLK_PERIOD</name>
                  <description>Filter clock period duration equals 128 Analog Comparator clock period.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEUPIOCTRL</name>
          <description>Deep Power Down wake-up source [Reset by: PoR, Pin Reset, Software Reset]</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x200000</resetValue>
          <resetMask>0x3FF0FF</resetMask>
          <fields>
            <field>
              <name>RISINGEDGEWAKEUP0</name>
              <description>Enable / disable detection of rising edge events on Wake Up 0 pin in Deep Power Down modes:.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Rising edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Rising edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FALLINGEDGEWAKEUP0</name>
              <description>Enable / disable detection of falling edge events on Wake Up 0 pin in Deep Power Down modes:.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Falling edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Falling edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RISINGEDGEWAKEUP1</name>
              <description>Enable / disable detection of rising edge events on Wake Up 1 pin in Deep Power Down modes:.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Rising edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Rising edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FALLINGEDGEWAKEUP1</name>
              <description>Enable / disable detection of falling edge events on Wake Up 1 pin in Deep Power Down modes:.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Falling edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Falling edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RISINGEDGEWAKEUP2</name>
              <description>Enable / disable detection of rising edge events on Wake Up 2 pin in Deep Power Down modes:.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Rising edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Rising edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FALLINGEDGEWAKEUP2</name>
              <description>Enable / disable detection of falling edge events on Wake Up 2 pin in Deep Power Down modes:.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Falling edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Falling edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RISINGEDGEWAKEUP3</name>
              <description>Enable / disable detection of rising edge events on Wake Up 3 pin in Deep Power Down modes:.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Rising edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Rising edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FALLINGEDGEWAKEUP3</name>
              <description>Enable / disable detection of falling edge events on Wake Up 3 pin in Deep Power Down modes:.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Falling edge detection is disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Falling edge detection is enable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODEWAKEUPIOPAD0</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODEWAKEUPIOPAD1</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODEWAKEUPIOPAD2</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODEWAKEUPIOPAD3</name>
              <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. Inactive (no pull-down/pull-up resistor enabled).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_DOWN</name>
                  <description>Pull-down. Pull-down resistor enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PULL_UP</name>
                  <description>Pull-up. Pull-up resistor enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REPEATER</name>
                  <description>Repeater. Repeater mode.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEUPIO_ENABLE_CTRL</name>
              <description>Enable WAKEUP IO PAD control from MODEWAKEUPIOPAD (bits 12 to 19).</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>WAKEUP IO PAD mode control comes from IOCON.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>WAKEUP IO PAD mode control comes from MODEWAKEUPIOPAD (bits 12 to 19).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEUPIO_RSTN</name>
              <description>WAKEUP IO event detector reset control.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>Bloc is reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RELEASED</name>
                  <description>Bloc is not reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEIOCAUSE</name>
          <description>Allows to identify the Wake-up I/O source from Deep Power Down mode</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>WAKEUP0</name>
              <description>Allows to identify Wake up I/O 0 as the wake-up source from Deep Power Down mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOEVENT</name>
                  <description>Last wake up from Deep Power down mode was NOT triggred by wake up I/O 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Last wake up from Deep Power down mode was triggred by wake up I/O 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEUP1</name>
              <description>Allows to identify Wake up I/O 1 as the wake-up source from Deep Power Down mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOEVENT</name>
                  <description>Last wake up from Deep Power down mode was NOT triggred by wake up I/O 1.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Last wake up from Deep Power down mode was triggred by wake up I/O 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEUP2</name>
              <description>Allows to identify Wake up I/O 2 as the wake-up source from Deep Power Down mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOEVENT</name>
                  <description>Last wake up from Deep Power down mode was NOT triggred by wake up I/O 2.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Last wake up from Deep Power down mode was triggred by wake up I/O 2.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEUP3</name>
              <description>Allows to identify Wake up I/O 3 as the wake-up source from Deep Power Down mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOEVENT</name>
                  <description>Last wake up from Deep Power down mode was NOT triggred by wake up I/O 3.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT</name>
                  <description>Last wake up from Deep Power down mode was triggred by wake up I/O 3.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUSCLK</name>
          <description>FRO and XTAL status register [Reset by: PoR, Brown Out Detectors Reset]</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x6</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>XTAL32KOK</name>
              <description>XTAL oscillator 32 K OK signal.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32KOSCFAILURE</name>
              <description>XTAL32 KHZ oscillator oscillation failure detection indicator.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOFAIL</name>
                  <description>No oscillation failure has been detetced since the last time this bit has been cleared.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAILURE</name>
                  <description>At least one oscillation failure has been detetced since the last time this bit has been cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AOREG1</name>
          <description>General purpose always on domain data storage [Reset by: PoR, Brown Out Detectors Reset]</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>POR</name>
              <description>The last chip reset was caused by a Power On Reset.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PADRESET</name>
              <description>The last chip reset was caused by a Pin Reset.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BODRESET</name>
              <description>The last chip reset was caused by a Brown Out Detector (BoD), either VBAT BoD or Core Logic BoD.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSTEMRESET</name>
              <description>The last chip reset was caused by a System Reset requested by the ARM CPU.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDTRESET</name>
              <description>The last chip reset was caused by the Watchdog Timer.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWRRESET</name>
              <description>The last chip reset was caused by a Software event.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DPDRESET_WAKEUPIO</name>
              <description>The last chip reset was caused by a Wake-up I/O reset event during a Deep Power-Down mode.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DPDRESET_RTC</name>
              <description>The last chip reset was caused by an RTC (either RTC Alarm or RTC wake up) reset event during a Deep Power-Down mode.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DPDRESET_OSTIMER</name>
              <description>The last chip reset was caused by an OS Event Timer reset event during a Deep Power-Down mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CDOGRESET</name>
              <description>The last chip reset was caused by the code Watchdog.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOTERRORCOUNTER</name>
              <description>ROM Boot Fatal Error Counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISCCTRL</name>
          <description>Dummy Control bus to PMU [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LDODEEPSLEEPREF</name>
              <description>Select LDO Deep Sleep reference source.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FLASHBUFFER</name>
                  <description>LDO DEEP Sleep uses Flash buffer biasing as reference.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BGP0P8V</name>
                  <description>LDO DEEP Sleep uses Band Gap 0.8V as reference.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LDOMEMHIGHZMODE</name>
              <description>Control the activation of LDO MEM High Z mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>LDO MEM High Z mode is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>LDO MEM High Z mode is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOWPWR_FLASH_BUF</name>
              <description>no description available</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MISCCTRL_3_11</name>
              <description>Reserved.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DISABLE_BLEED</name>
              <description>Controls LDO MEM bleed current. This field is expected to be controlled by the Low Power Software only in DEEP SLEEP low power mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLEED_ENABLE</name>
                  <description>LDO_MEM bleed current is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BLEED_DISABLE</name>
                  <description>LDO_MEM bleed current is disabled. Should be set before entering in Deep Sleep low power mode and cleared after wake up from Deep SLeep low power mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MISCCTRL_13_15</name>
              <description>Reserved.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTCOSC32K</name>
          <description>RTC 1 KHZ and 1 Hz clocks source control register [Reset by: PoR, Brown Out Detectors Reset]</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x3FF0008</resetValue>
          <resetMask>0xC7FF800F</resetMask>
          <fields>
            <field>
              <name>SEL</name>
              <description>Select the 32K oscillator to be used in Deep Power Down Mode for the RTC (either XTAL32KHz or FRO32KHz) .</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FRO32K</name>
                  <description>FRO 32 KHz.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XTAL32K</name>
                  <description>XTAL 32KHz.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK1KHZDIV</name>
              <description>Actual division ratio is : 28 + CLK1KHZDIV.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK1KHZDIVUPDATEREQ</name>
              <description>RTC 1KHz clock Divider status flag.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK1HZDIV</name>
              <description>Actual division ratio is : 31744 + CLK1HZDIV.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK1HZDIVHALT</name>
              <description>Halts the divider counter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK1HZDIVUPDATEREQ</name>
              <description>RTC 1Hz Divider status flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OSTIMER</name>
          <description>OS Timer control register [Reset by: PoR, Brown Out Detectors Reset]</description>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x8</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>SOFTRESET</name>
              <description>Active high reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLOCKENABLE</name>
              <description>Enable OS event timer clock.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DPDWAKEUPENABLE</name>
              <description>Wake up enable in Deep Power Down mode (To be used in Enable Deep Power Down mode).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSC32KPD</name>
              <description>Oscilator 32KHz (either FRO32KHz or XTAL32KHz according to RTCOSC32K.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSTIMERCLKSEL</name>
              <description>OS event timer clock select.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_0x0</name>
                  <description>Oscillator 32 kHz clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x1</name>
                  <description>FRO 1MHz clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x2</name>
                  <description>Main clock for OS timer.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_0x3</name>
                  <description>No clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PDRUNCFG0</name>
          <description>Controls the power to various analog blocks [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xDEFFC0</resetValue>
          <resetMask>0xFFFFEF</resetMask>
          <fields>
            <field>
              <name>PDEN_BODVBAT</name>
              <description>Controls power to VBAT Brown Out Detector (BOD).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>BOD VBAT is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>BOD VBAT is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_FRO32K</name>
              <description>Controls power to the Free Running Oscillator (FRO) 32 KHz.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>FRO32KHz is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>FRO32KHz is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_XTAL32K</name>
              <description>Controls power to crystal 32 KHz.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>Crystal 32KHz is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>Crystal 32KHz is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_XTAL32M</name>
              <description>Controls power to high speed crystal.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>High speed crystal is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>High speed crystal is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_PLL0</name>
              <description>Controls power to System PLL (also refered as PLL0).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>PLL0 is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>PLL0 is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_PLL1</name>
              <description>Controls power to USB PLL (also refered as PLL1).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>PLL1 is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>PLL1 is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_USBFSPHY</name>
              <description>Controls power to USB Full Speed phy.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>USB Full Speed phy is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>USB Full Speed phy is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_USBHSPHY</name>
              <description>Controls power to USB High Speed Phy.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>USB HS phy is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>USB HS phy is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_COMP</name>
              <description>Controls power to Analog Comparator.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>Analog Comparator is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>Analog Comparator is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_LDOUSBHS</name>
              <description>Controls power to USB high speed LDO.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>USB high speed LDO is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>USB high speed LDO is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_AUXBIAS</name>
              <description>Controls power to auxiliary biasing (AUXBIAS)</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>auxiliary biasing is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>auxiliary biasing is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_LDOXO32M</name>
              <description>Controls power to high speed crystal LDO.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>High speed crystal LDO is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>High speed crystal LDO is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_RNG</name>
              <description>Controls power to all True Random Number Genetaor (TRNG) clock sources.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>TRNG clocks are powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>TRNG clocks are powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PDEN_PLL0_SSCG</name>
              <description>Controls power to System PLL (PLL0) Spread Spectrum module.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWEREDON</name>
                  <description>PLL0 Sread spectrum module is powered.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWEREDOFF</name>
                  <description>PLL0 Sread spectrum module is powered down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PDRUNCFGSET0</name>
          <description>Controls the power to various analog blocks [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PDRUNCFGSET0</name>
              <description>Writing ones to this register sets the corresponding bit or bits in the PDRUNCFG0 register, if they are implemented.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PDRUNCFGCLR0</name>
          <description>Controls the power to various analog blocks [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Deep Power Down Reset, Software Reset]</description>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PDRUNCFGCLR0</name>
              <description>Writing ones to this register clears the corresponding bit or bits in the PDRUNCFG0 register, if they are implemented.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAMCTRL</name>
          <description>All SRAMs common control signals [Reset by: PoR, Pin Reset, Brown Out Detectors Reset, Software Reset]</description>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>SMB</name>
              <description>Source Biasing voltage.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low leakage.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MEDIUM</name>
                  <description>Medium leakage.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGHEST</name>
                  <description>Highest leakage.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RM</name>
              <description>Read Margin control settings.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WM</name>
              <description>Write Margin control settings.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WRME</name>
              <description>Write read margin enable.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYSCTL</name>
      <description>system controller</description>
      <groupName>SYSCTL</groupName>
      <baseAddress>0x40023000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x190</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>UPDATELCKOUT</name>
          <description>update lock out control</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>UPDATELCKOUT</name>
              <description>All Registers</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL_MODE</name>
                  <description>Normal Mode. Can be written to.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PROTECTED_MODE</name>
                  <description>Protected Mode. Cannot be written to.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0,1,2,3,4,5,6,7</dimIndex>
          <name>FCCTRLSEL%s</name>
          <description>Selects the source for SCK going into Flexcomm index</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3030303</resetMask>
          <fields>
            <field>
              <name>SCKINSEL</name>
              <description>Selects the source for SCK going into this Flexcomm.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-writeOnce</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ORIG_FLEX_I2S_SIGNALS</name>
                  <description>Selects the dedicated FCn_SCK function for this Flexcomm.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET0_I2S_SIGNALS</name>
                  <description>SCK is taken from shared signal set 0 (defined by SHAREDCTRLSET0).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET1_I2S_SIGNALS</name>
                  <description>SCK is taken from shared signal set 1 (defined by SHAREDCTRLSET1).</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WSINSEL</name>
              <description>Selects the source for WS going into this Flexcomm.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ORIG_FLEX_I2S_SIGNALS</name>
                  <description>Selects the dedicated (FCn_TXD_SCL_MISO_WS) function for this Flexcomm.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET0_I2S_SIGNALS</name>
                  <description>WS is taken from shared signal set 0 (defined by SHAREDCTRLSET0).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET1_I2S_SIGNALS</name>
                  <description>WS is taken from shared signal set 1 (defined by SHAREDCTRLSET1).</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATAINSEL</name>
              <description>Selects the source for DATA input to this Flexcomm.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ORIG_FLEX_I2S_SIGNALS</name>
                  <description>Selects the dedicated FCn_RXD_SDA_MOSI_DATA input for this Flexcomm.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET0_I2S_SIGNALS</name>
                  <description>Input data is taken from shared signal set 0 (defined by SHAREDCTRLSET0).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET1_I2S_SIGNALS</name>
                  <description>Input data is taken from shared signal set 1 (defined by SHAREDCTRLSET1).</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATAOUTSEL</name>
              <description>Selects the source for DATA output from this Flexcomm.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ORIG_FLEX_I2S_SIGNALS</name>
                  <description>Selects the dedicated FCn_RXD_SDA_MOSI_DATA output from this Flexcomm.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET0_I2S_SIGNALS</name>
                  <description>Output data is taken from shared signal set 0 (defined by SHAREDCTRLSET0).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHARED_SET1_I2S_SIGNALS</name>
                  <description>Output data is taken from shared signal set 1 (defined by SHAREDCTRLSET1).</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0,1</dimIndex>
          <name>SHAREDCTRLSET%s</name>
          <description>Selects sources and data combinations for shared signal set index.</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF0777</resetMask>
          <fields>
            <field>
              <name>SHAREDSCKSEL</name>
              <description>Selects the source for SCK of this shared signal set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FLEXCOMM0</name>
                  <description>SCK for this shared signal set comes from Flexcomm 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM1</name>
                  <description>SCK for this shared signal set comes from Flexcomm 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM2</name>
                  <description>SCK for this shared signal set comes from Flexcomm 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM3</name>
                  <description>SCK for this shared signal set comes from Flexcomm 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM4</name>
                  <description>SCK for this shared signal set comes from Flexcomm 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM5</name>
                  <description>SCK for this shared signal set comes from Flexcomm 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM6</name>
                  <description>SCK for this shared signal set comes from Flexcomm 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM7</name>
                  <description>SCK for this shared signal set comes from Flexcomm 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHAREDWSSEL</name>
              <description>Selects the source for WS of this shared signal set.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FLEXCOMM0</name>
                  <description>WS for this shared signal set comes from Flexcomm 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM1</name>
                  <description>WS for this shared signal set comes from Flexcomm 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM2</name>
                  <description>WS for this shared signal set comes from Flexcomm 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM3</name>
                  <description>WS for this shared signal set comes from Flexcomm 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM4</name>
                  <description>WS for this shared signal set comes from Flexcomm 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM5</name>
                  <description>WS for this shared signal set comes from Flexcomm 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM6</name>
                  <description>WS for this shared signal set comes from Flexcomm 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM7</name>
                  <description>WS for this shared signal set comes from Flexcomm 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHAREDDATASEL</name>
              <description>Selects the source for DATA input for this shared signal set.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FLEXCOMM0</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM1</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM2</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM3</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM4</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM5</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM6</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLEXCOMM7</name>
                  <description>DATA input for this shared signal set comes from Flexcomm 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC0DATAOUTEN</name>
              <description>Controls FC0 contribution to SHAREDDATAOUT for this shared set.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>Data output from FC0 does not contribute to this shared set.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>Data output from FC0 does contribute to this shared set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC1DATAOUTEN</name>
              <description>Controls FC1 contribution to SHAREDDATAOUT for this shared set.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>Data output from FC1 does not contribute to this shared set.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>Data output from FC1 does contribute to this shared set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC2DATAOUTEN</name>
              <description>Controls FC2 contribution to SHAREDDATAOUT for this shared set.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>Data output from FC2 does not contribute to this shared set.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>Data output from FC2 does contribute to this shared set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC4DATAOUTEN</name>
              <description>Controls FC4 contribution to SHAREDDATAOUT for this shared set.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>Data output from FC4 does not contribute to this shared set.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>Data output from FC4 does contribute to this shared set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC5DATAOUTEN</name>
              <description>Controls FC5 contribution to SHAREDDATAOUT for this shared set.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>Data output from FC5 does not contribute to this shared set.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>Data output from FC5 does contribute to this shared set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC6DATAOUTEN</name>
              <description>Controls FC6 contribution to SHAREDDATAOUT for this shared set.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>Data output from FC6 does not contribute to this shared set.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>Data output from FC6 does contribute to this shared set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FC7DATAOUTEN</name>
              <description>Controls FC7 contribution to SHAREDDATAOUT for this shared set.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT</name>
                  <description>Data output from FC7 does not contribute to this shared set.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OUTPUT</name>
                  <description>Data output from FC7 does contribute to this shared set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_HS_STATUS</name>
          <description>Status register for USB HS</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x1C0FF00</resetMask>
          <fields>
            <field>
              <name>USBHS_3V_NOK</name>
              <description>USB_HS: Low voltage detection on 3.3V supply.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SUPPLY_3V_OK</name>
                  <description>3v3 supply is good.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUPPLY_3V_LOW</name>
                  <description>3v3 supply is too low.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CODE_GRAY_LSB</name>
          <description>CODE_GRAY LSB input Register</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CODE_GRAY_LSB</name>
              <description>Gray code (42bits) to be converted back to binary</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CODE_GRAY_MSB</name>
          <description>CODE_GRAY MSB input Register</description>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CODE_GRAY_MSB</name>
              <description>Gray code (42bits) to be converted back to binary</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CODE_BIN_LSB</name>
          <description>CODE_BIN LSB output Register</description>
          <addressOffset>0x188</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CODE_BIN_LSB</name>
              <description>Binary converted code (42bits)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CODE_BIN_MSB</name>
          <description>CODE_BIN MSB output Register</description>
          <addressOffset>0x18C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CODE_BIN_MSB</name>
              <description>Binary converted code (42bits)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC</name>
      <description>Real-Time Clock (RTC)</description>
      <groupName>RTC</groupName>
      <baseAddress>0x4002C000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x60</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RTC</name>
        <value>29</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>RTC control register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FD</resetMask>
          <fields>
            <field>
              <name>SWRESET</name>
              <description>Software reset control</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_IN_RESET</name>
                  <description>Not in reset. The RTC is not held in reset. This bit must be cleared prior to configuring or initiating any operation of the RTC.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IN_RESET</name>
                  <description>In reset. The RTC is held in reset. All register bits within the RTC will be forced to their reset value except the OFD bit. This bit must be cleared before writing to any register in the RTC - including writes to set any of the other bits within this register. Do not attempt to write to any bits of this register at the same time that the reset bit is being cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM1HZ</name>
              <description>RTC 1 Hz timer alarm flag status.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_MATCH</name>
                  <description>No match. No match has occurred on the 1 Hz RTC timer. Writing a 0 has no effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MATCH</name>
                  <description>Match. A match condition has occurred on the 1 Hz RTC timer. This flag generates an RTC alarm interrupt request RTC_ALARM which can also wake up the part from any low power mode. Writing a 1 clears this bit.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKE1KHZ</name>
              <description>RTC 1 kHz timer wake-up flag status.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RUN</name>
                  <description>Run. The RTC 1 kHz timer is running. Writing a 0 has no effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TIMEOUT</name>
                  <description>Time-out. The 1 kHz high-resolution/wake-up timer has timed out. This flag generates an RTC wake-up interrupt request RTC-WAKE which can also wake up the part from any low power mode. Writing a 1 clears this bit.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARMDPD_EN</name>
              <description>RTC 1 Hz timer alarm enable for Deep power-down.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable. A match on the 1 Hz RTC timer will not bring the part out of Deep power-down mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable. A match on the 1 Hz RTC timer bring the part out of Deep power-down mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEDPD_EN</name>
              <description>RTC 1 kHz timer wake-up enable for Deep power-down.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable. A match on the 1 kHz RTC timer will not bring the part out of Deep power-down mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable. A match on the 1 kHz RTC timer bring the part out of Deep power-down mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC1KHZ_EN</name>
              <description>RTC 1 kHz clock enable. This bit can be set to 0 to conserve power if the 1 kHz timer is not used. This bit has no effect when the RTC is disabled (bit 7 of this register is 0).</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable. A match on the 1 kHz RTC timer will not bring the part out of Deep power-down mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable. The 1 kHz RTC timer is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC_EN</name>
              <description>RTC enable.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable. The RTC 1 Hz and 1 kHz clocks are shut down and the RTC operation is disabled. This bit should be 0 when writing to load a value in the RTC counter register.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable. The 1 Hz RTC clock is running and RTC operation is enabled. This bit must be set to initiate operation of the RTC. The first clock to the RTC counter occurs 1 s after this bit is set. To also enable the high-resolution, 1 kHz clock, set bit 6 in this register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC_OSC_PD</name>
              <description>RTC oscillator power-down control.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWER_UP</name>
                  <description>See RTC_OSC_BYPASS</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWERED_DOWN</name>
                  <description>RTC oscillator is powered-down.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC_OSC_BYPASS</name>
              <description>RTC oscillator bypass control.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USED</name>
                  <description>The RTC Oscillator operates normally as a crystal oscillator with the crystal connected between the RTC_XTALIN and RTC_XTALOUT pins.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASS</name>
                  <description>The RTC Oscillator is in bypass mode. In this mode a clock can be directly input into the RTC_XTALIN pin.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC_SUBSEC_ENA</name>
              <description>RTC Sub-second counter control.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>POWER_UP</name>
                  <description>The sub-second counter (if implemented) is disabled. This bit is cleared by a system-level POR or BOD reset as well as a by the RTC_ENA bit (bit 7 in this register). On modules not equipped with a sub-second counter, this bit will always read-back as a '0'.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>POWERED_DOWN</name>
                  <description>The 32 KHz sub-second counter is enabled (if implemented). Counting commences on the start of the first one-second interval after this bit is set. Note: This bit can only be set after the RTC_ENA bit (bit 7) is set by a previous write operation. Note: The RTC sub-second counter must be re-enabled whenever the chip exits deep power-down mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH</name>
          <description>RTC match register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATVAL</name>
              <description>Contains the match value against which the 1 Hz RTC timer will be compared to set the alarm flag RTC_ALARM and generate an alarm interrupt/wake-up if enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COUNT</name>
          <description>RTC counter register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VAL</name>
              <description>A read reflects the current value of the main, 1 Hz RTC timer. A write loads a new initial value into the timer. The RTC counter will count up continuously at a 1 Hz rate once the RTC Software Reset is removed (by clearing bit 0 of the CTRL register). Only write to this register when the RTC_EN bit in the RTC CTRL Register is 0. The counter increments one second after the RTC_EN bit is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKE</name>
          <description>High-resolution/wake-up timer control register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>VAL</name>
              <description>A read reflects the current value of the high-resolution/wake-up timer. A write pre-loads a start count value into the wake-up timer and initializes a count-down sequence. Do not write to this register while counting is in progress.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUBSEC</name>
          <description>Sub-second counter register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SUBSEC</name>
              <description>A read reflects the current value of the 32KHz sub-second counter. This counter is cleared whenever the SUBSEC_ENA bit in the RTC_CONTROL register is low. Up-counting at a 32KHz rate commences at the start of the next one-second interval after the SUBSEC_ENA bit is set. This counter must be re-enabled after exiting deep power-down mode or after the main RTC module is disabled and re-enabled. On modules not equipped with a sub-second counter, this register will read-back as all zeroes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>GPREG[%s]</name>
          <description>General Purpose register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPDATA</name>
              <description>Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>OSTIMER</name>
      <description>Synchronous OS/Event timer with Wakeup Timer</description>
      <groupName>OSTIMER</groupName>
      <baseAddress>0x4002D000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>OS_EVENT</name>
        <value>38</value>
      </interrupt>
      <registers>
        <register>
          <name>EVTIMERL</name>
          <description>EVTIMER Low Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EVTIMER_COUNT_VALUE</name>
              <description>A read reflects the current value of the lower 32 bits of the 42-bits EVTIMER. Note there is only one EVTIMER, readable from all domains.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVTIMERH</name>
          <description>EVTIMER High Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EVTIMER_COUNT_VALUE</name>
              <description>A read reflects the current value of the upper 10 bits of the 42-bits EVTIMER. Note there is only one EVTIMER, readable from all domains.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPTURE_L</name>
          <description>Capture Low Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPTURE_VALUE</name>
              <description>A read reflects the value of the lower 32 bits of the central 42-bits EVTIMER at the time the last capture signal was generated by the CPU (using CMSIS C function &quot;__SEV();&quot;).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPTURE_H</name>
          <description>Capture High Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPTURE_VALUE</name>
              <description>A read reflects the value of the upper 10 bits of the central 42-bits EVTIMER at the time the last capture signal was generated by the CPU (using CMSIS C function &quot;__SEV();&quot;).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH_L</name>
          <description>Match Low Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCH_VALUE</name>
              <description>The value written to the MATCH (L/H) register pair is compared against the central EVTIMER. When a match occurs, an interrupt request is generated if enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH_H</name>
          <description>Match High Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCH_VALUE</name>
              <description>The value written (upper 10 bits) to the MATCH (L/H) register pair is compared against the central EVTIMER. When a match occurs, an interrupt request is generated if enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OSEVENT_CTRL</name>
          <description>OS_EVENT TIMER Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>OSTIMER_INTRFLAG</name>
              <description>This bit is set when a match occurs between the central 42-bits EVTIMER and the value programmed in the match-register pair. This bit is cleared by writing a '1'. Writes to clear this bit are asynchronous. It should be done before a new match value is written into the MATCH_L/H registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSTIMER_INTENA</name>
              <description>When this bit is '1' an interrupt/wakeup request to the domain processor will be asserted when the OSTIMER_INTR flag is set. When this bit is '0', interrupt/wakeup requests due to the OSTIMER_INTR flag are blocked.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCH_WR_RDY</name>
              <description>This bit will be low when it is safe to write to reload the Match Registers. In typical applications it should not be necessary to test this bit. [1]</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLASH</name>
      <description>FLASH</description>
      <groupName>FLASH</groupName>
      <baseAddress>0x40034000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CMD</name>
          <description>command register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD</name>
              <description>command register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVENT</name>
          <description>event register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RST</name>
              <description>When bit is set, the controller and flash are reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WAKEUP</name>
              <description>When bit is set, the controller wakes up from whatever low power or powerdown mode was active.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ABORT</name>
              <description>When bit is set, a running program/erase command is aborted.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STARTA</name>
          <description>start (or only) address for next flash command</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>STARTA</name>
              <description>Address / Start address for commands that take an address (range) as a parameter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STOPA</name>
          <description>end address for next flash command, if command operates on address ranges</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>STOPA</name>
              <description>Stop address for commands that take an address range as a parameter (the word specified by STOPA is included in the address range).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DATAW[%s]</name>
          <description>data register, word 0-7; Memory data, or command parameter, or command result.</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATAW</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_ENABLE</name>
          <description>Clear interrupt enable bits</description>
          <addressOffset>0xFD8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>FAIL</name>
              <description>When a CLR_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is cleared.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ERR</name>
              <description>When a CLR_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is cleared.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DONE</name>
              <description>When a CLR_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is cleared.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ECC_ERR</name>
              <description>When a CLR_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is cleared.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_SET_ENABLE</name>
          <description>Set interrupt enable bits</description>
          <addressOffset>0xFDC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>FAIL</name>
              <description>When a SET_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ERR</name>
              <description>When a SET_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is set.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DONE</name>
              <description>When a SET_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is set.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ECC_ERR</name>
              <description>When a SET_ENABLE bit is written to 1, the corresponding INT_ENABLE bit is set.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_STATUS</name>
          <description>Interrupt status bits</description>
          <addressOffset>0xFE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>FAIL</name>
              <description>This status bit is set if execution of a (legal) command failed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR</name>
              <description>This status bit is set if execution of an illegal command is detected.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DONE</name>
              <description>This status bit is set at the end of command execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_ERR</name>
              <description>This status bit is set if, during a memory read operation (either a user-requested read, or a speculative read, or reads performed by a controller command), a correctable or uncorrectable error is detected by ECC decoding logic.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENABLE</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0xFE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>FAIL</name>
              <description>If an INT_ENABLE bit is set, an interrupt request will be generated if the corresponding INT_STATUS bit is high.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR</name>
              <description>If an INT_ENABLE bit is set, an interrupt request will be generated if the corresponding INT_STATUS bit is high.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DONE</name>
              <description>If an INT_ENABLE bit is set, an interrupt request will be generated if the corresponding INT_STATUS bit is high.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_ERR</name>
              <description>If an INT_ENABLE bit is set, an interrupt request will be generated if the corresponding INT_STATUS bit is high.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_STATUS</name>
          <description>Clear interrupt status bits</description>
          <addressOffset>0xFE8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>FAIL</name>
              <description>When a CLR_STATUS bit is written to 1, the corresponding INT_STATUS bit is cleared.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ERR</name>
              <description>When a CLR_STATUS bit is written to 1, the corresponding INT_STATUS bit is cleared.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DONE</name>
              <description>When a CLR_STATUS bit is written to 1, the corresponding INT_STATUS bit is cleared.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ECC_ERR</name>
              <description>When a CLR_STATUS bit is written to 1, the corresponding INT_STATUS bit is cleared.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_SET_STATUS</name>
          <description>Set interrupt status bits</description>
          <addressOffset>0xFEC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>FAIL</name>
              <description>When a SET_STATUS bit is written to 1, the corresponding INT_STATUS bit is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ERR</name>
              <description>When a SET_STATUS bit is written to 1, the corresponding INT_STATUS bit is set.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DONE</name>
              <description>When a SET_STATUS bit is written to 1, the corresponding INT_STATUS bit is set.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ECC_ERR</name>
              <description>When a SET_STATUS bit is written to 1, the corresponding INT_STATUS bit is set.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODULE_ID</name>
          <description>Controller+Memory module identification</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xC40A0B00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APERTURE</name>
              <description>Aperture i.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MINOR_REV</name>
              <description>Minor revision i.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR_REV</name>
              <description>Major revision i.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>Identifier.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PRINCE</name>
      <description>PRINCE</description>
      <groupName>PRINCE</groupName>
      <baseAddress>0x40035000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x94</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ENC_ENABLE</name>
          <description>Encryption Enable register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>Enables PRINCE encryption for flash programming.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Encryption of writes to the flash controller DATAW* registers is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Encryption of writes to the flash controller DATAW* registers is enabled. Reading of PRINCE-encrypted flash regions is disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MASK_LSB</name>
          <description>Data Mask register, 32 Least Significant Bits</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASKVAL</name>
              <description>Value of the 32 Least Significant Bits of the 64-bit data mask.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MASK_MSB</name>
          <description>Data Mask register, 32 Most Significant Bits</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASKVAL</name>
              <description>Value of the 32 Most Significant Bits of the 64-bit data mask.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOCK</name>
          <description>Lock register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x107</resetMask>
          <fields>
            <field>
              <name>LOCKREG0</name>
              <description>Lock Region 0 registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. IV_LSB0, IV_MSB0, BASE_ADDR0, and SR_ENABLE0 are writable..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. IV_LSB0, IV_MSB0, BASE_ADDR0, and SR_ENABLE0 are not writable..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCKREG1</name>
              <description>Lock Region 1 registers.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. IV_LSB1, IV_MSB1, BASE_ADDR1, and SR_ENABLE1 are writable..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. IV_LSB1, IV_MSB1, BASE_ADDR1, and SR_ENABLE1 are not writable..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCKREG2</name>
              <description>Lock Region 2 registers.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. IV_LSB2, IV_MSB2, BASE_ADDR2, and SR_ENABLE2 are writable..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. IV_LSB2, IV_MSB2, BASE_ADDR2, and SR_ENABLE2 are not writable..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCKMASK</name>
              <description>Lock the Mask registers.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. MASK_LSB, and MASK_MSB are writable..</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. MASK_LSB, and MASK_MSB are not writable..</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IV_LSB0</name>
          <description>Initial Vector register for region 0, Least Significant Bits</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IVVAL</name>
              <description>Initial Vector value for the 32 Least Significant Bits of the 64-bit Initial Vector.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV_MSB0</name>
          <description>Initial Vector register for region 0, Most Significant Bits</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IVVAL</name>
              <description>Initial Vector value for the 32 Most Significant Bits of the 64-bit Initial Vector.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BASE_ADDR0</name>
          <description>Base Address for region 0 register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_FIXED</name>
              <description>Fixed portion of the base address of region 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDR_PRG</name>
              <description>Programmable portion of the base address of region 0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR_ENABLE0</name>
          <description>Sub-Region Enable register for region 0</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>Each bit in this field enables an 8KB subregion for encryption at offset 8KB*bitnum of region 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV_LSB1</name>
          <description>Initial Vector register for region 1, Least Significant Bits</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IVVAL</name>
              <description>Initial Vector value for the 32 Least Significant Bits of the 64-bit Initial Vector.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV_MSB1</name>
          <description>Initial Vector register for region 1, Most Significant Bits</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IVVAL</name>
              <description>Initial Vector value for the 32 Most Significant Bits of the 64-bit Initial Vector.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BASE_ADDR1</name>
          <description>Base Address for region 1 register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_FIXED</name>
              <description>Fixed portion of the base address of region 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDR_PRG</name>
              <description>Programmable portion of the base address of region 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR_ENABLE1</name>
          <description>Sub-Region Enable register for region 1</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>Each bit in this field enables an 8KB subregion for encryption at offset 8KB*bitnum of region 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV_LSB2</name>
          <description>Initial Vector register for region 2, Least Significant Bits</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IVVAL</name>
              <description>Initial Vector value for the 32 Least Significant Bits of the 64-bit Initial Vector.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV_MSB2</name>
          <description>Initial Vector register for region 2, Most Significant Bits</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IVVAL</name>
              <description>Initial Vector value for the 32 Most Significant Bits of the 64-bit Initial Vector.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BASE_ADDR2</name>
          <description>Base Address for region 2 register</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x80000</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_FIXED</name>
              <description>Fixed portion of the base address of region 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDR_PRG</name>
              <description>Programmable portion of the base address of region 2.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR_ENABLE2</name>
          <description>Sub-Region Enable register for region 2</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>Each bit in this field enables an 8KB subregion for encryption at offset 8KB*bitnum of region 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ERR</name>
          <description>Error status register</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ERRSTAT</name>
              <description>PRINCE Error Status. This bit is write-1 to clear.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>No PRINCE error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error. A read of a PRINCE-encrypted region was attempted while ENC_ENABLE.EN=1.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USBPHY</name>
      <description>Universal System Bus Physical Layer</description>
      <groupName>USBPHY</groupName>
      <baseAddress>0x40038000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x110</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USB1_PHY</name>
        <value>46</value>
      </interrupt>
      <registers>
        <register>
          <name>PWD</name>
          <description>USB PHY Power-Down Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1E1C00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXPWDFS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed drivers. This turns off the current starvation sources and puts the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDIBIAS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY current bias block for the transmitter. This bit should be set only when the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDV2I</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY transmit V-to-I converter and the current mirror</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDENV</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed receiver envelope detector (squelch signal)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWD1PT1</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed differential receiver.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDDIFF</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed differential receive</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDRX</name>
              <description>This bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the entire USB PHY receiver block except for the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWD_SET</name>
          <description>USB PHY Power-Down Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1E1C00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXPWDFS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed drivers. This turns off the current starvation sources and puts the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDIBIAS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY current bias block for the transmitter. This bit should be set only when the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDV2I</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY transmit V-to-I converter and the current mirror</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDENV</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed receiver envelope detector (squelch signal)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWD1PT1</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed differential receiver.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDDIFF</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed differential receive</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDRX</name>
              <description>This bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the entire USB PHY receiver block except for the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWD_CLR</name>
          <description>USB PHY Power-Down Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1E1C00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXPWDFS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed drivers. This turns off the current starvation sources and puts the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDIBIAS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY current bias block for the transmitter. This bit should be set only when the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDV2I</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY transmit V-to-I converter and the current mirror</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDENV</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed receiver envelope detector (squelch signal)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWD1PT1</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed differential receiver.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDDIFF</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed differential receive</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDRX</name>
              <description>This bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the entire USB PHY receiver block except for the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWD_TOG</name>
          <description>USB PHY Power-Down Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1E1C00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXPWDFS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed drivers. This turns off the current starvation sources and puts the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDIBIAS</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY current bias block for the transmitter. This bit should be set only when the</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPWDV2I</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB PHY transmit V-to-I converter and the current mirror</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDENV</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed receiver envelope detector (squelch signal)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWD1PT1</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB full-speed differential receiver.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDDIFF</name>
              <description>Note that this bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the USB high-speed differential receive</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPWDRX</name>
              <description>This bit will be auto cleared if there is USB wakeup event while ENAUTOCLR_PHY_PWD bit of CTRL is enabled</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Power-down the entire USB PHY receiver block except for the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TX</name>
          <description>USB PHY Transmitter Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>D_CAL</name>
              <description>Decode to trim the nominal 17</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Maximum current, approximately 19% above nominal.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Nominal</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value15</name>
                  <description>Minimum current, approximately 19% below nominal.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXCAL45DM</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DM output pin</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DN</name>
              <description>Enable resistance calibration on DN.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXCAL45DP</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DP output pin</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DP</name>
              <description>Enable resistance calibration on DP.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_SET</name>
          <description>USB PHY Transmitter Control Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>D_CAL</name>
              <description>Decode to trim the nominal 17</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Maximum current, approximately 19% above nominal.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Nominal</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value15</name>
                  <description>Minimum current, approximately 19% below nominal.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXCAL45DM</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DM output pin</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DN</name>
              <description>Enable resistance calibration on DN.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXCAL45DP</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DP output pin</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DP</name>
              <description>Enable resistance calibration on DP.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CLR</name>
          <description>USB PHY Transmitter Control Register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>D_CAL</name>
              <description>Decode to trim the nominal 17</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Maximum current, approximately 19% above nominal.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Nominal</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value15</name>
                  <description>Minimum current, approximately 19% below nominal.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXCAL45DM</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DM output pin</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DN</name>
              <description>Enable resistance calibration on DN.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXCAL45DP</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DP output pin</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DP</name>
              <description>Enable resistance calibration on DP.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_TOG</name>
          <description>USB PHY Transmitter Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>D_CAL</name>
              <description>Decode to trim the nominal 17</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Maximum current, approximately 19% above nominal.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Nominal</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value15</name>
                  <description>Minimum current, approximately 19% below nominal.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXCAL45DM</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DM output pin</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DN</name>
              <description>Enable resistance calibration on DN.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXCAL45DP</name>
              <description>Decode to trim the nominal 45ohm series termination resistance to the USB_DP output pin</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENCAL45DP</name>
              <description>Enable resistance calibration on DP.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX</name>
          <description>USB PHY Receiver Control Register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENVADJ</name>
              <description>The ENVADJ field adjusts the trip point for the envelope detector</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.1000 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.1125 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.1250 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.0875 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCONADJ</name>
              <description>The DISCONADJ field adjusts the trip point for the disconnect detector.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.56875 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.55000 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.58125 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.60000 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXDBYPASS</name>
              <description>This test mode is intended for lab use only, replace FS differential receiver with DP single ended receiver</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the output of the USB_DP single-ended receiver in place of the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_SET</name>
          <description>USB PHY Receiver Control Register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENVADJ</name>
              <description>The ENVADJ field adjusts the trip point for the envelope detector</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.1000 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.1125 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.1250 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.0875 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCONADJ</name>
              <description>The DISCONADJ field adjusts the trip point for the disconnect detector.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.56875 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.55000 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.58125 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.60000 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXDBYPASS</name>
              <description>This test mode is intended for lab use only, replace FS differential receiver with DP single ended receiver</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the output of the USB_DP single-ended receiver in place of the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CLR</name>
          <description>USB PHY Receiver Control Register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENVADJ</name>
              <description>The ENVADJ field adjusts the trip point for the envelope detector</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.1000 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.1125 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.1250 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.0875 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCONADJ</name>
              <description>The DISCONADJ field adjusts the trip point for the disconnect detector.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.56875 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.55000 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.58125 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.60000 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXDBYPASS</name>
              <description>This test mode is intended for lab use only, replace FS differential receiver with DP single ended receiver</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the output of the USB_DP single-ended receiver in place of the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_TOG</name>
          <description>USB PHY Receiver Control Register</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENVADJ</name>
              <description>The ENVADJ field adjusts the trip point for the envelope detector</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.1000 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.1125 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.1250 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.0875 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCONADJ</name>
              <description>The DISCONADJ field adjusts the trip point for the disconnect detector.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Trip-Level Voltage is 0.56875 V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Trip-Level Voltage is 0.55000 V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Trip-Level Voltage is 0.58125 V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Trip-Level Voltage is 0.60000 V</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXDBYPASS</name>
              <description>This test mode is intended for lab use only, replace FS differential receiver with DP single ended receiver</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the output of the USB_DP single-ended receiver in place of the full-speed differential receiver</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>USB PHY General Control Register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xC0000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENHOSTDISCONDETECT</name>
              <description>For host mode, enables high-speed disconnect detector</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQHOSTDISCON</name>
              <description>Enable IRQ for Host disconnect: Enables interrupt for detection of disconnection to Device when in high-speed host mode</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOSTDISCONDETECT_IRQ</name>
              <description>Indicates that the device has disconnected in High-Speed mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDEVPLUGINDET</name>
              <description>Enables non-standard resistive plugged-in detection This bit field controls connection of nominal 200kohm resistors to both the USB_DP and USB_DM pins as one method of detecting when a USB cable is attached in device mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Disables 200kohm pullup resistors on USB_DP and USB_DM pins (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables 200kohm pullup resistors on USB_DP and USB_DM pins</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEVPLUGIN_POLARITY</name>
              <description>Device plugin polarity: For device mode, if this bit is cleared to 0, then it trips the interrupt if the device is plugged in</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUMEIRQSTICKY</name>
              <description>Resume IRQ: Set to 1 will make RESUME_IRQ bit a sticky bit until software clear it</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQRESUMEDETECT</name>
              <description>Enable IRQ Resume detect: Enables interrupt for detection of a non-J state on the USB line</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_IRQ</name>
              <description>Resume IRQ: Indicates that the host is sending a wake-up after suspend</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVPLUGIN_IRQ</name>
              <description>Indicates that the device is connected</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL2</name>
              <description>Enables UTMI+ Level 2 operation for the USB HS PHY</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL3</name>
              <description>Enables UTMI+ Level 3 operation for the USB HS PHY</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQWAKEUP</name>
              <description>Enable wake-up IRQ: Enables interrupt for the wake-up events.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_IRQ</name>
              <description>Wake-up IRQ: Indicates that there is a wak-eup event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTORESUME_EN</name>
              <description>Enable the auto resume feature, when set, HW will use 32KHz clock to send Resume to respond to the device remote wakeup(for host mode only)</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_CLKGATE</name>
              <description>Enables the feature to auto-clear the CLKGATE bit if there is wakeup event while USB is suspended</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_PHY_PWD</name>
              <description>Enables the feature to auto-clear the PWD register bits in PWD if there is wakeup event while USB is suspended</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDPDMCHG_WKUP</name>
              <description>Enable DP DM change wake-up: Not for customer use</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENVBUSCHG_WKUP</name>
              <description>Enable VBUS change wake-up: Enables the feature to wake-up USB if VBUS is toggled when USB is suspended</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_USBCLKGATE</name>
              <description>Enable auto-clear USB Clock gate: Enables the feature to auto-clear the USB0_CLKGATE/USB1_CLKGATE register bit in HW_DIGCTL_CTRL if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOSET_USBCLKS</name>
              <description>Enable auto-set of USB clocks: Enables the feature to auto-clear the EN_USB_CLKS register bits in HW_CLKCTRL_PLL1CTRL0/HW_CLKCTRL_P LL1CTRL1 if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_FORCE_LS_SE0</name>
              <description>Forces the next FS packet that is transmitted to have a EOP with low-speed timing</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTMI_SUSPENDM</name>
              <description>Used by the PHY to indicate a powered-down state</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKGATE</name>
              <description>Gate UTMI Clocks</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SFTRST</name>
              <description>Writing a 1 to this bit will soft-reset the PWD, TX, RX, and CTRL registers</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL_SET</name>
          <description>USB PHY General Control Register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xC0000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENHOSTDISCONDETECT</name>
              <description>For host mode, enables high-speed disconnect detector</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQHOSTDISCON</name>
              <description>Enable IRQ for Host disconnect: Enables interrupt for detection of disconnection to Device when in high-speed host mode</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOSTDISCONDETECT_IRQ</name>
              <description>Indicates that the device has disconnected in High-Speed mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDEVPLUGINDET</name>
              <description>Enables non-standard resistive plugged-in detection This bit field controls connection of nominal 200kohm resistors to both the USB_DP and USB_DM pins as one method of detecting when a USB cable is attached in device mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Disables 200kohm pullup resistors on USB_DP and USB_DM pins (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables 200kohm pullup resistors on USB_DP and USB_DM pins</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEVPLUGIN_POLARITY</name>
              <description>Device plugin polarity: For device mode, if this bit is cleared to 0, then it trips the interrupt if the device is plugged in</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUMEIRQSTICKY</name>
              <description>Resume IRQ: Set to 1 will make RESUME_IRQ bit a sticky bit until software clear it</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQRESUMEDETECT</name>
              <description>Enable IRQ Resume detect: Enables interrupt for detection of a non-J state on the USB line</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_IRQ</name>
              <description>Resume IRQ: Indicates that the host is sending a wake-up after suspend</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVPLUGIN_IRQ</name>
              <description>Indicates that the device is connected</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL2</name>
              <description>Enables UTMI+ Level 2 operation for the USB HS PHY</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL3</name>
              <description>Enables UTMI+ Level 3 operation for the USB HS PHY</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQWAKEUP</name>
              <description>Enable wake-up IRQ: Enables interrupt for the wake-up events.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_IRQ</name>
              <description>Wake-up IRQ: Indicates that there is a wak-eup event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTORESUME_EN</name>
              <description>Enable the auto resume feature, when set, HW will use 32KHz clock to send Resume to respond to the device remote wakeup(for host mode only)</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_CLKGATE</name>
              <description>Enables the feature to auto-clear the CLKGATE bit if there is wakeup event while USB is suspended</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_PHY_PWD</name>
              <description>Enables the feature to auto-clear the PWD register bits in PWD if there is wakeup event while USB is suspended</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDPDMCHG_WKUP</name>
              <description>Enable DP DM change wake-up: Not for customer use</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENVBUSCHG_WKUP</name>
              <description>Enable VBUS change wake-up: Enables the feature to wake-up USB if VBUS is toggled when USB is suspended</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_USBCLKGATE</name>
              <description>Enable auto-clear USB Clock gate: Enables the feature to auto-clear the USB0_CLKGATE/USB1_CLKGATE register bit in HW_DIGCTL_CTRL if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOSET_USBCLKS</name>
              <description>Enable auto-set of USB clocks: Enables the feature to auto-clear the EN_USB_CLKS register bits in HW_CLKCTRL_PLL1CTRL0/HW_CLKCTRL_P LL1CTRL1 if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_FORCE_LS_SE0</name>
              <description>Forces the next FS packet that is transmitted to have a EOP with low-speed timing</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTMI_SUSPENDM</name>
              <description>Used by the PHY to indicate a powered-down state</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CLKGATE</name>
              <description>Gate UTMI Clocks</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SFTRST</name>
              <description>Writing a 1 to this bit will soft-reset the PWD, TX, RX, and CTRL registers</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL_CLR</name>
          <description>USB PHY General Control Register</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xC0000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENHOSTDISCONDETECT</name>
              <description>For host mode, enables high-speed disconnect detector</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQHOSTDISCON</name>
              <description>Enable IRQ for Host disconnect: Enables interrupt for detection of disconnection to Device when in high-speed host mode</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOSTDISCONDETECT_IRQ</name>
              <description>Indicates that the device has disconnected in High-Speed mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDEVPLUGINDET</name>
              <description>Enables non-standard resistive plugged-in detection This bit field controls connection of nominal 200kohm resistors to both the USB_DP and USB_DM pins as one method of detecting when a USB cable is attached in device mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Disables 200kohm pullup resistors on USB_DP and USB_DM pins (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables 200kohm pullup resistors on USB_DP and USB_DM pins</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEVPLUGIN_POLARITY</name>
              <description>Device plugin polarity: For device mode, if this bit is cleared to 0, then it trips the interrupt if the device is plugged in</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUMEIRQSTICKY</name>
              <description>Resume IRQ: Set to 1 will make RESUME_IRQ bit a sticky bit until software clear it</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQRESUMEDETECT</name>
              <description>Enable IRQ Resume detect: Enables interrupt for detection of a non-J state on the USB line</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_IRQ</name>
              <description>Resume IRQ: Indicates that the host is sending a wake-up after suspend</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVPLUGIN_IRQ</name>
              <description>Indicates that the device is connected</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL2</name>
              <description>Enables UTMI+ Level 2 operation for the USB HS PHY</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL3</name>
              <description>Enables UTMI+ Level 3 operation for the USB HS PHY</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQWAKEUP</name>
              <description>Enable wake-up IRQ: Enables interrupt for the wake-up events.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_IRQ</name>
              <description>Wake-up IRQ: Indicates that there is a wak-eup event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTORESUME_EN</name>
              <description>Enable the auto resume feature, when set, HW will use 32KHz clock to send Resume to respond to the device remote wakeup(for host mode only)</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_CLKGATE</name>
              <description>Enables the feature to auto-clear the CLKGATE bit if there is wakeup event while USB is suspended</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_PHY_PWD</name>
              <description>Enables the feature to auto-clear the PWD register bits in PWD if there is wakeup event while USB is suspended</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDPDMCHG_WKUP</name>
              <description>Enable DP DM change wake-up: Not for customer use</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENVBUSCHG_WKUP</name>
              <description>Enable VBUS change wake-up: Enables the feature to wake-up USB if VBUS is toggled when USB is suspended</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_USBCLKGATE</name>
              <description>Enable auto-clear USB Clock gate: Enables the feature to auto-clear the USB0_CLKGATE/USB1_CLKGATE register bit in HW_DIGCTL_CTRL if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOSET_USBCLKS</name>
              <description>Enable auto-set of USB clocks: Enables the feature to auto-clear the EN_USB_CLKS register bits in HW_CLKCTRL_PLL1CTRL0/HW_CLKCTRL_P LL1CTRL1 if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_FORCE_LS_SE0</name>
              <description>Forces the next FS packet that is transmitted to have a EOP with low-speed timing</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTMI_SUSPENDM</name>
              <description>Used by the PHY to indicate a powered-down state</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKGATE</name>
              <description>Gate UTMI Clocks</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SFTRST</name>
              <description>Writing a 1 to this bit will soft-reset the PWD, TX, RX, and CTRL registers</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL_TOG</name>
          <description>USB PHY General Control Register</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xC0000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENHOSTDISCONDETECT</name>
              <description>For host mode, enables high-speed disconnect detector</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQHOSTDISCON</name>
              <description>Enable IRQ for Host disconnect: Enables interrupt for detection of disconnection to Device when in high-speed host mode</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOSTDISCONDETECT_IRQ</name>
              <description>Indicates that the device has disconnected in High-Speed mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDEVPLUGINDET</name>
              <description>Enables non-standard resistive plugged-in detection This bit field controls connection of nominal 200kohm resistors to both the USB_DP and USB_DM pins as one method of detecting when a USB cable is attached in device mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Disables 200kohm pullup resistors on USB_DP and USB_DM pins (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables 200kohm pullup resistors on USB_DP and USB_DM pins</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEVPLUGIN_POLARITY</name>
              <description>Device plugin polarity: For device mode, if this bit is cleared to 0, then it trips the interrupt if the device is plugged in</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUMEIRQSTICKY</name>
              <description>Resume IRQ: Set to 1 will make RESUME_IRQ bit a sticky bit until software clear it</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQRESUMEDETECT</name>
              <description>Enable IRQ Resume detect: Enables interrupt for detection of a non-J state on the USB line</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_IRQ</name>
              <description>Resume IRQ: Indicates that the host is sending a wake-up after suspend</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVPLUGIN_IRQ</name>
              <description>Indicates that the device is connected</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL2</name>
              <description>Enables UTMI+ Level 2 operation for the USB HS PHY</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUTMILEVEL3</name>
              <description>Enables UTMI+ Level 3 operation for the USB HS PHY</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENIRQWAKEUP</name>
              <description>Enable wake-up IRQ: Enables interrupt for the wake-up events.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_IRQ</name>
              <description>Wake-up IRQ: Indicates that there is a wak-eup event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTORESUME_EN</name>
              <description>Enable the auto resume feature, when set, HW will use 32KHz clock to send Resume to respond to the device remote wakeup(for host mode only)</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_CLKGATE</name>
              <description>Enables the feature to auto-clear the CLKGATE bit if there is wakeup event while USB is suspended</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_PHY_PWD</name>
              <description>Enables the feature to auto-clear the PWD register bits in PWD if there is wakeup event while USB is suspended</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDPDMCHG_WKUP</name>
              <description>Enable DP DM change wake-up: Not for customer use</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENVBUSCHG_WKUP</name>
              <description>Enable VBUS change wake-up: Enables the feature to wake-up USB if VBUS is toggled when USB is suspended</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOCLR_USBCLKGATE</name>
              <description>Enable auto-clear USB Clock gate: Enables the feature to auto-clear the USB0_CLKGATE/USB1_CLKGATE register bit in HW_DIGCTL_CTRL if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAUTOSET_USBCLKS</name>
              <description>Enable auto-set of USB clocks: Enables the feature to auto-clear the EN_USB_CLKS register bits in HW_CLKCTRL_PLL1CTRL0/HW_CLKCTRL_P LL1CTRL1 if there is wake-up event on USB0/USB1 while USB0/USB1 is suspended</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_FORCE_LS_SE0</name>
              <description>Forces the next FS packet that is transmitted to have a EOP with low-speed timing</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTMI_SUSPENDM</name>
              <description>Used by the PHY to indicate a powered-down state</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKGATE</name>
              <description>Gate UTMI Clocks</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SFTRST</name>
              <description>Writing a 1 to this bit will soft-reset the PWD, TX, RX, and CTRL registers</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>USB PHY Status Register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OK_STATUS_3V</name>
              <description>Indicates the USB 3v power rails are in range.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HOSTDISCONDETECT_STATUS</name>
              <description>Indicates at the local host (downstream) port that the remote device has disconnected while in High-Speed mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>USB cable disconnect has not been detected at the local host</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>USB cable disconnect has been detected at the local host</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEVPLUGIN_STATUS</name>
              <description>Status indicator for non-standard resistive plugged-in detection Indicates that the device has been connected on the USB_DP and USB_DM lines using the nonstandard resistive plugged-in detection method controlled by CTRL[4]</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>No attachment to a USB host is detected</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Cable attachment to a USB host is detected</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESUME_STATUS</name>
              <description>Indicates that the host is sending a wake-up after Suspend and has triggered an interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_SIC</name>
          <description>USB PHY PLL Control/Status Register</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xD12000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_EN_USB_CLKS</name>
              <description>Enables the USB clock from PLL to USB PHY</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_POWER</name>
              <description>Power up the USB PLL</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_ENABLE</name>
              <description>Enables the clock output from the USB PLL</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REFBIAS_PWD_SEL</name>
              <description>Reference bias power down select.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Selects PLL_POWER to control the reference bias</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Selects REFBIAS_PWD to control the reference bias</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REFBIAS_PWD</name>
              <description>Power down the reference bias This bit is only used when REFBIAS_PWD_SEL is set to 1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_REG_ENABLE</name>
              <description>This field controls the USB PLL regulator, set to enable the regulator</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DIV_SEL</name>
              <description>This field controls the USB PLL feedback loop divider</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Divide by 13</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Divide by 15</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Divide by 16</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Divide by 20</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>Divide by 22</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>Divide by 25</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>Divide by 30</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Divide by 240</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_PREDIV</name>
              <description>This is selection between /1 or /2 to expand the range of ref input clock.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK</name>
              <description>USB PLL lock status indicator</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>PLL is not currently locked</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>PLL is currently locked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_SIC_SET</name>
          <description>USB PHY PLL Control/Status Register</description>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xD12000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_EN_USB_CLKS</name>
              <description>Enables the USB clock from PLL to USB PHY</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_POWER</name>
              <description>Power up the USB PLL</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_ENABLE</name>
              <description>Enables the clock output from the USB PLL</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REFBIAS_PWD_SEL</name>
              <description>Reference bias power down select.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Selects PLL_POWER to control the reference bias</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Selects REFBIAS_PWD to control the reference bias</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REFBIAS_PWD</name>
              <description>Power down the reference bias This bit is only used when REFBIAS_PWD_SEL is set to 1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_REG_ENABLE</name>
              <description>This field controls the USB PLL regulator, set to enable the regulator</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DIV_SEL</name>
              <description>This field controls the USB PLL feedback loop divider</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Divide by 13</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Divide by 15</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Divide by 16</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Divide by 20</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>Divide by 22</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>Divide by 25</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>Divide by 30</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Divide by 240</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_PREDIV</name>
              <description>This is selection between /1 or /2 to expand the range of ref input clock.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK</name>
              <description>USB PLL lock status indicator</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>PLL is not currently locked</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>PLL is currently locked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_SIC_CLR</name>
          <description>USB PHY PLL Control/Status Register</description>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xD12000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_EN_USB_CLKS</name>
              <description>Enables the USB clock from PLL to USB PHY</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_POWER</name>
              <description>Power up the USB PLL</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_ENABLE</name>
              <description>Enables the clock output from the USB PLL</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REFBIAS_PWD_SEL</name>
              <description>Reference bias power down select.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Selects PLL_POWER to control the reference bias</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Selects REFBIAS_PWD to control the reference bias</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REFBIAS_PWD</name>
              <description>Power down the reference bias This bit is only used when REFBIAS_PWD_SEL is set to 1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_REG_ENABLE</name>
              <description>This field controls the USB PLL regulator, set to enable the regulator</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DIV_SEL</name>
              <description>This field controls the USB PLL feedback loop divider</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Divide by 13</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Divide by 15</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Divide by 16</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Divide by 20</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>Divide by 22</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>Divide by 25</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>Divide by 30</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Divide by 240</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_PREDIV</name>
              <description>This is selection between /1 or /2 to expand the range of ref input clock.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK</name>
              <description>USB PLL lock status indicator</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>PLL is not currently locked</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>PLL is currently locked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_SIC_TOG</name>
          <description>USB PHY PLL Control/Status Register</description>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xD12000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_EN_USB_CLKS</name>
              <description>Enables the USB clock from PLL to USB PHY</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_POWER</name>
              <description>Power up the USB PLL</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_ENABLE</name>
              <description>Enables the clock output from the USB PLL</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REFBIAS_PWD_SEL</name>
              <description>Reference bias power down select.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Selects PLL_POWER to control the reference bias</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Selects REFBIAS_PWD to control the reference bias</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REFBIAS_PWD</name>
              <description>Power down the reference bias This bit is only used when REFBIAS_PWD_SEL is set to 1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_REG_ENABLE</name>
              <description>This field controls the USB PLL regulator, set to enable the regulator</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DIV_SEL</name>
              <description>This field controls the USB PLL feedback loop divider</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Divide by 13</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Divide by 15</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Divide by 16</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>Divide by 20</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>Divide by 22</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>Divide by 25</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>Divide by 30</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>Divide by 240</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_PREDIV</name>
              <description>This is selection between /1 or /2 to expand the range of ref input clock.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK</name>
              <description>USB PLL lock status indicator</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>PLL is not currently locked</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>PLL is currently locked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1_VBUS_DETECT</name>
          <description>USB PHY VBUS Detect Control Register</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x700004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VBUSVALID_THRESH</name>
              <description>Sets the threshold for the VBUSVALID comparator</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>4.0V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>4.1V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>4.2V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>4.3V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>4.4V(Default)</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>4.5V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>4.6V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>4.7V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_OVERRIDE_EN</name>
              <description>VBUS detect signal override enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the results of the internal VBUS_VALID and Session Valid comparators for VBUS_VALID, AVALID, BVALID, and SESSEND (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the override values for VBUS_VALID, AVALID, BVALID, and SESSEND</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SESSEND_OVERRIDE</name>
              <description>Override value for SESSEND The bit field provides the value for USB1_VBUS_DET_STAT[0] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BVALID_OVERRIDE</name>
              <description>Override value for B-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[1] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AVALID_OVERRIDE</name>
              <description>Override value for A-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[2] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_OVERRIDE</name>
              <description>Override value for VBUS_VALID signal sent to USB controller The bit field provides the value for VBUS_VALID reported to the USB controller if the value of USB1_VBUS_DETECT[3] is set to 1'b1</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the VBUS_VALID_3V detector results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_SOURCE_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ID_OVERRIDE_EN</name>
              <description>Enable ID override using the register field. This bit is only used if EXT_ID_OVERRIDE_EN = 1'b0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_OVERRIDE</name>
              <description>ID override value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_ID_OVERRIDE_EN</name>
              <description>Enable ID override using the pinmuxed value:</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the Muxed value chosen using ID_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external ID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EXT_VBUS_OVERRIDE_EN</name>
              <description>Enable VBUS override using the pinmuxed value.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the Muxed value chosen using VBUS_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external VBUS VALID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUSVALID_TO_SESSVALID</name>
              <description>Selects the comparator used for VBUS_VALID This bit field controls the comparator used to report the VBUS_VALID results in USB1_VBUS_DETECT[3] between the VBUS_VALID comparator and the Session Valid comparator</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator for VBUS_VALID results</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session End comparator for VBUS_VALID results. The Session End threshold is &gt;0.8V and &lt;4.0V.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWRUP_CMPS</name>
              <description>Enables the VBUS_VALID comparator: Powers up the comparator used for the VBUS_VALID detector</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Powers down the VBUS_VALID comparator</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables the VBUS_VALID comparator (default)</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCHARGE_VBUS</name>
              <description>Controls VBUS discharge resistor This bit field controls a nominal 22kohm resistor between the USB1_VBUS pin and ground</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>VBUS discharge resistor is disabled (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>VBUS discharge resistor is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1_VBUS_DETECT_SET</name>
          <description>USB PHY VBUS Detect Control Register</description>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x700004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VBUSVALID_THRESH</name>
              <description>Sets the threshold for the VBUSVALID comparator</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>4.0V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>4.1V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>4.2V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>4.3V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>4.4V(Default)</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>4.5V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>4.6V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>4.7V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_OVERRIDE_EN</name>
              <description>VBUS detect signal override enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the results of the internal VBUS_VALID and Session Valid comparators for VBUS_VALID, AVALID, BVALID, and SESSEND (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the override values for VBUS_VALID, AVALID, BVALID, and SESSEND</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SESSEND_OVERRIDE</name>
              <description>Override value for SESSEND The bit field provides the value for USB1_VBUS_DET_STAT[0] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BVALID_OVERRIDE</name>
              <description>Override value for B-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[1] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AVALID_OVERRIDE</name>
              <description>Override value for A-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[2] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_OVERRIDE</name>
              <description>Override value for VBUS_VALID signal sent to USB controller The bit field provides the value for VBUS_VALID reported to the USB controller if the value of USB1_VBUS_DETECT[3] is set to 1'b1</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the VBUS_VALID_3V detector results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_SOURCE_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ID_OVERRIDE_EN</name>
              <description>Enable ID override using the register field. This bit is only used if EXT_ID_OVERRIDE_EN = 1'b0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_OVERRIDE</name>
              <description>ID override value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_ID_OVERRIDE_EN</name>
              <description>Enable ID override using the pinmuxed value:</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the Muxed value chosen using ID_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external ID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EXT_VBUS_OVERRIDE_EN</name>
              <description>Enable VBUS override using the pinmuxed value.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the Muxed value chosen using VBUS_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external VBUS VALID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUSVALID_TO_SESSVALID</name>
              <description>Selects the comparator used for VBUS_VALID This bit field controls the comparator used to report the VBUS_VALID results in USB1_VBUS_DETECT[3] between the VBUS_VALID comparator and the Session Valid comparator</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator for VBUS_VALID results</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session End comparator for VBUS_VALID results. The Session End threshold is &gt;0.8V and &lt;4.0V.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWRUP_CMPS</name>
              <description>Enables the VBUS_VALID comparator: Powers up the comparator used for the VBUS_VALID detector</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Powers down the VBUS_VALID comparator</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables the VBUS_VALID comparator (default)</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCHARGE_VBUS</name>
              <description>Controls VBUS discharge resistor This bit field controls a nominal 22kohm resistor between the USB1_VBUS pin and ground</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>VBUS discharge resistor is disabled (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>VBUS discharge resistor is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1_VBUS_DETECT_CLR</name>
          <description>USB PHY VBUS Detect Control Register</description>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x700004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VBUSVALID_THRESH</name>
              <description>Sets the threshold for the VBUSVALID comparator</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>4.0V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>4.1V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>4.2V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>4.3V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>4.4V(Default)</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>4.5V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>4.6V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>4.7V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_OVERRIDE_EN</name>
              <description>VBUS detect signal override enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the results of the internal VBUS_VALID and Session Valid comparators for VBUS_VALID, AVALID, BVALID, and SESSEND (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the override values for VBUS_VALID, AVALID, BVALID, and SESSEND</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SESSEND_OVERRIDE</name>
              <description>Override value for SESSEND The bit field provides the value for USB1_VBUS_DET_STAT[0] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BVALID_OVERRIDE</name>
              <description>Override value for B-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[1] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AVALID_OVERRIDE</name>
              <description>Override value for A-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[2] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_OVERRIDE</name>
              <description>Override value for VBUS_VALID signal sent to USB controller The bit field provides the value for VBUS_VALID reported to the USB controller if the value of USB1_VBUS_DETECT[3] is set to 1'b1</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the VBUS_VALID_3V detector results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_SOURCE_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ID_OVERRIDE_EN</name>
              <description>Enable ID override using the register field. This bit is only used if EXT_ID_OVERRIDE_EN = 1'b0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_OVERRIDE</name>
              <description>ID override value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_ID_OVERRIDE_EN</name>
              <description>Enable ID override using the pinmuxed value:</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the Muxed value chosen using ID_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external ID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EXT_VBUS_OVERRIDE_EN</name>
              <description>Enable VBUS override using the pin muxed value.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the muxed value chosen using VBUS_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external VBUS VALID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUSVALID_TO_SESSVALID</name>
              <description>Selects the comparator used for VBUS_VALID This bit field controls the comparator used to report the VBUS_VALID results in USB1_VBUS_DETECT[3] between the VBUS_VALID comparator and the Session Valid comparator</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator for VBUS_VALID results</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session End comparator for VBUS_VALID results. The Session End threshold is &gt;0.8V and &lt;4.0V.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWRUP_CMPS</name>
              <description>Enables the VBUS_VALID comparator: Powers up the comparator used for the VBUS_VALID detector</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Powers down the VBUS_VALID comparator</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables the VBUS_VALID comparator (default)</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCHARGE_VBUS</name>
              <description>Controls VBUS discharge resistor This bit field controls a nominal 22kohm resistor between the USB1_VBUS pin and ground</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>VBUS discharge resistor is disabled (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>VBUS discharge resistor is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1_VBUS_DETECT_TOG</name>
          <description>USB PHY VBUS Detect Control Register</description>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x700004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VBUSVALID_THRESH</name>
              <description>Sets the threshold for the VBUSVALID comparator</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>4.0V</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>4.1V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>4.2V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value3</name>
                  <description>4.3V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value4</name>
                  <description>4.4V(Default)</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value5</name>
                  <description>4.5V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value6</name>
                  <description>4.6V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value7</name>
                  <description>4.7V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_OVERRIDE_EN</name>
              <description>VBUS detect signal override enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the results of the internal VBUS_VALID and Session Valid comparators for VBUS_VALID, AVALID, BVALID, and SESSEND (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the override values for VBUS_VALID, AVALID, BVALID, and SESSEND</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SESSEND_OVERRIDE</name>
              <description>Override value for SESSEND The bit field provides the value for USB1_VBUS_DET_STAT[0] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BVALID_OVERRIDE</name>
              <description>Override value for B-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[1] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AVALID_OVERRIDE</name>
              <description>Override value for A-Device Session Valid The bit field provides the value for USB1_VBUS_DET_STAT[2] if USB_VBUS_DETECT[3] is set to value 1'b1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_OVERRIDE</name>
              <description>Override value for VBUS_VALID signal sent to USB controller The bit field provides the value for VBUS_VALID reported to the USB controller if the value of USB1_VBUS_DETECT[3] is set to 1'b1</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSVALID_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the VBUS_VALID_3V detector results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_SOURCE_SEL</name>
              <description>Selects the source of the VBUS_VALID signal reported to the USB controller This is one of the bit fields that selects the source of the VBUS_VALID signal reported to the USB controller</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator results for signal reported to the USB controller (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value2</name>
                  <description>Use the Session Valid comparator results for signal reported to the USB controller</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ID_OVERRIDE_EN</name>
              <description>Enable ID override using the register field. This bit is only used if EXT_ID_OVERRIDE_EN = 1'b0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_OVERRIDE</name>
              <description>ID override value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_ID_OVERRIDE_EN</name>
              <description>Enable ID override using the pin muxed value.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the muxed value chosen using ID_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external ID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EXT_VBUS_OVERRIDE_EN</name>
              <description>Enable VBUS override using the pin muxed value.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Select the Muxed value chosen using VBUS_OVERRIDE_EN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Select the external VBUS VALID value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUSVALID_TO_SESSVALID</name>
              <description>Selects the comparator used for VBUS_VALID This bit field controls the comparator used to report the VBUS_VALID results in USB1_VBUS_DETECT[3] between the VBUS_VALID comparator and the Session Valid comparator</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Use the VBUS_VALID comparator for VBUS_VALID results</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Use the Session End comparator for VBUS_VALID results. The Session End threshold is &gt;0.8V and &lt;4.0V.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWRUP_CMPS</name>
              <description>Enables the VBUS_VALID comparator Powers up the comparator used for the VBUS_VALID detector</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>Powers down the VBUS_VALID comparator</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>Enables the VBUS_VALID comparator (default)</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCHARGE_VBUS</name>
              <description>Controls VBUS discharge resistor This bit field controls a nominal 22kohm resistor between the USB1_VBUS pin and ground</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>VBUS discharge resistor is disabled (Default)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>VBUS discharge resistor is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1_VBUS_DET_STAT</name>
          <description>USB PHY VBUS Detector Status Register</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SESSEND</name>
              <description>Session End indicator Session End status, value inverted from Session Valid comparator</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>The VBUS voltage is above the Session Valid threshold</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>The VBUS voltage is below the Session Valid threshold</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BVALID</name>
              <description>B-Device Session Valid status B-Device Session Valid status, determined by the Session Valid comparator</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>The VBUS voltage is below the Session Valid threshold</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>The VBUS voltage is above the Session Valid threshold</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVALID</name>
              <description>A-Device Session Valid status A-Device Session Valid status, determined by the Session Valid comparator</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>The VBUS voltage is below the Session Valid threshold</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>The VBUS voltage is above the Session Valid threshold</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_VALID</name>
              <description>VBUS voltage status This bit field shows the result of VBUS_VALID detection for the USB1_VBUS pin</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>VBUS is below the comparator threshold</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>VBUS is above the comparator threshold</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VBUS_VALID_3V</name>
              <description>VBUS_VALID_3V detector status The VBUS_VALID_3V detector has a lower threshold for the voltage on the USB1_VBUS pin than either the Session Valid or VBUS_VALID comparators</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>VBUS voltage is below VBUS_VALID_3V threshold</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>VBUS voltage is above VBUS_VALID_3V threshold</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ANACTRL</name>
          <description>USB PHY Analog Control Register</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LVI_EN</name>
              <description>Vow voltage detector enable bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PFD_CLK_SEL</name>
              <description>For normal USB operation, this bit field must remain at value 2'b00.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_PULLDOWN</name>
              <description>Setting this field to 1'b1 will enable the 15kohm pulldown resistors on both USB_DP and USB_DM pins</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare disabled in device mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare enabled in device mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ANACTRL_SET</name>
          <description>USB PHY Analog Control Register</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LVI_EN</name>
              <description>Vow voltage detector enable bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PFD_CLK_SEL</name>
              <description>For normal USB operation, this bit field must remain at value 2'b00.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_PULLDOWN</name>
              <description>Setting this field to 1'b1 will enable the 15kohm pulldown resistors on both USB_DP and USB_DM pins</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare disabled in device mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare enabled in device mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ANACTRL_CLR</name>
          <description>USB PHY Analog Control Register</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LVI_EN</name>
              <description>Vow voltage detector enable bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PFD_CLK_SEL</name>
              <description>For normal USB operation, this bit field must remain at value 2'b00.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_PULLDOWN</name>
              <description>Setting this field to 1'b1 will enable the 15kohm pulldown resistors on both USB_DP and USB_DM pins</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare disabled in device mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare enabled in device mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ANACTRL_TOG</name>
          <description>USB PHY Analog Control Register</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA000402</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LVI_EN</name>
              <description>Vow voltage detector enable bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PFD_CLK_SEL</name>
              <description>For normal USB operation, this bit field must remain at value 2'b00.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_PULLDOWN</name>
              <description>Setting this field to 1'b1 will enable the 15kohm pulldown resistors on both USB_DP and USB_DM pins</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>value0</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare disabled in device mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>value1</name>
                  <description>The 15kohm nominal pulldowns on the USB_DP and USB_DM pinsare enabled in device mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RNG</name>
      <description>RNG</description>
      <groupName>RNG</groupName>
      <baseAddress>0x4003A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RANDOM_NUMBER</name>
          <description>This register contains a random 32 bit number which is computed on demand, at each time it is read</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RANDOM_NUMBER</name>
              <description>This register contains a random 32 bit number which is computed on demand, at each time it is read.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENCRYPTED_NUMBER</name>
          <description>This register contains a random 32 bit number which is pre-computed</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENCRYPTED_NUMBER</name>
              <description>This register contains a random 32 bit number which is pre-computed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COUNTER_VAL</name>
          <description>no description available</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CLK_RATIO</name>
              <description>Gives the ratio between the internal clocks frequencies and the register clock frequency for evaluation and certification purposes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REFRESH_CNT</name>
              <description>Incremented (till max possible value) each time COUNTER was updated since last reading to any *_NUMBER.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COUNTER_CFG</name>
          <description>no description available</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>MODE</name>
              <description>00: disabled 01: update once.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLOCK_SEL</name>
              <description>Selects the internal clock on which to compute statistics.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SHIFT4X</name>
              <description>To be used to add precision to clock_ratio and determine 'entropy refill'.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ONLINE_TEST_CFG</name>
          <description>no description available</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ACTIVATE</name>
              <description>0: disabled 1: activated Update rythm for VAL depends on COUNTER_CFG if data_sel is set to COUNTER.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_SEL</name>
              <description>Selects source on which to apply online test: 00: LSB of COUNTER: raw data from one or all sources of entropy 01: MSB of COUNTER: raw data from one or all sources of entropy 10: RANDOM_NUMBER 11: ENCRYPTED_NUMBER 'activate' should be set to 'disabled' before changing this field.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ONLINE_TEST_VAL</name>
          <description>no description available</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>LIVE_CHI_SQUARED</name>
              <description>This value is updated as described in field 'activate'.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MIN_CHI_SQUARED</name>
              <description>This field is reset when 'activate'==0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAX_CHI_SQUARED</name>
              <description>This field is reset when 'activate'==0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENTROPY_INJECT</name>
          <description>no description available</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>ENTROPY</name>
              <description>Use this register to inject or restore entropy 32 bits at a time. Writing is blocking thus see to it to have analog clocks activated. Injection can be usefull to add contribution from an external source of entropy, like for example LSBs of an ADC or of a temperature sensor. Restore can be usefull to store N random numbers in central memory before going powerdown then restore this entropy to RNG IP after power-up. It is useless to inject or restore more than 1*(number of RNGs) 32b words consecutively. Recommendation is to inject 1*(number of RNGs) words, and possibly later (2*32 clock cycles of slowest analog clock) inject again 1*(number of RNGs) words. Then maximum capacity of restoration is reached: about 44 bits per RNG (not to be mistaken with maximum capacity of entropy accumulation which is about 100 bits per RNG). You can inject less than 32 bits words (let unused bits to 0). Injection cannot degrade overall performance due to the fact that some internal PRNGs are excluded on purpose from this external action.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC_CFG</name>
          <description>no description available</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>AES_RESEED</name>
              <description>If set, ENCRYPTED_NUMBER generation becomes predictable, provided all secrets and current internal state are known: independant from entropy source.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AES_DT_CFG</name>
              <description>Set this bit to re-seed AES.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>POWERDOWN</name>
          <description>Powerdown mode (standard but certainly useless here)</description>
          <addressOffset>0xFF4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x80000003</resetMask>
          <fields>
            <field>
              <name>SOFT_RESET</name>
              <description>Request softreset that will go low automaticaly after acknowledge from CORE.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_SOFT_RESET</name>
              <description>When used with softreset it forces CORE_RESETN to low on acknowledge from CORE.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POWERDOWN</name>
              <description>When set all accesses to standard registers are blocked.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODULEID</name>
          <description>IP identifier</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xA0B84000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APERTURE</name>
              <description>Aperture i.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MIN_REV</name>
              <description>Minor revision i.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJ_REV</name>
              <description>Major revision i.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>Identifier.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PUF</name>
      <description>PUFCTRL</description>
      <groupName>PUF</groupName>
      <baseAddress>0x4003B000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x25C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PUF</name>
        <value>56</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>PUF Control register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x5F</resetMask>
          <fields>
            <field>
              <name>zeroize</name>
              <description>Begin Zeroize operation for PUF and go to Error state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>enroll</name>
              <description>Begin Enroll operation</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>start</name>
              <description>Begin Start operation</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GENERATEKEY</name>
              <description>Begin Set Intrinsic Key operation</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETKEY</name>
              <description>Begin Set User Key operation</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GETKEY</name>
              <description>Begin Get Key operation</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYINDEX</name>
          <description>PUF Key Index register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>KEYIDX</name>
              <description>Key index for Set Key operations</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYSIZE</name>
          <description>PUF Key Size register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>KEYSIZE</name>
              <description>Key size for Set Key operations</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STAT</name>
          <description>PUF Status register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x1</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>busy</name>
              <description>Indicates that operation is in progress</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SUCCESS</name>
              <description>Last operation was successful</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>error</name>
              <description>PUF is in the Error state and no operations can be performed</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEYINREQ</name>
              <description>Request for next part of key</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEYOUTAVAIL</name>
              <description>Next part of key is available</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CODEINREQ</name>
              <description>Request for next part of AC/KC</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CODEOUTAVAIL</name>
              <description>Next part of AC/KC is available</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALLOW</name>
          <description>PUF Allow register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>ALLOWENROLL</name>
              <description>Enroll operation is allowed</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ALLOWSTART</name>
              <description>Start operation is allowed</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ALLOWSETKEY</name>
              <description>Set Key operations are allowed</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ALLOWGETKEY</name>
              <description>Get Key operation is allowed</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYINPUT</name>
          <description>PUF Key Input register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KEYIN</name>
              <description>Key input data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CODEINPUT</name>
          <description>PUF Code Input register</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CODEIN</name>
              <description>AC/KC input data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CODEOUTPUT</name>
          <description>PUF Code Output register</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CODEOUT</name>
              <description>AC/KC output data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYOUTINDEX</name>
          <description>PUF Key Output Index register</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>KEYOUTIDX</name>
              <description>Key index for the key that is currently output via the Key Output register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYOUTPUT</name>
          <description>PUF Key Output register</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KEYOUT</name>
              <description>Key output data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IFSTAT</name>
          <description>PUF Interface Status and clear register</description>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ERROR</name>
              <description>Indicates that an APB error has occurred,Writing logic1 clears the if_error bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTEN</name>
          <description>PUF Interrupt Enable</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READYEN</name>
              <description>Enable corresponding interrupt. Note that bit numbers match those assigned in QK_SR (Quiddikey Status Register)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUCCESEN</name>
              <description>Enable corresponding interrupt. Note that bit numbers match those assigned in QK_SR (Quiddikey Status Register)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERROREN</name>
              <description>Enable corresponding interrupt. Note that bit numbers match those assigned in QK_SR (Quiddikey Status Register)</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYINREQEN</name>
              <description>Enable corresponding interrupt. Note that bit numbers match those assigned in QK_SR (Quiddikey Status Register)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYOUTAVAILEN</name>
              <description>Enable corresponding interrupt. Note that bit numbers match those assigned in QK_SR (Quiddikey Status Register)</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CODEINREQEN</name>
              <description>Enable corresponding interrupt. Note that bit numbers match those assigned in QK_SR (Quiddikey Status Register)</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CODEOUTAVAILEN</name>
              <description>Enable corresponding interrupt. Note that bit numbers match those assigned in QK_SR (Quiddikey Status Register)</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>PUF interrupt status</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>Triggers on falling edge of busy, write 1 to clear</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUCCESS</name>
              <description>Level sensitive interrupt, cleared when interrupt source clears</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERROR</name>
              <description>Level sensitive interrupt, cleared when interrupt source clears</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYINREQ</name>
              <description>Level sensitive interrupt, cleared when interrupt source clears</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYOUTAVAIL</name>
              <description>Level sensitive interrupt, cleared when interrupt source clears</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CODEINREQ</name>
              <description>Level sensitive interrupt, cleared when interrupt source clears</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CODEOUTAVAIL</name>
              <description>Level sensitive interrupt, cleared when interrupt source clears</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFG</name>
          <description>PUF config register for block bits</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>BLOCKENROLL_SETKEY</name>
              <description>Block enroll operation. Write 1 to set, cleared on reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLOCKKEYOUTPUT</name>
              <description>Block set key operation. Write 1 to set, cleared on reset.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYLOCK</name>
          <description>Only reset in case of full IC reset</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xAA</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>KEY0</name>
              <description>&quot;10:Write access to KEY0MASK, KEYENABLE.KEY0 and KEYRESET.KEY0 is allowed. 00, 01, 11:Write access to KEY0MASK, KEYENABLE.KEY0 and KEYRESET.KEY0 is NOT allowed. Important Note : Once this field is written with a value different from '10', its value can no longer be modified until un Power On Reset occurs.&quot;</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY1</name>
              <description>&quot;10:Write access to KEY1MASK, KEYENABLE.KEY1 and KEYRESET.KEY1 is allowed. 00, 01, 11:Write access to KEY1MASK, KEYENABLE.KEY1 and KEYRESET.KEY1 is NOT allowed. Important Note : Once this field is written with a value different from '10', its value can no longer be modified until un Power On Reset occurs.&quot;</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY2</name>
              <description>&quot;10:Write access to KEY2MASK, KEYENABLE.KEY2 and KEYRESET.KEY2 is allowed. 00, 01, 11:Write access to KEY2MASK, KEYENABLE.KEY2 and KEYRESET.KEY2 is NOT allowed. Important Note : Once this field is written with a value different from '10', its value can no longer be modified until un Power On Reset occurs.&quot;</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY3</name>
              <description>&quot;10:Write access to KEY3MASK, KEYENABLE.KEY3 and KEYRESET.KEY3 is allowed. 00, 01, 11:Write access to KEY3MASK, KEYENABLE.KEY3 and KEYRESET.KEY3 is NOT allowed. Important Note : Once this field is written with a value different from '10', its value can no longer be modified until un Power On Reset occurs.&quot;</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYENABLE</name>
          <description>no description available</description>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x55</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>KEY0</name>
              <description>&quot;10: Data coming out from PUF Index 0 interface are shifted in KEY0 register. 00, 01, 11 : Data coming out from PUF Index 0 interface are NOT shifted in KEY0 register.&quot;</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY1</name>
              <description>&quot;10: Data coming out from PUF Index 0 interface are shifted in KEY1 register. 00, 01, 11 : Data coming out from PUF Index 0 interface are NOT shifted in KEY1 register.&quot;</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY2</name>
              <description>&quot;10: Data coming out from PUF Index 0 interface are shifted in KEY2 register. 00, 01, 11 : Data coming out from PUF Index 0 interface are NOT shifted in KEY2 register.&quot;</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY3</name>
              <description>&quot;10: Data coming out from PUF Index 0 interface are shifted in KEY3 register. 00, 01, 11 : Data coming out from PUF Index 0 interface are NOT shifted in KEY3 register.&quot;</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYRESET</name>
          <description>Reinitialize Keys shift registers counters</description>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KEY0</name>
              <description>10: Reset KEY0 shift register. Self clearing. Must be done before loading any new key.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>KEY1</name>
              <description>10: Reset KEY1 shift register. Self clearing. Must be done before loading any new key.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>KEY2</name>
              <description>10: Reset KEY2 shift register. Self clearing. Must be done before loading any new key.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>KEY3</name>
              <description>10: Reset KEY3 shift register. Self clearing. Must be done before loading any new key.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDXBLK</name>
          <description>no description available</description>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0xAAAAAAAA</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDX0</name>
              <description>Use to block PUF index 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX1</name>
              <description>Use to block PUF index 1</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX2</name>
              <description>Use to block PUF index 2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX3</name>
              <description>Use to block PUF index 3</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX4</name>
              <description>Use to block PUF index 4</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX5</name>
              <description>Use to block PUF index 5</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX6</name>
              <description>Use to block PUF index 6</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX7</name>
              <description>Use to block PUF index 7</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX8</name>
              <description>Use to block PUF index 8</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX9</name>
              <description>Use to block PUF index 9</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX10</name>
              <description>Use to block PUF index 10</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX11</name>
              <description>Use to block PUF index 11</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX12</name>
              <description>Use to block PUF index 12</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX13</name>
              <description>Use to block PUF index 13</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX14</name>
              <description>Use to block PUF index 14</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX15</name>
              <description>Use to block PUF index 15</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDXBLK_DP</name>
          <description>no description available</description>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0xAAAAAAAA</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDX0</name>
              <description>Use to block PUF index 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX1</name>
              <description>Use to block PUF index 1</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX2</name>
              <description>Use to block PUF index 2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX3</name>
              <description>Use to block PUF index 3</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX4</name>
              <description>Use to block PUF index 4</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX5</name>
              <description>Use to block PUF index 5</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX6</name>
              <description>Use to block PUF index 6</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX7</name>
              <description>Use to block PUF index 7</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX8</name>
              <description>Use to block PUF index 8</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX9</name>
              <description>Use to block PUF index 9</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX10</name>
              <description>Use to block PUF index 10</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX11</name>
              <description>Use to block PUF index 11</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX12</name>
              <description>Use to block PUF index 12</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX13</name>
              <description>Use to block PUF index 13</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX14</name>
              <description>Use to block PUF index 14</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDX15</name>
              <description>Use to block PUF index 15</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>KEYMASK[%s]</name>
          <description>Only reset in case of full IC reset</description>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KEYMASK</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDXBLK_STATUS</name>
          <description>Index block status</description>
          <addressOffset>0x254</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDX0</name>
              <description>Status block index 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX1</name>
              <description>Status block index 1</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX2</name>
              <description>Status block index 2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX3</name>
              <description>Status block index 3</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX4</name>
              <description>Status block index 4</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX5</name>
              <description>Status block index 5</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX6</name>
              <description>Status block index 6</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX7</name>
              <description>Status block index 7</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX8</name>
              <description>Status block index 8</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX9</name>
              <description>Status block index 9</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX10</name>
              <description>Status block index 10</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX11</name>
              <description>Status block index 11</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX12</name>
              <description>Status block index 12</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX13</name>
              <description>Status block index 13</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX14</name>
              <description>Status block index 14</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDX15</name>
              <description>Status block index 15</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHIFT_STATUS</name>
          <description>no description available</description>
          <addressOffset>0x258</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>KEY0</name>
              <description>Index counter from key 0 shift register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY1</name>
              <description>Index counter from key 1 shift register</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY2</name>
              <description>Index counter from key 2 shift register</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY3</name>
              <description>Index counter from key 3 shift register</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PUF_SRAM_CTRL</name>
      <description>PUF SRAM Control</description>
      <alternatePeripheral>PUF</alternatePeripheral>
      <groupName>PUF_SRAM_CTRL</groupName>
      <baseAddress>0x4003B000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x3F0</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CFG</name>
          <description>Configuration Register</description>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x5F</resetMask>
          <fields>
            <field>
              <name>enable</name>
              <description>PUF SRAM Controller activation</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ckgating</name>
              <description>PUF SRAM Clock Gating control</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>Status Register</description>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>PUF SRAM Controller State</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_ENABLE</name>
          <description>Interrupt Enable Clear Register</description>
          <addressOffset>0x3D8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>READY Interrupt Enable clear</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_ERR</name>
              <description>APB_ERR Interrupt Enable clear</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_SET_ENABLE</name>
          <description>Interrupt Enable Set Register</description>
          <addressOffset>0x3DC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>READY Interrupt Enable set</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_ERR</name>
              <description>APB_ERR Interrupt Enable set</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_STATUS</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0x3E0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>READY Interrupt Status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_ERR</name>
              <description>APB_ERR Interrupt Status</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENABLE</name>
          <description>Interrupt Enable Register</description>
          <addressOffset>0x3E4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>READY Interrupt Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_ERR</name>
              <description>APB_ERR Interrupt Enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_STATUS</name>
          <description>Interrupt Status Clear Register</description>
          <addressOffset>0x3E8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>READY Interrupt Status clear</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_ERR</name>
              <description>APB_ERR Interrupt Status Clear</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_SET_STATUS</name>
          <description>Interrupt Status set</description>
          <addressOffset>0x3EC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>READY</name>
              <description>READY Interrupt Status set</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_ERR</name>
              <description>APB_ERR Interrupt Status Set</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PLU</name>
      <description>LPC80X Programmable Logic Unit (PLU)</description>
      <groupName>PLU</groupName>
      <baseAddress>0x4003D000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xC20</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PLU</name>
        <value>52</value>
      </interrupt>
      <registers>
        <cluster>
          <dim>26</dim>
          <dimIncrement>0x20</dimIncrement>
          <name>LUT[%s]</name>
          <description>no description available</description>
          <addressOffset>0</addressOffset>
          <register>
            <dim>5</dim>
            <dimIncrement>0x4</dimIncrement>
            <dimIndex>0,1,2,3,4</dimIndex>
            <name>LUT_INP_MUX%s</name>
            <description>LUTn input x MUX</description>
            <addressOffset>0</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x3F</resetMask>
            <fields>
              <field>
                <name>LUTn_INPx</name>
                <description>Selects the input source to be connected to LUT0 input0. For each LUT, the slot associated with the output from LUTn itself is tied low.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>6</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>plu_inputs0</name>
                    <description>The PLU primary inputs 0.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>plu_inputs1</name>
                    <description>The PLU primary inputs 1.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>plu_inputs2</name>
                    <description>The PLU primary inputs 2.</description>
                    <value>0x2</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>plu_inputs3</name>
                    <description>The PLU primary inputs 3.</description>
                    <value>0x3</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>plu_inputs4</name>
                    <description>The PLU primary inputs 4.</description>
                    <value>0x4</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>plu_inputs5</name>
                    <description>The PLU primary inputs 5.</description>
                    <value>0x5</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs0</name>
                    <description>The output of LUT0.</description>
                    <value>0x6</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs1</name>
                    <description>The output of LUT1.</description>
                    <value>0x7</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs2</name>
                    <description>The output of LUT2.</description>
                    <value>0x8</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs3</name>
                    <description>The output of LUT3.</description>
                    <value>0x9</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs4</name>
                    <description>The output of LUT4.</description>
                    <value>0xA</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs5</name>
                    <description>The output of LUT5.</description>
                    <value>0xB</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs6</name>
                    <description>The output of LUT6.</description>
                    <value>0xC</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs7</name>
                    <description>The output of LUT7.</description>
                    <value>0xD</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs8</name>
                    <description>The output of LUT8.</description>
                    <value>0xE</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs9</name>
                    <description>The output of LUT9.</description>
                    <value>0xF</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs10</name>
                    <description>The output of LUT10.</description>
                    <value>0x10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs11</name>
                    <description>The output of LUT11.</description>
                    <value>0x11</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs12</name>
                    <description>The output of LUT12.</description>
                    <value>0x12</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs13</name>
                    <description>The output of LUT13.</description>
                    <value>0x13</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs14</name>
                    <description>The output of LUT14.</description>
                    <value>0x14</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs15</name>
                    <description>The output of LUT15.</description>
                    <value>0x15</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs16</name>
                    <description>The output of LUT16.</description>
                    <value>0x16</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs17</name>
                    <description>The output of LUT17.</description>
                    <value>0x17</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs18</name>
                    <description>The output of LUT18.</description>
                    <value>0x18</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs19</name>
                    <description>The output of LUT19.</description>
                    <value>0x19</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs20</name>
                    <description>The output of LUT20.</description>
                    <value>0x1A</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs21</name>
                    <description>The output of LUT21.</description>
                    <value>0x1B</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs22</name>
                    <description>The output of LUT22.</description>
                    <value>0x1C</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs23</name>
                    <description>The output of LUT23.</description>
                    <value>0x1D</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs24</name>
                    <description>The output of LUT24.</description>
                    <value>0x1E</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>lut_outputs25</name>
                    <description>The output of LUT25.</description>
                    <value>0x1F</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>state0</name>
                    <description>state(0).</description>
                    <value>0x20</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>state1</name>
                    <description>state(1).</description>
                    <value>0x21</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>state2</name>
                    <description>state(2).</description>
                    <value>0x22</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>state3</name>
                    <description>state(3).</description>
                    <value>0x23</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <dim>26</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>LUT_TRUTH[%s]</name>
          <description>Specifies the Truth Table contents for LUTLUTn</description>
          <addressOffset>0x800</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LUTn_TRUTH</name>
              <description>Specifies the Truth Table contents for LUT0..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTPUTS</name>
          <description>Provides the current state of the 8 designated PLU Outputs.</description>
          <addressOffset>0x900</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUTPUT_STATE</name>
              <description>Provides the current state of the 8 designated PLU Outputs..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEINT_CTRL</name>
          <description>Wakeup interrupt control for PLU</description>
          <addressOffset>0x904</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASK</name>
              <description>Interrupt mask (which of the 8 PLU Outputs contribute to interrupt)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_MODE</name>
              <description>control input of the PLU, add filtering for glitch.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BYPASS</name>
                  <description>Bypass mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER1CLK</name>
                  <description>Filter 1 clock period.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER2CLK</name>
                  <description>Filter 2 clock period.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER3CLK</name>
                  <description>Filter 3 clock period.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTER_CLKSEL</name>
              <description>hclk is divided by 2**filter_clksel.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FRO1MHZ</name>
                  <description>Selects the 1 MHz low-power oscillator as the filter clock.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRO12MHZ</name>
                  <description>Selects the 12 Mhz FRO as the filter clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OTHER_CLOCK</name>
                  <description>Selects a third filter clock source, if provided.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LATCH_ENABLE</name>
              <description>latch the interrupt , then can be cleared with next bit INTR_CLEAR</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_CLEAR</name>
              <description>Write to clear wakeint_latched</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>OUTPUT_MUX[%s]</name>
          <description>Selects the source to be connected to PLU Output OUTPUT_n</description>
          <addressOffset>0xC00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUTPUTn</name>
              <description>Selects the source to be connected to PLU Output 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>plu_output0</name>
                  <description>The PLU output 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output1</name>
                  <description>The PLU output 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output2</name>
                  <description>The PLU output 2.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output3</name>
                  <description>The PLU output 3.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output4</name>
                  <description>The PLU output 4.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output5</name>
                  <description>The PLU output 5.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output6</name>
                  <description>The PLU output 6.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output7</name>
                  <description>The PLU output 7.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output8</name>
                  <description>The PLU output 8.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output9</name>
                  <description>The PLU output 9.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output10</name>
                  <description>The PLU output 10.</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output11</name>
                  <description>The PLU output 11.</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output12</name>
                  <description>The PLU output 12.</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output13</name>
                  <description>The PLU output 13.</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output14</name>
                  <description>The PLU output 14.</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output15</name>
                  <description>The PLU output 15.</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output16</name>
                  <description>The PLU output 16.</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output17</name>
                  <description>The PLU output 17.</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output18</name>
                  <description>The PLU output 18.</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output19</name>
                  <description>The PLU output 19.</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output20</name>
                  <description>The PLU output 20.</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output21</name>
                  <description>The PLU output 21.</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output22</name>
                  <description>The PLU output 22.</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output23</name>
                  <description>The PLU output 23.</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output24</name>
                  <description>The PLU output 24.</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>plu_output25</name>
                  <description>The PLU output 25.</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>state0</name>
                  <description>state(0).</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>state1</name>
                  <description>state(1).</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>state2</name>
                  <description>state(2).</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>state3</name>
                  <description>state(3).</description>
                  <value>0x1D</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA0</name>
      <description>DMA controller</description>
      <groupName>DMA</groupName>
      <headerStructName>DMA</headerStructName>
      <baseAddress>0x40082000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x56C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DMA0</name>
        <value>1</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>DMA control.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>DMA controller master enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The DMA controller is disabled. This clears any triggers that were asserted at the point when disabled, but does not prevent re-triggering when the DMA controller is re-enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The DMA controller is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>Interrupt status.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x6</resetMask>
          <fields>
            <field>
              <name>ACTIVEINT</name>
              <description>Summarizes whether any enabled interrupts (other than error interrupts) are pending.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Not pending. No enabled interrupts are pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Pending. At least one enabled interrupt is pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVEERRINT</name>
              <description>Summarizes whether any error interrupts are pending.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Not pending. No error interrupts are pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Pending. At least one error interrupt is pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAMBASE</name>
          <description>SRAM address of the channel configuration table.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFE00</resetMask>
          <fields>
            <field>
              <name>OFFSET</name>
              <description>Address bits 31:9 of the beginning of the DMA descriptor table. For 18 channels, the table must begin on a 512 byte boundary.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLESET0</name>
          <description>Channel Enable read and Set for all DMA channels.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENA</name>
              <description>Enable for DMA channels. Bit n enables or disables DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = disabled. 1 = enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLECLR0</name>
          <description>Channel Enable Clear for all DMA channels.</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CLR</name>
              <description>Writing ones to this register clears the corresponding bits in ENABLESET0. Bit n clears the channel enable bit n. The number of bits = number of DMA channels in this device. Other bits are reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ACTIVE0</name>
          <description>Channel Active status for all DMA channels.</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ACT</name>
              <description>Active flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not active. 1 = active.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BUSY0</name>
          <description>Channel Busy status for all DMA channels.</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BSY</name>
              <description>Busy flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not busy. 1 = busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ERRINT0</name>
          <description>Error Interrupt status for all DMA channels.</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ERR</name>
              <description>Error Interrupt flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = error interrupt is not active. 1 = error interrupt is active.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENSET0</name>
          <description>Interrupt Enable read and Set for all DMA channels.</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INTEN</name>
              <description>Interrupt Enable read and set for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = interrupt for DMA channel is disabled. 1 = interrupt for DMA channel is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENCLR0</name>
          <description>Interrupt Enable Clear for all DMA channels.</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CLR</name>
              <description>Writing ones to this register clears corresponding bits in the INTENSET0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTA0</name>
          <description>Interrupt A status for all DMA channels.</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IA</name>
              <description>Interrupt A status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt A is not active. 1 = the DMA channel interrupt A is active.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTB0</name>
          <description>Interrupt B status for all DMA channels.</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IB</name>
              <description>Interrupt B status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt B is not active. 1 = the DMA channel interrupt B is active.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SETVALID0</name>
          <description>Set ValidPending control bits for all DMA channels.</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SV</name>
              <description>SETVALID control for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the VALIDPENDING control bit for DMA channel n</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SETTRIG0</name>
          <description>Set Trigger control bits for all DMA channels.</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TRIG</name>
              <description>Set Trigger control bit for DMA channel 0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the TRIG bit for DMA channel n.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ABORT0</name>
          <description>Channel Abort control for all DMA channels.</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ABORTCTRL</name>
              <description>Abort control for DMA channel 0. Bit n corresponds to DMA channel n. 0 = no effect. 1 = aborts DMA operations on channel n.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <cluster>
          <dim>23</dim>
          <dimIncrement>0x10</dimIncrement>
          <name>CHANNEL[%s]</name>
          <description>no description available</description>
          <addressOffset>0x400</addressOffset>
          <register>
            <name>CFG</name>
            <description>Configuration register for DMA channel .</description>
            <addressOffset>0</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x7CF73</resetMask>
            <fields>
              <field>
                <name>PERIPHREQEN</name>
                <description>Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DISABLED</name>
                    <description>Disabled. Peripheral DMA requests are disabled.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ENABLED</name>
                    <description>Enabled. Peripheral DMA requests are enabled.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>HWTRIGEN</name>
                <description>Hardware Triggering Enable for this channel.</description>
                <bitOffset>1</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DISABLED</name>
                    <description>Disabled. Hardware triggering is not used.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ENABLED</name>
                    <description>Enabled. Use hardware triggering.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRIGPOL</name>
                <description>Trigger Polarity. Selects the polarity of a hardware trigger for this channel.</description>
                <bitOffset>4</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>ACTIVE_LOW_FALLING</name>
                    <description>Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ACTIVE_HIGH_RISING</name>
                    <description>Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRIGTYPE</name>
                <description>Trigger Type. Selects hardware trigger as edge triggered or level triggered.</description>
                <bitOffset>5</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>EDGE</name>
                    <description>Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>LEVEL</name>
                    <description>Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRIGBURST</name>
                <description>Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.</description>
                <bitOffset>6</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>SINGLE</name>
                    <description>Single transfer. Hardware trigger causes a single transfer.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>BURST</name>
                    <description>Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>BURSTPOWER</name>
                <description>Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.</description>
                <bitOffset>8</bitOffset>
                <bitWidth>4</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>SRCBURSTWRAP</name>
                <description>Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.</description>
                <bitOffset>14</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DISABLED</name>
                    <description>Disabled. Source burst wrapping is not enabled for this DMA channel.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ENABLED</name>
                    <description>Enabled. Source burst wrapping is enabled for this DMA channel.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DSTBURSTWRAP</name>
                <description>Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.</description>
                <bitOffset>15</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DISABLED</name>
                    <description>Disabled. Destination burst wrapping is not enabled for this DMA channel.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ENABLED</name>
                    <description>Enabled. Destination burst wrapping is enabled for this DMA channel.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CHPRIORITY</name>
                <description>Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.</description>
                <bitOffset>16</bitOffset>
                <bitWidth>3</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CTLSTAT</name>
            <description>Control and status register for DMA channel .</description>
            <addressOffset>0x4</addressOffset>
            <size>32</size>
            <access>read-only</access>
            <resetValue>0</resetValue>
            <resetMask>0x5</resetMask>
            <fields>
              <field>
                <name>VALIDPENDING</name>
                <description>Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO_EFFECT</name>
                    <description>No effect. No effect on DMA operation.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>VALID_PENDING</name>
                    <description>Valid pending.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRIG</name>
                <description>Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.</description>
                <bitOffset>2</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NOT_TRIGGERED</name>
                    <description>Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>TRIGGERED</name>
                    <description>Triggered. The trigger for this DMA channel is set. DMA operations will be carried out.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>XFERCFG</name>
            <description>Transfer configuration register for DMA channel .</description>
            <addressOffset>0x8</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x3FFF33F</resetMask>
            <fields>
              <field>
                <name>CFGVALID</name>
                <description>Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NOT_VALID</name>
                    <description>Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>VALID</name>
                    <description>Valid. The current channel descriptor is considered valid.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RELOAD</name>
                <description>Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.</description>
                <bitOffset>1</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DISABLED</name>
                    <description>Disabled. Do not reload the channels' control structure when the current descriptor is exhausted.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ENABLED</name>
                    <description>Enabled. Reload the channels' control structure when the current descriptor is exhausted.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SWTRIG</name>
                <description>Software Trigger.</description>
                <bitOffset>2</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NOT_SET</name>
                    <description>Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>SET</name>
                    <description>Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CLRTRIG</name>
                <description>Clear Trigger.</description>
                <bitOffset>3</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NOT_CLEARED</name>
                    <description>Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>CLEARED</name>
                    <description>Cleared. The trigger is cleared when this descriptor is exhausted</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SETINTA</name>
                <description>Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.</description>
                <bitOffset>4</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO_EFFECT</name>
                    <description>No effect.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>SET</name>
                    <description>Set. The INTA flag for this channel will be set when the current descriptor is exhausted.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SETINTB</name>
                <description>Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.</description>
                <bitOffset>5</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO_EFFECT</name>
                    <description>No effect.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>SET</name>
                    <description>Set. The INTB flag for this channel will be set when the current descriptor is exhausted.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>WIDTH</name>
                <description>Transfer width used for this DMA channel.</description>
                <bitOffset>8</bitOffset>
                <bitWidth>2</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>BIT_8</name>
                    <description>8-bit. 8-bit transfers are performed (8-bit source reads and destination writes).</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>BIT_16</name>
                    <description>16-bit. 6-bit transfers are performed (16-bit source reads and destination writes).</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>BIT_32</name>
                    <description>32-bit. 32-bit transfers are performed (32-bit source reads and destination writes).</description>
                    <value>0x2</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SRCINC</name>
                <description>Determines whether the source address is incremented for each DMA transfer.</description>
                <bitOffset>12</bitOffset>
                <bitWidth>2</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO_INCREMENT</name>
                    <description>No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>WIDTH_X_1</name>
                    <description>1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>WIDTH_X_2</name>
                    <description>2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer.</description>
                    <value>0x2</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>WIDTH_X_4</name>
                    <description>4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer.</description>
                    <value>0x3</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DSTINC</name>
                <description>Determines whether the destination address is incremented for each DMA transfer.</description>
                <bitOffset>14</bitOffset>
                <bitWidth>2</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO_INCREMENT</name>
                    <description>No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>WIDTH_X_1</name>
                    <description>1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>WIDTH_X_2</name>
                    <description>2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer.</description>
                    <value>0x2</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>WIDTH_X_4</name>
                    <description>4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer.</description>
                    <value>0x3</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>XFERCOUNT</name>
                <description>Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.</description>
                <bitOffset>16</bitOffset>
                <bitWidth>10</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
      </registers>
    </peripheral>
    <peripheral derivedFrom="DMA0">
      <name>DMA1</name>
      <description>DMA controller</description>
      <groupName>DMA</groupName>
      <baseAddress>0x400A7000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x49C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DMA1</name>
        <value>58</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>USB0</name>
      <description>USB 2.0 Device Controller</description>
      <groupName>USB</groupName>
      <baseAddress>0x40084000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x38</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USB0_NEEDCLK</name>
        <value>27</value>
      </interrupt>
      <interrupt>
        <name>USB0</name>
        <value>28</value>
      </interrupt>
      <registers>
        <register>
          <name>DEVCMDSTAT</name>
          <description>USB Device Command/Status register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x800</resetValue>
          <resetMask>0x171BFBFF</resetMask>
          <fields>
            <field>
              <name>DEV_ADDR</name>
              <description>USB device address. After bus reset, the address is reset to 0x00. If the enable bit is set, the device will respond on packets for function address DEV_ADDR. When receiving a SetAddress Control Request from the USB host, software must program the new address before completing the status phase of the SetAddress Control Request.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_EN</name>
              <description>USB device enable. If this bit is set, the HW will start responding on packets for function address DEV_ADDR.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP</name>
              <description>SETUP token received. If a SETUP token is received and acknowledged by the device, this bit is set. As long as this bit is set all received IN and OUT tokens will be NAKed by HW. SW must clear this bit by writing a one. If this bit is zero, HW will handle the tokens to the CTRL EP0 as indicated by the CTRL EP0 IN and OUT data information programmed by SW.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_NEEDCLK</name>
              <description>Forces the NEEDCLK output to always be on:</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>USB_NEEDCLK has normal function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALWAYS_ON</name>
                  <description>USB_NEEDCLK always 1. Clock will not be stopped in case of suspend.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LPM_SUP</name>
              <description>LPM Supported:</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO</name>
                  <description>LPM not supported.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YES</name>
                  <description>LPM supported.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTONNAK_AO</name>
              <description>Interrupt on NAK for interrupt and bulk OUT EP</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only acknowledged packets generate an interrupt</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Both acknowledged and NAKed packets generate interrupts.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTONNAK_AI</name>
              <description>Interrupt on NAK for interrupt and bulk IN EP</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only acknowledged packets generate an interrupt</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Both acknowledged and NAKed packets generate interrupts.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTONNAK_CO</name>
              <description>Interrupt on NAK for control OUT EP</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only acknowledged packets generate an interrupt</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Both acknowledged and NAKed packets generate interrupts.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTONNAK_CI</name>
              <description>Interrupt on NAK for control IN EP</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only acknowledged packets generate an interrupt</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Both acknowledged and NAKed packets generate interrupts.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCON</name>
              <description>Device status - connect. The connect bit must be set by SW to indicate that the device must signal a connect. The pull-up resistor on USB_DP will be enabled when this bit is set and the VBUSDEBOUNCED bit is one.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSUS</name>
              <description>Device status - suspend. The suspend bit indicates the current suspend state. It is set to 1 when the device hasn't seen any activity on its upstream port for more than 3 milliseconds. It is reset to 0 on any activity. When the device is suspended (Suspend bit DSUS = 1) and the software writes a 0 to it, the device will generate a remote wake-up. This will only happen when the device is connected (Connect bit = 1). When the device is not connected or not suspended, a writing a 0 has no effect. Writing a 1 never has an effect.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPM_SUS</name>
              <description>Device status - LPM Suspend. This bit represents the current LPM suspend state. It is set to 1 by HW when the device has acknowledged the LPM request from the USB host and the Token Retry Time of 10 ms has elapsed. When the device is in the LPM suspended state (LPM suspend bit = 1) and the software writes a zero to this bit, the device will generate a remote walk-up. Software can only write a zero to this bit when the LPM_REWP bit is set to 1. HW resets this bit when it receives a host initiated resume. HW only updates the LPM_SUS bit when the LPM_SUPP bit is equal to one.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPM_REWP</name>
              <description>LPM Remote Wake-up Enabled by USB host. HW sets this bit to one when the bRemoteWake bit in the LPM extended token is set to 1. HW will reset this bit to 0 when it receives the host initiated LPM resume, when a remote wake-up is sent by the device or when a USB bus reset is received. Software can use this bit to check if the remote wake-up feature is enabled by the host for the LPM transaction.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCON_C</name>
              <description>Device status - connect change. The Connect Change bit is set when the device's pull-up resistor is disconnected because VBus disappeared. The bit is reset by writing a one to it.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSUS_C</name>
              <description>Device status - suspend change. The suspend change bit is set to 1 when the suspend bit toggles. The suspend bit can toggle because: - The device goes in the suspended state - The device is disconnected - The device receives resume signaling on its upstream port. The bit is reset by writing a one to it.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRES_C</name>
              <description>Device status - reset change. This bit is set when the device received a bus reset. On a bus reset the device will automatically go to the default state (unconfigured and responding to address 0). The bit is reset by writing a one to it.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUSDEBOUNCED</name>
              <description>This bit indicates if Vbus is detected or not. The bit raises immediately when Vbus becomes high. It drops to zero if Vbus is low for at least 3 ms. If this bit is high and the DCon bit is set, the HW will enable the pull-up resistor to signal a connect.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INFO</name>
          <description>USB Info register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_NR</name>
              <description>Frame number. This contains the frame number of the last successfully received SOF. In case no SOF was received by the device at the beginning of a frame, the frame number returned is that of the last successfully received SOF. In case the SOF frame number contained a CRC error, the frame number returned will be the corrupted frame number as received by the device.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR_CODE</name>
              <description>The error code which last occurred:</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>No error</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PID_ENCODING_ERROR</name>
                  <description>PID encoding error</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PID_UNKNOWN</name>
                  <description>PID unknown</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PACKET_UNEXPECTED</name>
                  <description>Packet unexpected</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOKEN_CRC_ERROR</name>
                  <description>Token CRC error</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA_CRC_ERROR</name>
                  <description>Data CRC error</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TIMEOUT</name>
                  <description>Time out</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BABBLE</name>
                  <description>Babble</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRUNCATED_EOP</name>
                  <description>Truncated EOP</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SENT_RECEIVED_NAK</name>
                  <description>Sent/Received NAK</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SENT_STALL</name>
                  <description>Sent Stall</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OVERRUN</name>
                  <description>Overrun</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SENT_EMPTY_PACKET</name>
                  <description>Sent empty packet</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BITSTUFF_ERROR</name>
                  <description>Bitstuff error</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SYNC_ERROR</name>
                  <description>Sync error</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRONG_DATA_TOGGLE</name>
                  <description>Wrong data toggle</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MINREV</name>
              <description>Minor Revision.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJREV</name>
              <description>Major Revision.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPLISTSTART</name>
          <description>USB EP Command/Status List start address</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>EP_LIST</name>
              <description>Start address of the USB EP Command/Status List.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATABUFSTART</name>
          <description>USB Data buffer start address</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFC00000</resetMask>
          <fields>
            <field>
              <name>DA_BUF</name>
              <description>Start address of the buffer pointer page where all endpoint data buffers are located.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LPM</name>
          <description>USB Link Power Management register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>HIRD_HW</name>
              <description>Host Initiated Resume Duration - HW. This is the HIRD value from the last received LPM token</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HIRD_SW</name>
              <description>Host Initiated Resume Duration - SW. This is the time duration required by the USB device system to come out of LPM initiated suspend after receiving the host initiated LPM resume.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_PENDING</name>
              <description>As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives. If LPM supported bit is set to one and this bit is zero, HW will return an ACK handshake on every LPM token it receives. If SW has still data pending and LPM is supported, it must set this bit to 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPSKIP</name>
          <description>USB Endpoint skip</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>SKIP</name>
              <description>Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software. When HW has deactivated the endpoint, it will clear this bit, but it will not modify the EPINUSE bit. An interrupt will be generated when the Active bit goes from 1 to 0. Note: In case of double-buffering, HW will only clear the Active bit of the buffer indicated by the EPINUSE bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPINUSE</name>
          <description>USB Endpoint Buffer in use</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FC</resetMask>
          <fields>
            <field>
              <name>BUF</name>
              <description>Buffer in use: This register has one bit per physical endpoint. 0: HW is accessing buffer 0. 1: HW is accessing buffer 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPBUFCFG</name>
          <description>USB Endpoint Buffer Configuration register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FC</resetMask>
          <fields>
            <field>
              <name>BUF_SB</name>
              <description>Buffer usage: This register has one bit per physical endpoint. 0: Single-buffer. 1: Double-buffer. If the bit is set to single-buffer (0), it will not toggle the corresponding EPINUSE bit when it clears the active bit. If the bit is set to double-buffer (1), HW will toggle the EPINUSE bit when it clears the Active bit for the buffer.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>USB interrupt status register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC00003FF</resetMask>
          <fields>
            <field>
              <name>EP0OUT</name>
              <description>Interrupt status register bit for the Control EP0 OUT direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software or a SETUP packet is successfully received for the control EP0. If the IntOnNAK_CO is set, this bit will also be set when a NAK is transmitted for the Control EP0 OUT direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP0IN</name>
              <description>Interrupt status register bit for the Control EP0 IN direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_CI is set, this bit will also be set when a NAK is transmitted for the Control EP0 IN direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP1OUT</name>
              <description>Interrupt status register bit for the EP1 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP1 OUT direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP1IN</name>
              <description>Interrupt status register bit for the EP1 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP1 IN direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP2OUT</name>
              <description>Interrupt status register bit for the EP2 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP2 OUT direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP2IN</name>
              <description>Interrupt status register bit for the EP2 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP2 IN direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP3OUT</name>
              <description>Interrupt status register bit for the EP3 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP3 OUT direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP3IN</name>
              <description>Interrupt status register bit for the EP3 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP3 IN direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP4OUT</name>
              <description>Interrupt status register bit for the EP4 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP4 OUT direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP4IN</name>
              <description>Interrupt status register bit for the EP4 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP4 IN direction. Software can clear this bit by writing a one to it.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INT</name>
              <description>Frame interrupt. This bit is set to one every millisecond when the VbusDebounced bit and the DCON bit are set. This bit can be used by software when handling isochronous endpoints. Software can clear this bit by writing a one to it.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_INT</name>
              <description>Device status interrupt. This bit is set by HW when one of the bits in the Device Status Change register are set. Software can clear this bit by writing a one to it.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTEN</name>
          <description>USB interrupt enable register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC00003FF</resetMask>
          <fields>
            <field>
              <name>EP_INT_EN</name>
              <description>If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INT_EN</name>
              <description>If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_INT_EN</name>
              <description>If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSETSTAT</name>
          <description>USB set interrupt status register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC00003FF</resetMask>
          <fields>
            <field>
              <name>EP_SET_INT</name>
              <description>If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_SET_INT</name>
              <description>If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_SET_INT</name>
              <description>If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPTOGGLE</name>
          <description>USB Endpoint toggle register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>TOGGLE</name>
              <description>Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SCT0</name>
      <description>SCTimer/PWM (SCT)</description>
      <groupName>SCT</groupName>
      <baseAddress>0x40085000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x550</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SCT0</name>
        <value>12</value>
      </interrupt>
      <registers>
        <register>
          <name>CONFIG</name>
          <description>SCT configuration register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1E00</resetValue>
          <resetMask>0x61FFF</resetMask>
          <fields>
            <field>
              <name>UNIFY</name>
              <description>SCT operation</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DUAL_COUNTER</name>
                  <description>The SCT operates as two 16-bit counters named COUNTER_L and COUNTER_H.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNIFIED_COUNTER</name>
                  <description>The SCT operates as a unified 32-bit counter.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLKMODE</name>
              <description>SCT clock mode</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SYSTEM_CLOCK_MODE</name>
                  <description>System Clock Mode. The system clock clocks the entire SCT module including the counter(s) and counter prescalers.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SAMPLED_SYSTEM_CLOCK_MODE</name>
                  <description>Sampled System Clock Mode. The system clock clocks the SCT module, but the counter and prescalers are only enabled to count when the designated edge is detected on the input selected by the CKSEL field. The minimum pulse width on the selected clock-gate input is 1 bus clock period. This mode is the high-performance, sampled-clock mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SCT_INPUT_CLOCK_MODE</name>
                  <description>SCT Input Clock Mode. The input/edge selected by the CKSEL field clocks the SCT module, including the counters and prescalers, after first being synchronized to the system clock. The minimum pulse width on the clock input is 1 bus clock period. This mode is the low-power, sampled-clock mode.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ASYNCHRONOUS_MODE</name>
                  <description>Asynchronous Mode. The entire SCT module is clocked directly by the input/edge selected by the CKSEL field. In this mode, the SCT outputs are switched synchronously to the SCT input clock - not the system clock. The input clock rate must be at least half the system clock rate and can be the same or faster than the system clock.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CKSEL</name>
              <description>SCT clock select. The specific functionality of the designated input/edge is dependent on the CLKMODE bit selection in this register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INPUT_0_RISING_EDGES</name>
                  <description>Rising edges on input 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_0_FALLING_EDGE</name>
                  <description>Falling edges on input 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_1_RISING_EDGES</name>
                  <description>Rising edges on input 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_1_FALLING_EDGE</name>
                  <description>Falling edges on input 1.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_2_RISING_EDGES</name>
                  <description>Rising edges on input 2.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_2_FALLING_EDGE</name>
                  <description>Falling edges on input 2.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_3_RISING_EDGES</name>
                  <description>Rising edges on input 3.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_3_FALLING_EDGE</name>
                  <description>Falling edges on input 3.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_4_RISING_EDGES</name>
                  <description>Rising edges on input 4.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_4_FALLING_EDGE</name>
                  <description>Falling edges on input 4.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_5_RISING_EDGES</name>
                  <description>Rising edges on input 5.</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_5_FALLING_EDGE</name>
                  <description>Falling edges on input 5.</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_6_RISING_EDGES</name>
                  <description>Rising edges on input 6.</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_6_FALLING_EDGE</name>
                  <description>Falling edges on input 6.</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_7_RISING_EDGES</name>
                  <description>Rising edges on input 7.</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INPUT_7_FALLING_EDGE</name>
                  <description>Falling edges on input 7.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NORELOAD_L</name>
              <description>A 1 in this bit prevents the lower match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NORELOAD_H</name>
              <description>A 1 in this bit prevents the higher match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INSYNC</name>
              <description>Synchronization for input N (bit 9 = input 0, bit 10 = input 1,, bit 12 = input 3); all other bits are reserved. A 1 in one of these bits subjects the corresponding input to synchronization to the SCT clock, before it is used to create an event. If an input is known to already be synchronous to the SCT clock, this bit may be set to 0 for faster input response. (Note: The SCT clock is the system clock for CKMODEs 0-2. It is the selected, asynchronous SCT input clock for CKMODE3). Note that the INSYNC field only affects inputs used for event generation. It does not apply to the clock input specified in the CKSEL field.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOLIMIT_L</name>
              <description>A one in this bit causes a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOLIMIT_H</name>
              <description>A one in this bit will cause a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>SCT control register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40004</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>DOWN_L</name>
              <description>This bit is 1 when the L or unified counter is counting down. Hardware sets this bit when the counter is counting up, counter limit occurs, and BIDIR = 1.Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP_L</name>
              <description>When this bit is 1 and HALT is 0, the L or unified counter does not run, but I/O events related to the counter can occur. If a designated start event occurs, this bit is cleared and counting resumes.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HALT_L</name>
              <description>When this bit is 1, the L or unified counter does not run and no events can occur. A reset sets this bit. When the HALT_L bit is one, the STOP_L bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, only software can clear this bit to restore counter operation. This bit is set on reset.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLRCTR_L</name>
              <description>Writing a 1 to this bit clears the L or unified counter. This bit always reads as 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIDIR_L</name>
              <description>L or unified counter direction select</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UP</name>
                  <description>Up. The counter counts up to a limit condition, then is cleared to zero.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UP_DOWN</name>
                  <description>Up-down. The counter counts up to a limit, then counts down to a limit condition or to 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRE_L</name>
              <description>Specifies the factor by which the SCT clock is prescaled to produce the L or unified counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRE_L+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOWN_H</name>
              <description>This bit is 1 when the H counter is counting down. Hardware sets this bit when the counter is counting, a counter limit condition occurs, and BIDIR is 1. Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP_H</name>
              <description>When this bit is 1 and HALT is 0, the H counter does not, run but I/O events related to the counter can occur. If such an event matches the mask in the Start register, this bit is cleared and counting resumes.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HALT_H</name>
              <description>When this bit is 1, the H counter does not run and no events can occur. A reset sets this bit. When the HALT_H bit is one, the STOP_H bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, this bit can only be cleared by software to restore counter operation. This bit is set on reset.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLRCTR_H</name>
              <description>Writing a 1 to this bit clears the H counter. This bit always reads as 0.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIDIR_H</name>
              <description>Direction select</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UP</name>
                  <description>The H counter counts up to its limit condition, then is cleared to zero.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UP_DOWN</name>
                  <description>The H counter counts up to its limit, then counts down to a limit condition or to 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRE_H</name>
              <description>Specifies the factor by which the SCT clock is prescaled to produce the H counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRELH+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LIMIT</name>
          <description>SCT limit event select register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LIMMSK_L</name>
              <description>If bit n is one, event n is used as a counter limit for the L or unified counter (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LIMMSK_H</name>
              <description>If bit n is one, event n is used as a counter limit for the H counter (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HALT</name>
          <description>SCT halt event select register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HALTMSK_L</name>
              <description>If bit n is one, event n sets the HALT_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HALTMSK_H</name>
              <description>If bit n is one, event n sets the HALT_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STOP</name>
          <description>SCT stop event select register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>STOPMSK_L</name>
              <description>If bit n is one, event n sets the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOPMSK_H</name>
              <description>If bit n is one, event n sets the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>START</name>
          <description>SCT start event select register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>STARTMSK_L</name>
              <description>If bit n is one, event n clears the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTMSK_H</name>
              <description>If bit n is one, event n clears the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COUNT</name>
          <description>SCT counter register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CTR_L</name>
              <description>When UNIFY = 0, read or write the 16-bit L counter value. When UNIFY = 1, read or write the lower 16 bits of the 32-bit unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTR_H</name>
              <description>When UNIFY = 0, read or write the 16-bit H counter value. When UNIFY = 1, read or write the upper 16 bits of the 32-bit unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>SCT state register</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F001F</resetMask>
          <fields>
            <field>
              <name>STATE_L</name>
              <description>State variable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STATE_H</name>
              <description>State variable.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INPUT</name>
          <description>SCT input register</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AIN0</name>
              <description>Input 0 state. Input 0 state on the last SCT clock edge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN1</name>
              <description>Input 1 state. Input 1 state on the last SCT clock edge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN2</name>
              <description>Input 2 state. Input 2 state on the last SCT clock edge.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN3</name>
              <description>Input 3 state. Input 3 state on the last SCT clock edge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN4</name>
              <description>Input 4 state. Input 4 state on the last SCT clock edge.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN5</name>
              <description>Input 5 state. Input 5 state on the last SCT clock edge.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN6</name>
              <description>Input 6 state. Input 6 state on the last SCT clock edge.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN7</name>
              <description>Input 7 state. Input 7 state on the last SCT clock edge.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN8</name>
              <description>Input 8 state. Input 8 state on the last SCT clock edge.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN9</name>
              <description>Input 9 state. Input 9 state on the last SCT clock edge.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN10</name>
              <description>Input 10 state. Input 10 state on the last SCT clock edge.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN11</name>
              <description>Input 11 state. Input 11 state on the last SCT clock edge.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN12</name>
              <description>Input 12 state. Input 12 state on the last SCT clock edge.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN13</name>
              <description>Input 13 state. Input 13 state on the last SCT clock edge.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN14</name>
              <description>Input 14 state. Input 14 state on the last SCT clock edge.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AIN15</name>
              <description>Input 15 state. Input 15 state on the last SCT clock edge.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN0</name>
              <description>Input 0 state. Input 0 state following the synchronization specified by INSYNC.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN1</name>
              <description>Input 1 state. Input 1 state following the synchronization specified by INSYNC.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN2</name>
              <description>Input 2 state. Input 2 state following the synchronization specified by INSYNC.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN3</name>
              <description>Input 3 state. Input 3 state following the synchronization specified by INSYNC.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN4</name>
              <description>Input 4 state. Input 4 state following the synchronization specified by INSYNC.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN5</name>
              <description>Input 5 state. Input 5 state following the synchronization specified by INSYNC.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN6</name>
              <description>Input 6 state. Input 6 state following the synchronization specified by INSYNC.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN7</name>
              <description>Input 7 state. Input 7 state following the synchronization specified by INSYNC.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN8</name>
              <description>Input 8 state. Input 8 state following the synchronization specified by INSYNC.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN9</name>
              <description>Input 9 state. Input 9 state following the synchronization specified by INSYNC.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN10</name>
              <description>Input 10 state. Input 10 state following the synchronization specified by INSYNC.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN11</name>
              <description>Input 11 state. Input 11 state following the synchronization specified by INSYNC.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN12</name>
              <description>Input 12 state. Input 12 state following the synchronization specified by INSYNC.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN13</name>
              <description>Input 13 state. Input 13 state following the synchronization specified by INSYNC.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN14</name>
              <description>Input 14 state. Input 14 state following the synchronization specified by INSYNC.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SIN15</name>
              <description>Input 15 state. Input 15 state following the synchronization specified by INSYNC.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REGMODE</name>
          <description>SCT match/capture mode register</description>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REGMOD_L</name>
              <description>Each bit controls one match/capture register (register 0 = bit 0, register 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match register. 1 = register operates as capture register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REGMOD_H</name>
              <description>Each bit controls one match/capture register (register 0 = bit 16, register 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match registers. 1 = register operates as capture registers.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTPUT</name>
          <description>SCT output register</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>OUT</name>
              <description>Writing a 1 to bit n forces the corresponding output HIGH. Writing a 0 forces the corresponding output LOW (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTPUTDIRCTRL</name>
          <description>SCT output counter direction control register</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SETCLR0</name>
              <description>Set/clear operation on output 0. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR1</name>
              <description>Set/clear operation on output 1. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR2</name>
              <description>Set/clear operation on output 2. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR3</name>
              <description>Set/clear operation on output 3. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR4</name>
              <description>Set/clear operation on output 4. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR5</name>
              <description>Set/clear operation on output 5. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR6</name>
              <description>Set/clear operation on output 6. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR7</name>
              <description>Set/clear operation on output 7. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR8</name>
              <description>Set/clear operation on output 8. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR9</name>
              <description>Set/clear operation on output 9. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR10</name>
              <description>Set/clear operation on output 10. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR11</name>
              <description>Set/clear operation on output 11. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR12</name>
              <description>Set/clear operation on output 12. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR13</name>
              <description>Set/clear operation on output 13. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR14</name>
              <description>Set/clear operation on output 14. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETCLR15</name>
              <description>Set/clear operation on output 15. Value 0x3 is reserved. Do not program this value.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INDEPENDENT</name>
                  <description>Set and clear do not depend on the direction of any counter.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>L_REVERSED</name>
                  <description>Set and clear are reversed when counter L or the unified counter is counting down.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>H_REVERSED</name>
                  <description>Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RES</name>
          <description>SCT conflict resolution register</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>O0RES</name>
              <description>Effect of simultaneous set and clear on output 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR0 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR0 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O1RES</name>
              <description>Effect of simultaneous set and clear on output 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR1 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR1 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O2RES</name>
              <description>Effect of simultaneous set and clear on output 2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR2 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output n (or set based on the SETCLR2 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O3RES</name>
              <description>Effect of simultaneous set and clear on output 3.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR3 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR3 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O4RES</name>
              <description>Effect of simultaneous set and clear on output 4.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR4 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR4 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O5RES</name>
              <description>Effect of simultaneous set and clear on output 5.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR5 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR5 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O6RES</name>
              <description>Effect of simultaneous set and clear on output 6.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR6 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR6 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O7RES</name>
              <description>Effect of simultaneous set and clear on output 7.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR7 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output n (or set based on the SETCLR7 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O8RES</name>
              <description>Effect of simultaneous set and clear on output 8.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR8 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR8 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O9RES</name>
              <description>Effect of simultaneous set and clear on output 9.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR9 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR9 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O10RES</name>
              <description>Effect of simultaneous set and clear on output 10.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR10 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR10 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O11RES</name>
              <description>Effect of simultaneous set and clear on output 11.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR11 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR11 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O12RES</name>
              <description>Effect of simultaneous set and clear on output 12.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR12 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR12 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O13RES</name>
              <description>Effect of simultaneous set and clear on output 13.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR13 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR13 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O14RES</name>
              <description>Effect of simultaneous set and clear on output 14.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR14 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR14 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>O15RES</name>
              <description>Effect of simultaneous set and clear on output 15.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CHANGE</name>
                  <description>No change.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET</name>
                  <description>Set output (or clear based on the SETCLR15 field in the OUTPUTDIRCTRL register).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear output (or set based on the SETCLR15 field).</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE_OUTPUT</name>
                  <description>Toggle output.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAREQ0</name>
          <description>SCT DMA request 0 register</description>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC000FFFF</resetMask>
          <fields>
            <field>
              <name>DEV_0</name>
              <description>If bit n is one, event n triggers DMA request 0 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRL0</name>
              <description>A 1 in this bit triggers DMA request 0 when it loads the MATCH_L/Unified registers from the RELOAD_L/Unified registers.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRQ0</name>
              <description>This read-only bit indicates the state of DMA Request 0. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAREQ1</name>
          <description>SCT DMA request 1 register</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC000FFFF</resetMask>
          <fields>
            <field>
              <name>DEV_1</name>
              <description>If bit n is one, event n triggers DMA request 1 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRL1</name>
              <description>A 1 in this bit triggers DMA request 1 when it loads the Match L/Unified registers from the Reload L/Unified registers.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRQ1</name>
              <description>This read-only bit indicates the state of DMA Request 1. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVEN</name>
          <description>SCT event interrupt enable register</description>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>IEN</name>
              <description>The SCT requests an interrupt when bit n of this register and the event flag register are both one (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVFLAG</name>
          <description>SCT event flag register</description>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FLAG</name>
              <description>Bit n is one if event n has occurred since reset or a 1 was last written to this bit (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONEN</name>
          <description>SCT conflict interrupt enable register</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>NCEN</name>
              <description>The SCT requests an interrupt when bit n of this register and the SCT conflict flag register are both one (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFLAG</name>
          <description>SCT conflict flag register</description>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC000FFFF</resetMask>
          <fields>
            <field>
              <name>NCFLAG</name>
              <description>Bit n is one if a no-change conflict event occurred on output n since reset or a 1 was last written to this bit (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BUSERRL</name>
              <description>The most recent bus error from this SCT involved writing CTR L/Unified, STATE L/Unified, MATCH L/Unified, or the Output register when the L/U counter was not halted. A word write to certain L and H registers can be half successful and half unsuccessful.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BUSERRH</name>
              <description>The most recent bus error from this SCT involved writing CTR H, STATE H, MATCH H, or the Output register when the H counter was not halted.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP0</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH0</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP1</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH1</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP2</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH2</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP3</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH3</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP4</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH4</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP5</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH5</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP6</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH6</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP7</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH7</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP8</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH8</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP9</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH9</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP10</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH10</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP11</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH11</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP12</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH12</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP13</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH13</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP14</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH14</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP15</name>
          <description>SCT capture register of capture channel</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPn_L</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPn_H</name>
              <description>When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCH15</name>
          <description>SCT match value register of match channels</description>
          <alternateGroup>CAP_MATCH</alternateGroup>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MATCHn_L</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCHn_H</name>
              <description>When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL0</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL0</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL1</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL1</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL2</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL2</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL3</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL3</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL4</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL4</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL5</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL5</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL6</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL6</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL7</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x21C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL7</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x21C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL8</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x220</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL8</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x220</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL9</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x224</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL9</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x224</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL10</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x228</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL10</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x228</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL11</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x22C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL11</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x22C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL12</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x230</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL12</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x230</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL13</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x234</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL13</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x234</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL14</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x238</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL14</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x238</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPCTRL15</name>
          <description>SCT capture control register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x23C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAPCONn_L</name>
              <description>If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAPCONn_H</name>
              <description>If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MATCHREL15</name>
          <description>SCT match reload value register</description>
          <alternateGroup>CAPCTRL_MATCHREL</alternateGroup>
          <addressOffset>0x23C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOADn_L</name>
              <description>When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOADn_H</name>
              <description>When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <cluster>
          <dim>16</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>EV[%s]</name>
          <description>no description available</description>
          <addressOffset>0x300</addressOffset>
          <register>
            <name>EV_STATE</name>
            <description>SCT event state register 0</description>
            <addressOffset>0</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>STATEMSKn</name>
                <description>If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>16</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>EV_CTRL</name>
            <description>SCT event control register 0</description>
            <addressOffset>0x4</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x7FFFFF</resetMask>
            <fields>
              <field>
                <name>MATCHSEL</name>
                <description>Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>4</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>HEVENT</name>
                <description>Select L/H counter. Do not set this bit if UNIFY = 1.</description>
                <bitOffset>4</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>L_COUNTER</name>
                    <description>Selects the L state and the L match register selected by MATCHSEL.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>H_COUNTER</name>
                    <description>Selects the H state and the H match register selected by MATCHSEL.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>OUTSEL</name>
                <description>Input/output select</description>
                <bitOffset>5</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>INPUT</name>
                    <description>Selects the inputs selected by IOSEL.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>OUTPUT</name>
                    <description>Selects the outputs selected by IOSEL.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>IOSEL</name>
                <description>Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.</description>
                <bitOffset>6</bitOffset>
                <bitWidth>4</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>IOCOND</name>
                <description>Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .</description>
                <bitOffset>10</bitOffset>
                <bitWidth>2</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>LOW</name>
                    <description>LOW</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>RISE</name>
                    <description>Rise</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>FALL</name>
                    <description>Fall</description>
                    <value>0x2</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>HIGH</name>
                    <description>HIGH</description>
                    <value>0x3</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>COMBMODE</name>
                <description>Selects how the specified match and I/O condition are used and combined.</description>
                <bitOffset>12</bitOffset>
                <bitWidth>2</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>OR</name>
                    <description>OR. The event occurs when either the specified match or I/O condition occurs.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>MATCH</name>
                    <description>MATCH. Uses the specified match only.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>IO</name>
                    <description>IO. Uses the specified I/O condition only.</description>
                    <value>0x2</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>AND</name>
                    <description>AND. The event occurs when the specified match and I/O condition occur simultaneously.</description>
                    <value>0x3</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>STATELD</name>
                <description>This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.</description>
                <bitOffset>14</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>ADD</name>
                    <description>STATEV value is added into STATE (the carry-out is ignored).</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>LOAD</name>
                    <description>STATEV value is loaded into STATE.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>STATEV</name>
                <description>This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.</description>
                <bitOffset>15</bitOffset>
                <bitWidth>5</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>MATCHMEM</name>
                <description>If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.</description>
                <bitOffset>20</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>DIRECTION</name>
                <description>Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.</description>
                <bitOffset>21</bitOffset>
                <bitWidth>2</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DIRECTION_INDEPENDENT</name>
                    <description>Direction independent. This event is triggered regardless of the count direction.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>COUNTING_UP</name>
                    <description>Counting up. This event is triggered only during up-counting when BIDIR = 1.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>COUNTING_DOWN</name>
                    <description>Counting down. This event is triggered only during down-counting when BIDIR = 1.</description>
                    <value>0x2</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>10</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>OUT[%s]</name>
          <description>no description available</description>
          <addressOffset>0x500</addressOffset>
          <register>
            <name>OUT_SET</name>
            <description>SCT output 0 set register</description>
            <addressOffset>0</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>SET</name>
                <description>A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>16</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>OUT_CLR</name>
            <description>SCT output 0 clear register</description>
            <addressOffset>0x4</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>CLR</name>
                <description>A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>16</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLEXCOMM0</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <headerStructName>FLEXCOMM</headerStructName>
      <baseAddress>0x40086000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM0</name>
        <value>14</value>
      </interrupt>
      <registers>
        <register>
          <name>PSELID</name>
          <description>Peripheral Select and Flexcomm ID register.</description>
          <addressOffset>0xFF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x101000</resetValue>
          <resetMask>0xFFFFF0FF</resetMask>
          <fields>
            <field>
              <name>PERSEL</name>
              <description>Peripheral Select. This field is writable by software.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PERIPH_SELECTED</name>
                  <description>No peripheral selected.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USART</name>
                  <description>USART function selected.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI</name>
                  <description>SPI function selected.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C</name>
                  <description>I2C function selected.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_TRANSMIT</name>
                  <description>I2S transmit function selected.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_RECEIVE</name>
                  <description>I2S receive function selected.</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>Lock the peripheral select. This field is writable by software.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCKED</name>
                  <description>Peripheral select can be changed by software.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOCKED</name>
                  <description>Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USARTPRESENT</name>
              <description>USART present indicator. This field is Read-only.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PRESENT</name>
                  <description>This Flexcomm does not include the USART function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PRESENT</name>
                  <description>This Flexcomm includes the USART function.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPIPRESENT</name>
              <description>SPI present indicator. This field is Read-only.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PRESENT</name>
                  <description>This Flexcomm does not include the SPI function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PRESENT</name>
                  <description>This Flexcomm includes the SPI function.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2CPRESENT</name>
              <description>I2C present indicator. This field is Read-only.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PRESENT</name>
                  <description>This Flexcomm does not include the I2C function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PRESENT</name>
                  <description>This Flexcomm includes the I2C function.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2SPRESENT</name>
              <description>I 2S present indicator. This field is Read-only.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PRESENT</name>
                  <description>This Flexcomm does not include the I2S function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PRESENT</name>
                  <description>This Flexcomm includes the I2S function.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ID</name>
              <description>Flexcomm ID.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PID</name>
          <description>Peripheral identification register.</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APERTURE</name>
              <description>size aperture for the register port on the bus (APB or AHB).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MINOR_REV</name>
              <description>Minor revision of module implementation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR_REV</name>
              <description>Major revision of module implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>Module identifier for the selected function.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM1</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x40087000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM1</name>
        <value>15</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM2</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x40088000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM2</name>
        <value>16</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM3</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x40089000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM3</name>
        <value>17</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM4</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x4008A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM4</name>
        <value>18</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM5</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x40096000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM5</name>
        <value>19</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM6</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x40097000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM6</name>
        <value>20</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM7</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x40098000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM7</name>
        <value>21</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="FLEXCOMM0">
      <name>FLEXCOMM8</name>
      <description>Flexcomm serial communication</description>
      <groupName>FLEXCOMM</groupName>
      <baseAddress>0x4009F000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM8</name>
        <value>59</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>I2C0</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM0</alternatePeripheral>
      <groupName>I2C</groupName>
      <headerStructName>I2C</headerStructName>
      <baseAddress>0x40086000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM0</name>
        <value>14</value>
      </interrupt>
      <registers>
        <register>
          <name>CFG</name>
          <description>Configuration for shared functions.</description>
          <addressOffset>0x800</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>MSTEN</name>
              <description>Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The I2C Master function is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The I2C Master function is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVEN</name>
              <description>Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The I2C slave function is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The I2C slave function is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONEN</name>
              <description>Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The I2C Monitor function is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The I2C Monitor function is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMEOUTEN</name>
              <description>I2C bus Time-out Enable. When disabled, the time-out function is internally reset.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Time-out function is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONCLKSTR</name>
              <description>Monitor function Clock Stretching.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSCAPABLE</name>
              <description>High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FAST_MODE_PLUS</name>
                  <description>Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin,</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH_SPEED</name>
                  <description>High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>STAT</name>
          <description>Status register for Master, Slave, and Monitor functions.</description>
          <addressOffset>0x804</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x801</resetValue>
          <resetMask>0x30FFF5F</resetMask>
          <fields>
            <field>
              <name>MSTPENDING</name>
              <description>Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IN_PROGRESS</name>
                  <description>In progress. Communication is in progress and the Master function is busy and cannot currently accept a command.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTSTATE</name>
              <description>Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>Idle. The Master function is available to be used for a new transaction.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RECEIVE_READY</name>
                  <description>Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRANSMIT_READY</name>
                  <description>Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NACK_ADDRESS</name>
                  <description>NACK Address. Slave NACKed address.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NACK_DATA</name>
                  <description>NACK Data. Slave NACKed transmitted data.</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTARBLOSS</name>
              <description>Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_LOSS</name>
                  <description>No Arbitration Loss has occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ARBITRATION_LOSS</name>
                  <description>Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTSTSTPERR</name>
              <description>Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>No Start/Stop Error has occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVPENDING</name>
              <description>Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IN_PROGRESS</name>
                  <description>In progress. The Slave function does not currently need service.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVSTATE</name>
              <description>Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SLAVE_ADDRESS</name>
                  <description>Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLAVE_RECEIVE</name>
                  <description>Slave receive. Received data is available (Slave Receiver mode).</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLAVE_TRANSMIT</name>
                  <description>Slave transmit. Data can be transmitted (Slave Transmitter mode).</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVNOTSTR</name>
              <description>Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STRETCHING</name>
                  <description>Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NOT_STRETCHING</name>
                  <description>Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVIDX</name>
              <description>Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADDRESS0</name>
                  <description>Address 0. Slave address 0 was matched.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADDRESS1</name>
                  <description>Address 1. Slave address 1 was matched.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADDRESS2</name>
                  <description>Address 2. Slave address 2 was matched.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADDRESS3</name>
                  <description>Address 3. Slave address 3 was matched.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVSEL</name>
              <description>Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_SELECTED</name>
                  <description>Not selected. The Slave function is not currently selected.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SELECTED</name>
                  <description>Selected. The Slave function is currently selected.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVDESEL</name>
              <description>Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_DESELECTED</name>
                  <description>Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DESELECTED</name>
                  <description>Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONRDY</name>
              <description>Monitor Ready. This flag is cleared when the MONRXDAT register is read.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_DATA</name>
                  <description>No data. The Monitor function does not currently have data available.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA_WAITING</name>
                  <description>Data waiting. The Monitor function has data waiting to be read.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONOV</name>
              <description>Monitor Overflow flag.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_OVERRUN</name>
                  <description>No overrun. Monitor data has not overrun.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OVERRUN</name>
                  <description>Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONACTIVE</name>
              <description>Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE</name>
                  <description>Inactive. The Monitor function considers the I2C bus to be inactive.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>Active. The Monitor function considers the I2C bus to be active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONIDLE</name>
              <description>Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_IDLE</name>
                  <description>Not idle. The I2C bus is not idle, or this flag has been cleared by software.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EVENTTIMEOUT</name>
              <description>Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_TIMEOUT</name>
                  <description>No time-out. I2C bus events have not caused a time-out.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVEN_TIMEOUT</name>
                  <description>Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLTIMEOUT</name>
              <description>SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_TIMEOUT</name>
                  <description>No time-out. SCL low time has not caused a time-out.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TIMEOUT</name>
                  <description>Time-out. SCL low time has caused a time-out.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENSET</name>
          <description>Interrupt Enable Set and read register.</description>
          <addressOffset>0x808</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x30B8951</resetMask>
          <fields>
            <field>
              <name>MSTPENDINGEN</name>
              <description>Master Pending interrupt Enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The MstPending interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The MstPending interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTARBLOSSEN</name>
              <description>Master Arbitration Loss interrupt Enable.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The MstArbLoss interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The MstArbLoss interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTSTSTPERREN</name>
              <description>Master Start/Stop Error interrupt Enable.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The MstStStpErr interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The MstStStpErr interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVPENDINGEN</name>
              <description>Slave Pending interrupt Enable.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The SlvPending interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The SlvPending interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVNOTSTREN</name>
              <description>Slave Not Stretching interrupt Enable.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The SlvNotStr interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The SlvNotStr interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVDESELEN</name>
              <description>Slave Deselect interrupt Enable.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The SlvDeSel interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The SlvDeSel interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONRDYEN</name>
              <description>Monitor data Ready interrupt Enable.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The MonRdy interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The MonRdy interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONOVEN</name>
              <description>Monitor Overrun interrupt Enable.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The MonOv interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The MonOv interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONIDLEEN</name>
              <description>Monitor Idle interrupt Enable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The MonIdle interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The MonIdle interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EVENTTIMEOUTEN</name>
              <description>Event time-out interrupt Enable.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The Event time-out interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The Event time-out interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLTIMEOUTEN</name>
              <description>SCL time-out interrupt Enable.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The SCL time-out interrupt is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The SCL time-out interrupt is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENCLR</name>
          <description>Interrupt Enable Clear register.</description>
          <addressOffset>0x80C</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>MSTPENDINGCLR</name>
              <description>Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MSTARBLOSSCLR</name>
              <description>Master Arbitration Loss interrupt clear.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MSTSTSTPERRCLR</name>
              <description>Master Start/Stop Error interrupt clear.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLVPENDINGCLR</name>
              <description>Slave Pending interrupt clear.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLVNOTSTRCLR</name>
              <description>Slave Not Stretching interrupt clear.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLVDESELCLR</name>
              <description>Slave Deselect interrupt clear.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MONRDYCLR</name>
              <description>Monitor data Ready interrupt clear.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MONOVCLR</name>
              <description>Monitor Overrun interrupt clear.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MONIDLECLR</name>
              <description>Monitor Idle interrupt clear.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EVENTTIMEOUTCLR</name>
              <description>Event time-out interrupt clear.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SCLTIMEOUTCLR</name>
              <description>SCL time-out interrupt clear.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMEOUT</name>
          <description>Time-out value register.</description>
          <addressOffset>0x810</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>TOMIN</name>
              <description>Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TO</name>
              <description>Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKDIV</name>
          <description>Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.</description>
          <addressOffset>0x814</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIVVAL</name>
              <description>This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>Interrupt Status register for Master, Slave, and Monitor functions.</description>
          <addressOffset>0x818</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x801</resetValue>
          <resetMask>0x30B8951</resetMask>
          <fields>
            <field>
              <name>MSTPENDING</name>
              <description>Master Pending.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MSTARBLOSS</name>
              <description>Master Arbitration Loss flag.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MSTSTSTPERR</name>
              <description>Master Start/Stop Error flag.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLVPENDING</name>
              <description>Slave Pending.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLVNOTSTR</name>
              <description>Slave Not Stretching status.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLVDESEL</name>
              <description>Slave Deselected flag.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MONRDY</name>
              <description>Monitor Ready.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MONOV</name>
              <description>Monitor Overflow flag.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MONIDLE</name>
              <description>Monitor Idle flag.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EVENTTIMEOUT</name>
              <description>Event time-out Interrupt flag.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCLTIMEOUT</name>
              <description>SCL time-out Interrupt flag.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MSTCTL</name>
          <description>Master control register.</description>
          <addressOffset>0x820</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xE</resetMask>
          <fields>
            <field>
              <name>MSTCONTINUE</name>
              <description>Master Continue. This bit is write-only.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE</name>
                  <description>Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTSTART</name>
              <description>Master Start control. This bit is write-only.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START</name>
                  <description>Start. A Start will be generated on the I2C bus at the next allowed time.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTSTOP</name>
              <description>Master Stop control. This bit is write-only.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTDMA</name>
              <description>Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disable. No DMA requests are generated for master operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MSTTIME</name>
          <description>Master timing configuration.</description>
          <addressOffset>0x824</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x77</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>MSTSCLLOW</name>
              <description>Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLOCKS_2</name>
                  <description>2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_3</name>
                  <description>3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_4</name>
                  <description>4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_5</name>
                  <description>5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_6</name>
                  <description>6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_7</name>
                  <description>7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_8</name>
                  <description>8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_9</name>
                  <description>9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTSCLHIGH</name>
              <description>Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLOCKS_2</name>
                  <description>2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_3</name>
                  <description>3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider .</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_4</name>
                  <description>4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_5</name>
                  <description>5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_6</name>
                  <description>6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_7</name>
                  <description>7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_8</name>
                  <description>8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOCKS_9</name>
                  <description>9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MSTDAT</name>
          <description>Combined Master receiver and transmitter data register.</description>
          <addressOffset>0x828</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLVCTL</name>
          <description>Slave control register.</description>
          <addressOffset>0x840</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x30B</resetMask>
          <fields>
            <field>
              <name>SLVCONTINUE</name>
              <description>Slave Continue.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE</name>
                  <description>Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVNACK</name>
              <description>Slave NACK.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NACK</name>
                  <description>NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVDMA</name>
              <description>Slave DMA enable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. No DMA requests are issued for Slave mode operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. DMA requests are issued for I2C slave data transmission and reception.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTOACK</name>
              <description>Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AUTOMATIC_ACK</name>
                  <description>A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTOMATCHREAD</name>
              <description>When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>I2C_WRITE</name>
                  <description>The expected next operation in Automatic Mode is an I2C write.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_READ</name>
                  <description>The expected next operation in Automatic Mode is an I2C read.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SLVDAT</name>
          <description>Combined Slave receiver and transmitter data register.</description>
          <addressOffset>0x844</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLVADR0</name>
          <description>Slave address register.</description>
          <addressOffset>0x848</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SADISABLE</name>
              <description>Slave Address n Disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Slave Address n is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Ignored Slave Address n is ignored.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVADR</name>
              <description>Slave Address. Seven bit slave address that is compared to received addresses if enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTONACK</name>
              <description>Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal operation, matching I2C addresses are not ignored.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AUTOMATIC</name>
                  <description>Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SLVADR1</name>
          <description>Slave address register.</description>
          <addressOffset>0x84C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SADISABLE</name>
              <description>Slave Address n Disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Slave Address n is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Ignored Slave Address n is ignored.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVADR</name>
              <description>Slave Address. Seven bit slave address that is compared to received addresses if enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLVADR2</name>
          <description>Slave address register.</description>
          <addressOffset>0x850</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SADISABLE</name>
              <description>Slave Address n Disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Slave Address n is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Ignored Slave Address n is ignored.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVADR</name>
              <description>Slave Address. Seven bit slave address that is compared to received addresses if enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLVADR3</name>
          <description>Slave address register.</description>
          <addressOffset>0x854</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SADISABLE</name>
              <description>Slave Address n Disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Slave Address n is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Ignored Slave Address n is ignored.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVADR</name>
              <description>Slave Address. Seven bit slave address that is compared to received addresses if enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLVQUAL0</name>
          <description>Slave Qualification for address 0.</description>
          <addressOffset>0x858</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>QUALMODE0</name>
              <description>Qualify mode for slave address 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Mask. The SLVQUAL0 field is used as a logical mask for matching address 0.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTEND</name>
                  <description>Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVQUAL0</name>
              <description>Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1]).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MONRXDAT</name>
          <description>Monitor receiver data register.</description>
          <addressOffset>0x880</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>MONRXDAT</name>
              <description>Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MONSTART</name>
              <description>Monitor Received Start.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_START_DETECTED</name>
                  <description>No start detected. The Monitor function has not detected a Start event on the I2C bus.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DETECTED</name>
                  <description>Start detected. The Monitor function has detected a Start event on the I2C bus.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONRESTART</name>
              <description>Monitor Received Repeated Start.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_DETECTED</name>
                  <description>No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DETECTED</name>
                  <description>Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONNACK</name>
              <description>Monitor Received NACK.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ACKNOWLEDGED</name>
                  <description>Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NOT_ACKNOWLEDGED</name>
                  <description>Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ID</name>
          <description>Peripheral identification register.</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APERTURE</name>
              <description>Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MINOR_REV</name>
              <description>Minor revision of module implementation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR_REV</name>
              <description>Major revision of module implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>Module identifier for the selected function.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C1</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM1</alternatePeripheral>
      <groupName>I2C</groupName>
      <baseAddress>0x40087000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM1</name>
        <value>15</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C2</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM2</alternatePeripheral>
      <groupName>I2C</groupName>
      <baseAddress>0x40088000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM2</name>
        <value>16</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C3</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM3</alternatePeripheral>
      <groupName>I2C</groupName>
      <baseAddress>0x40089000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM3</name>
        <value>17</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C4</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM4</alternatePeripheral>
      <groupName>I2C</groupName>
      <baseAddress>0x4008A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM4</name>
        <value>18</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C5</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM5</alternatePeripheral>
      <groupName>I2C</groupName>
      <baseAddress>0x40096000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM5</name>
        <value>19</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C6</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM6</alternatePeripheral>
      <groupName>I2C</groupName>
      <baseAddress>0x40097000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM6</name>
        <value>20</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C7</name>
      <description>I2C-bus interfaces</description>
      <alternatePeripheral>FLEXCOMM7</alternatePeripheral>
      <groupName>I2C</groupName>
      <baseAddress>0x40098000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM7</name>
        <value>21</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>I2S0</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM0</alternatePeripheral>
      <groupName>I2S</groupName>
      <headerStructName>I2S</headerStructName>
      <baseAddress>0x40086000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM0</name>
        <value>14</value>
      </interrupt>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>0x20</dimIncrement>
          <name>SECCHANNEL[%s]</name>
          <description>no description available</description>
          <addressOffset>0</addressOffset>
          <register>
            <name>PCFG1</name>
            <description>Configuration register 1 for channel pair</description>
            <addressOffset>0xC20</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x401</resetMask>
            <fields>
              <field>
                <name>PAIRENABLE</name>
                <description>Enable for this channel pair.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DISABLE</name>
                    <description>This I2S channel pair is disabled.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>ENABLE</name>
                    <description>This I2S channel pair is enabled.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ONECHANNEL</name>
                <description>Single channel mode.</description>
                <bitOffset>10</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>STEREO</name>
                    <description>I2S data for this channel pair is treated as left and right channels.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>SINGLE</name>
                    <description>I2S data for this channel pair is treated as a single channel, functionally the left channel for this pair.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>PCFG2</name>
            <description>Configuration register 2 for channel pair</description>
            <addressOffset>0xC24</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x1FF0000</resetMask>
            <fields>
              <field>
                <name>POSITION</name>
                <description>Data Position.</description>
                <bitOffset>16</bitOffset>
                <bitWidth>9</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>PSTAT</name>
            <description>Status register for channel pair</description>
            <addressOffset>0xC28</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0xF</resetMask>
            <fields>
              <field>
                <name>BUSY</name>
                <description>Busy status for this channel pair.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>IDLE</name>
                    <description>The transmitter/receiver for this channel pair is currently idle.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>PROCESSING</name>
                    <description>The transmitter/receiver for this channel pair is currently processing data.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SLVFRMERR</name>
                <description>Save Frame Error flag.</description>
                <bitOffset>1</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>LR</name>
                <description>Left/Right indication.</description>
                <bitOffset>2</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
              </field>
              <field>
                <name>DATAPAUSED</name>
                <description>Data Paused status flag.</description>
                <bitOffset>3</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>PAUSE</name>
                    <description>Data is not currently paused.</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>FORCE</name>
                    <description>A data pause has been requested and is now in force.</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>CFG1</name>
          <description>Configuration register 1 for the primary channel pair.</description>
          <addressOffset>0xC00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F3FFF</resetMask>
          <fields>
            <field>
              <name>MAINENABLE</name>
              <description>Main enable for I 2S function in this Flexcomm</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>All I 2S channel pairs in this Flexcomm are disabled and the internal state machines, counters, and flags are reset. No other channel pairs can be enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>This I 2S channel pair is enabled. Other channel pairs in this Flexcomm may be enabled in their individual PAIRENABLE bits.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATAPAUSE</name>
              <description>Data flow Pause. Allows pausing data flow between the I2S serializer/deserializer and the FIFO. This could be done in order to change streams, or while restarting after a data underflow or overflow. When paused, FIFO operations can be done without corrupting data that is in the process of being sent or received. Once a data pause has been requested, the interface may need to complete sending data that was in progress before interrupting the flow of data. Software must check that the pause is actually in effect before taking action. This is done by monitoring the DATAPAUSED flag in the STAT register. When DATAPAUSE is cleared, data transfer will resume at the beginning of the next frame.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal operation, or resuming normal operation at the next frame if the I2S has already been paused.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAUSE</name>
                  <description>A pause in the data flow is being requested. It is in effect when DATAPAUSED in STAT = 1.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PAIRCOUNT</name>
              <description>Provides the number of I2S channel pairs in this Flexcomm This is a read-only field whose value may be different in other Flexcomms. 00 = there is 1 I2S channel pair in this Flexcomm. 01 = there are 2 I2S channel pairs in this Flexcomm. 10 = there are 3 I2S channel pairs in this Flexcomm. 11 = there are 4 I2S channel pairs in this Flexcomm.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PAIRS_1</name>
                  <description>1 I2S channel pairs in this flexcomm</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAIRS_2</name>
                  <description>2 I2S channel pairs in this flexcomm</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAIRS_3</name>
                  <description>3 I2S channel pairs in this flexcomm</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAIRS_4</name>
                  <description>4 I2S channel pairs in this flexcomm</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTSLVCFG</name>
              <description>Master / slave configuration selection, determining how SCK and WS are used by all channel pairs in this Flexcomm.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL_SLAVE_MODE</name>
                  <description>Normal slave mode, the default mode. SCK and WS are received from a master and used to transmit or receive data.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WS_SYNC_MASTER</name>
                  <description>WS synchronized master. WS is received from another master and used to synchronize the generation of SCK, when divided from the Flexcomm function clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASTER_USING_SCK</name>
                  <description>Master using an existing SCK. SCK is received and used directly to generate WS, as well as transmitting or receiving data.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NORMAL_MASTER</name>
                  <description>Normal master mode. SCK and WS are generated so they can be sent to one or more slave devices.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Selects the basic I2S operating mode. Other configurations modify this to obtain all supported cases. See Formats and modes for examples.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLASSIC_MODE</name>
                  <description>I2S mode a.k.a. 'classic' mode. WS has a 50% duty cycle, with (for each enabled channel pair) one piece of left channel data occurring during the first phase, and one pieces of right channel data occurring during the second phase. In this mode, the data region begins one clock after the leading WS edge for the frame. For a 50% WS duty cycle, FRAMELEN must define an even number of I2S clocks for the frame. If FRAMELEN defines an odd number of clocks per frame, the extra clock will occur on the right.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DSP_MODE_WS_50_DUTYCYCLE</name>
                  <description>DSP mode where WS has a 50% duty cycle. See remark for mode 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DSP_MODE_WS_1_CLOCK</name>
                  <description>DSP mode where WS has a one clock long pulse at the beginning of each data frame.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DSP_MODE_WS_1_DATA</name>
                  <description>DSP mode where WS has a one data slot long pulse at the beginning of each data frame.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHTLOW</name>
              <description>Right channel data is in the Low portion of FIFO data. Essentially, this swaps left and right channel data as it is transferred to or from the FIFO. This bit is not used if the data width is greater than 24 bits or if PDMDATA = 1. Note that if the ONECHANNEL field (bit 10 of this register) = 1, the one channel to be used is the nominally the left channel. POSITION can still place that data in the frame where right channel data is normally located. if all enabled channel pairs have ONECHANNEL = 1, then RIGHTLOW = 1 is not allowed.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RIGHT_HIGH</name>
                  <description>The right channel is taken from the high part of the FIFO data. For example, when data is 16 bits, FIFO bits 31:16 are used for the right channel.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RIGHT_LOW</name>
                  <description>The right channel is taken from the low part of the FIFO data. For example, when data is 16 bits, FIFO bits 15:0 are used for the right channel.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFTJUST</name>
              <description>Left Justify data.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RIGHT_JUSTIFIED</name>
                  <description>Data is transferred between the FIFO and the I2S serializer/deserializer right justified, i.e. starting from bit 0 and continuing to the position defined by DATALEN. This would correspond to right justified data in the stream on the data bus.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LEFT_JUSTIFIED</name>
                  <description>Data is transferred between the FIFO and the I2S serializer/deserializer left justified, i.e. starting from the MSB of the FIFO entry and continuing for the number of bits defined by DATALEN. This would correspond to left justified data in the stream on the data bus.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ONECHANNEL</name>
              <description>Single channel mode. Applies to both transmit and receive. This configuration bit applies only to the first I2S channel pair. Other channel pairs may select this mode independently in their separate CFG1 registers.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DUAL_CHANNEL</name>
                  <description>I2S data for this channel pair is treated as left and right channels.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_CHANNEL</name>
                  <description>I2S data for this channel pair is treated as a single channel, functionally the left channel for this pair. In mode 0 only, the right side of the frame begins at POSITION = 0x100. This is because mode 0 makes a clear distinction between the left and right sides of the frame. When ONECHANNEL = 1, the single channel of data may be placed on the right by setting POSITION to 0x100 + the data position within the right side (e.g. 0x108 would place data starting at the 8th clock after the middle of the frame). In other modes, data for the single channel of data is placed at the clock defined by POSITION.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCK_POL</name>
              <description>SCK polarity.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FALLING_EDGE</name>
                  <description>Data is launched on SCK falling edges and sampled on SCK rising edges (standard for I2S).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RISING_EDGE</name>
                  <description>Data is launched on SCK rising edges and sampled on SCK falling edges.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WS_POL</name>
              <description>WS polarity.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_INVERTED</name>
                  <description>Data frames begin at a falling edge of WS (standard for classic I2S).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INVERTED</name>
                  <description>WS is inverted, resulting in a data frame beginning at a rising edge of WS (standard for most 'non-classic' variations of I2S).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATALEN</name>
              <description>Data Length, minus 1 encoded, defines the number of data bits to be transmitted or received for all I2S channel pairs in this Flexcomm. Note that data is only driven to or received from SDA for the number of bits defined by DATALEN. DATALEN is also used in these ways by the I2S: Determines the size of data transfers between the FIFO and the I2S serializer/deserializer. See FIFO buffer configurations and usage In mode 1, 2, and 3, determines the location of right data following left data in the frame. In mode 3 (where WS has a one data slot long pulse at the beginning of each data frame) determines the duration of the WS pulse. Values: 0x00 to 0x02 = not supported 0x03 = data is 4 bits in length 0x04 = data is 5 bits in length 0x1F = data is 32 bits in length</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFG2</name>
          <description>Configuration register 2 for the primary channel pair.</description>
          <addressOffset>0xC04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FF01FF</resetMask>
          <fields>
            <field>
              <name>FRAMELEN</name>
              <description>Frame Length, minus 1 encoded, defines the number of clocks and data bits in the frames that this channel pair participates in. See Frame format. 0x000 to 0x002 = not supported 0x003 = frame is 4 bits in total length 0x004 = frame is 5 bits in total length 0x7FF = frame is 2048 bits in total length if FRAMELEN is an defines an odd length frame (e.g. 33 clocks) in mode 0 or 1, the extra clock appears in the right half. When MODE = 3, FRAMELEN must be larger than DATALEN in order for the WS pulse to be generated correctly.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POSITION</name>
              <description>Data Position. Defines the location within the frame of the data for this channel pair. POSITION + DATALEN must be less than FRAMELEN. See Frame format. When MODE = 0, POSITION defines the location of data in both the left phase and right phase, starting one clock after the WS edge. In other modes, POSITION defines the location of data within the entire frame. ONECHANNEL = 1 while MODE = 0 is a special case, see the description of ONECHANNEL. The combination of DATALEN and the POSITION fields of all channel pairs must be made such that the channels do not overlap within the frame. 0x000 = data begins at bit position 0 (the first bit position) within the frame or WS phase. 0x001 = data begins at bit position 1 within the frame or WS phase. 0x002 = data begins at bit position 2 within the frame or WS phase.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STAT</name>
          <description>Status register for the primary channel pair.</description>
          <addressOffset>0xC08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xD</resetMask>
          <fields>
            <field>
              <name>BUSY</name>
              <description>Busy status for the primary channel pair. Other BUSY flags may be found in the STAT register for each channel pair.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>The transmitter/receiver for channel pair is currently idle.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BUSY</name>
                  <description>The transmitter/receiver for channel pair is currently processing data.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLVFRMERR</name>
              <description>Slave Frame Error flag. This applies when at least one channel pair is operating as a slave. An error indicates that the incoming WS signal did not transition as expected due to a mismatch between FRAMELEN and the actual incoming I2S stream.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>No error has been recorded.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>An error has been recorded for some channel pair that is operating in slave mode. ERROR is cleared by writing a 1 to this bit position.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LR</name>
              <description>Left/Right indication. This flag is considered to be a debugging aid and is not expected to be used by an I2S driver. Valid when one channel pair is busy. Indicates left or right data being processed for the currently busy channel pair.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LEFT_CHANNEL</name>
                  <description>Left channel.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RIGHT_CHANNEL</name>
                  <description>Right channel.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATAPAUSED</name>
              <description>Data Paused status flag. Applies to all I2S channels</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PAUSED</name>
                  <description>Data is not currently paused. A data pause may have been requested but is not yet in force, waiting for an allowed pause point. Refer to the description of the DATAPAUSE control bit in the CFG1 register.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAUSED</name>
                  <description>A data pause has been requested and is now in force.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DIV</name>
          <description>Clock divider, used by all channel pairs.</description>
          <addressOffset>0xC1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>DIV</name>
              <description>This field controls how this I2S block uses the Flexcomm function clock. 0x000 = The Flexcomm function clock is used directly. 0x001 = The Flexcomm function clock is divided by 2. 0x002 = The Flexcomm function clock is divided by 3. 0xFFF = The Flexcomm function clock is divided by 4,096.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOCFG</name>
          <description>FIFO configuration and enable register.</description>
          <addressOffset>0xE00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7F033</resetMask>
          <fields>
            <field>
              <name>ENABLETX</name>
              <description>Enable the transmit FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>The transmit FIFO is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>The transmit FIFO is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLERX</name>
              <description>Enable the receive FIFO.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>The receive FIFO is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>The receive FIFO is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXI2SE0</name>
              <description>Transmit I2S empty 0. Determines the value sent by the I2S in transmit mode if the TX FIFO becomes empty. This value is sent repeatedly until the I2S is paused, the error is cleared, new data is provided, and the I2S is un-paused.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LAST_VALUE</name>
                  <description>If the TX FIFO becomes empty, the last value is sent. This setting may be used when the data length is 24 bits or less, or when MONO = 1 for this channel pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ZERO</name>
                  <description>If the TX FIFO becomes empty, 0 is sent. Use if the data length is greater than 24 bits or if zero fill is preferred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PACK48</name>
              <description>Packing format for 48-bit data. This relates to how data is entered into or taken from the FIFO by software or DMA.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BIT_24</name>
                  <description>48-bit I2S FIFO entries are handled as all 24-bit values.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIT_32_16</name>
                  <description>48-bit I2S FIFO entries are handled as alternating 32-bit and 16-bit values.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIZE</name>
              <description>FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMATX</name>
              <description>DMA configuration for transmit.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>DMA is not used for the transmit function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMARX</name>
              <description>DMA configuration for receive.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>DMA is not used for the receive function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKETX</name>
              <description>Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only enabled interrupts will wake up the device form reduced power modes.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKERX</name>
              <description>Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only enabled interrupts will wake up the device form reduced power modes.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMPTYTX</name>
              <description>Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EMPTYRX</name>
              <description>Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOSTAT</name>
          <description>FIFO status register.</description>
          <addressOffset>0xE04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x30</resetValue>
          <resetMask>0x1F1FFB</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERINT</name>
              <description>Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEMPTY</name>
              <description>Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXNOTFULL</name>
              <description>Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNOTEMPTY</name>
              <description>Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFULL</name>
              <description>Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOTRIG</name>
          <description>FIFO trigger settings for interrupt and DMA request.</description>
          <addressOffset>0xE08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF0F03</resetMask>
          <fields>
            <field>
              <name>TXLVLENA</name>
              <description>Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Transmit FIFO level does not generate a FIFO level trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXLVLENA</name>
              <description>Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Receive FIFO level does not generate a FIFO level trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTENSET</name>
          <description>FIFO interrupt enable set (enable) and read register.</description>
          <addressOffset>0xE10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated for a transmit error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An interrupt will be generated when a transmit error occurs.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXERR</name>
              <description>Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated for a receive error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An interrupt will be generated when a receive error occurs.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated based on the TX FIFO level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated based on the RX FIFO level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTENCLR</name>
          <description>FIFO interrupt enable clear (disable) and read register.</description>
          <addressOffset>0xE14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTSTAT</name>
          <description>FIFO interrupt status register.</description>
          <addressOffset>0xE18</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>TX FIFO error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>RX FIFO error.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO level interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO level interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERINT</name>
              <description>Peripheral interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOWR</name>
          <description>FIFO write data.</description>
          <addressOffset>0xE20</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TXDATA</name>
              <description>Transmit data to the FIFO. The number of bits used depends on configuration details.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOWR48H</name>
          <description>FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.</description>
          <addressOffset>0xE24</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TXDATA</name>
              <description>Transmit data to the FIFO. Whether this register is used and the number of bits used depends on configuration details.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORD</name>
          <description>FIFO read data.</description>
          <addressOffset>0xE30</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO. The number of bits used depends on configuration details.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORD48H</name>
          <description>FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.</description>
          <addressOffset>0xE34</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORDNOPOP</name>
          <description>FIFO data read with no FIFO pop.</description>
          <addressOffset>0xE40</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORD48HNOPOP</name>
          <description>FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.</description>
          <addressOffset>0xE44</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOSIZE</name>
          <description>FIFO size register</description>
          <addressOffset>0xE48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x8</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIFOSIZE</name>
              <description>Provides the size of the FIFO for software. The size of the SPI FIFO is 8 entries.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID</name>
          <description>I2S Module identification</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xE0900000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APERTURE</name>
              <description>Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MINOR_REV</name>
              <description>Minor revision of module implementation, starting at 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR_REV</name>
              <description>Major revision of module implementation, starting at 0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>Unique module identifier for this IP block.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2S0">
      <name>I2S1</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM1</alternatePeripheral>
      <groupName>I2S</groupName>
      <baseAddress>0x40087000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM1</name>
        <value>15</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2S0">
      <name>I2S2</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM2</alternatePeripheral>
      <groupName>I2S</groupName>
      <baseAddress>0x40088000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM2</name>
        <value>16</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2S0">
      <name>I2S3</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM3</alternatePeripheral>
      <groupName>I2S</groupName>
      <baseAddress>0x40089000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM3</name>
        <value>17</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2S0">
      <name>I2S4</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM4</alternatePeripheral>
      <groupName>I2S</groupName>
      <baseAddress>0x4008A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM4</name>
        <value>18</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2S0">
      <name>I2S5</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM5</alternatePeripheral>
      <groupName>I2S</groupName>
      <baseAddress>0x40096000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM5</name>
        <value>19</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2S0">
      <name>I2S6</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM6</alternatePeripheral>
      <groupName>I2S</groupName>
      <baseAddress>0x40097000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM6</name>
        <value>20</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2S0">
      <name>I2S7</name>
      <description>I2S interface</description>
      <alternatePeripheral>FLEXCOMM7</alternatePeripheral>
      <groupName>I2S</groupName>
      <baseAddress>0x40098000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM7</name>
        <value>21</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>SPI0</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM0</alternatePeripheral>
      <groupName>SPI</groupName>
      <headerStructName>SPI</headerStructName>
      <baseAddress>0x40086000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM0</name>
        <value>14</value>
      </interrupt>
      <registers>
        <register>
          <name>CFG</name>
          <description>SPI Configuration register</description>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFBD</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>SPI enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The SPI is disabled and the internal state machine and counters are reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The SPI is enabled for operation.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER</name>
              <description>Master mode select.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SLAVE_MODE</name>
                  <description>Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASTER_MODE</name>
                  <description>Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LSBF</name>
              <description>LSB First mode enable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard. Data is transmitted and received in standard MSB first order.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REVERSE</name>
                  <description>Reverse. Data is transmitted and received in reverse order (LSB first).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPHA</name>
              <description>Clock Phase select.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CHANGE</name>
                  <description>Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAPTURE</name>
                  <description>Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPOL</name>
              <description>Clock Polarity select.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low. The rest state of the clock (between transfers) is low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>High. The rest state of the clock (between transfers) is high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL0</name>
              <description>SSEL0 Polarity select.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low. The SSEL0 pin is active low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>High. The SSEL0 pin is active high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL1</name>
              <description>SSEL1 Polarity select.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low. The SSEL1 pin is active low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>High. The SSEL1 pin is active high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL2</name>
              <description>SSEL2 Polarity select.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low. The SSEL2 pin is active low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>High. The SSEL2 pin is active high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL3</name>
              <description>SSEL3 Polarity select.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low. The SSEL3 pin is active low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>High. The SSEL3 pin is active high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DLY</name>
          <description>SPI Delay register</description>
          <addressOffset>0x404</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PRE_DELAY</name>
              <description>Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POST_DELAY</name>
              <description>Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_DELAY</name>
              <description>If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANSFER_DELAY</name>
              <description>Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STAT</name>
          <description>SPI Status. Some status flags can be cleared by writing a 1 to that bit position.</description>
          <addressOffset>0x408</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x100</resetValue>
          <resetMask>0x1C0</resetMask>
          <fields>
            <field>
              <name>SSA</name>
              <description>Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SSD</name>
              <description>Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>STALLED</name>
              <description>Stalled status flag. This indicates whether the SPI is currently in a stall condition.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENDTRANSFER</name>
              <description>End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSTIDLE</name>
              <description>Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENSET</name>
          <description>SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.</description>
          <addressOffset>0x40C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x130</resetMask>
          <fields>
            <field>
              <name>SSAEN</name>
              <description>Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSDEN</name>
              <description>Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSTIDLEEN</name>
              <description>Master idle interrupt enable.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated when the SPI master function is idle.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An interrupt will be generated when the SPI master function is fully idle.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENCLR</name>
          <description>SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.</description>
          <addressOffset>0x410</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SSAEN</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SSDEN</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MSTIDLE</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIV</name>
          <description>SPI clock Divider</description>
          <addressOffset>0x424</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DIVVAL</name>
              <description>Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>SPI Interrupt Status</description>
          <addressOffset>0x428</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x130</resetMask>
          <fields>
            <field>
              <name>SSA</name>
              <description>Slave Select Assert.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SSD</name>
              <description>Slave Select Deassert.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MSTIDLE</name>
              <description>Master Idle status flag.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOCFG</name>
          <description>FIFO configuration and enable register.</description>
          <addressOffset>0xE00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7F033</resetMask>
          <fields>
            <field>
              <name>ENABLETX</name>
              <description>Enable the transmit FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>The transmit FIFO is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>The transmit FIFO is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLERX</name>
              <description>Enable the receive FIFO.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>The receive FIFO is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>The receive FIFO is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIZE</name>
              <description>FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMATX</name>
              <description>DMA configuration for transmit.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>DMA is not used for the transmit function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMARX</name>
              <description>DMA configuration for receive.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>DMA is not used for the receive function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKETX</name>
              <description>Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only enabled interrupts will wake up the device form reduced power modes.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKERX</name>
              <description>Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only enabled interrupts will wake up the device form reduced power modes.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMPTYTX</name>
              <description>Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EMPTYRX</name>
              <description>Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOSTAT</name>
          <description>FIFO status register.</description>
          <addressOffset>0xE04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x30</resetValue>
          <resetMask>0x1F1FFB</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERINT</name>
              <description>Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEMPTY</name>
              <description>Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXNOTFULL</name>
              <description>Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNOTEMPTY</name>
              <description>Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFULL</name>
              <description>Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOTRIG</name>
          <description>FIFO trigger settings for interrupt and DMA request.</description>
          <addressOffset>0xE08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF0F03</resetMask>
          <fields>
            <field>
              <name>TXLVLENA</name>
              <description>Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Transmit FIFO level does not generate a FIFO level trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXLVLENA</name>
              <description>Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Receive FIFO level does not generate a FIFO level trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTENSET</name>
          <description>FIFO interrupt enable set (enable) and read register.</description>
          <addressOffset>0xE10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated for a transmit error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An interrupt will be generated when a transmit error occurs.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXERR</name>
              <description>Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated for a receive error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An interrupt will be generated when a receive error occurs.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated based on the TX FIFO level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated based on the RX FIFO level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTENCLR</name>
          <description>FIFO interrupt enable clear (disable) and read register.</description>
          <addressOffset>0xE14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTSTAT</name>
          <description>FIFO interrupt status register.</description>
          <addressOffset>0xE18</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>TX FIFO error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>RX FIFO error.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO level interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO level interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERINT</name>
              <description>Peripheral interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOWR</name>
          <description>FIFO write data.</description>
          <addressOffset>0xE20</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TXDATA</name>
              <description>Transmit data to the FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXSSEL0_N</name>
              <description>Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>SSEL0 asserted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NOT_ASSERTED</name>
                  <description>SSEL0 not asserted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXSSEL1_N</name>
              <description>Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>SSEL1 asserted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NOT_ASSERTED</name>
                  <description>SSEL1 not asserted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXSSEL2_N</name>
              <description>Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>SSEL2 asserted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NOT_ASSERTED</name>
                  <description>SSEL2 not asserted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXSSEL3_N</name>
              <description>Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ASSERTED</name>
                  <description>SSEL3 asserted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NOT_ASSERTED</name>
                  <description>SSEL3 not asserted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EOT</name>
              <description>End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_DEASSERTED</name>
                  <description>SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DEASSERTED</name>
                  <description>SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EOF</name>
              <description>End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_EOF</name>
                  <description>Data not EOF. This piece of data transmitted is not treated as the end of a frame.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EOF</name>
                  <description>Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXIGNORE</name>
              <description>Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>READ</name>
                  <description>Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IGNORE</name>
                  <description>Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXIGNORE</name>
              <description>Transmit Ignore. This allows data to be received using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.This bit can only be set by writing to the upper 16 bits only of FIFOWR, i.e., a half-word write to offset 0xE22.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WRITE</name>
                  <description>Write transmit data. Transmit data must be written for each data exchange between master and slave. In slave mode, an underrun error occurs if transmit data is not provided before needed in a data frame.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IGNORE</name>
                  <description>Ignore transmit data. Data can be received without transmitting data (after FIFOWR has been initialized to set TXIGNORE). No transmitter flags are generated. When configured with TXIGNORE =1, the slave will set the data to always 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEN</name>
              <description>Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORD</name>
          <description>FIFO read data.</description>
          <addressOffset>0xE30</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xE1FF</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL0_N</name>
              <description>Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL1_N</name>
              <description>Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL2_N</name>
              <description>Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL3_N</name>
              <description>Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOT</name>
              <description>Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORDNOPOP</name>
          <description>FIFO data read with no FIFO pop.</description>
          <addressOffset>0xE40</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xE1FF</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL0_N</name>
              <description>Slave Select for receive.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL1_N</name>
              <description>Slave Select for receive.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL2_N</name>
              <description>Slave Select for receive.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXSSEL3_N</name>
              <description>Slave Select for receive.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOT</name>
              <description>Start of transfer flag.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOSIZE</name>
          <description>FIFO size register</description>
          <addressOffset>0xE48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x8</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIFOSIZE</name>
              <description>Provides the size of the FIFO for software. The size of the SPI FIFO is 8 entries.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID</name>
          <description>Peripheral identification register.</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xE0201200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APERTURE</name>
              <description>Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MINOR_REV</name>
              <description>Minor revision of module implementation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR_REV</name>
              <description>Major revision of module implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>Module identifier for the selected function.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI1</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM1</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x40087000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM1</name>
        <value>15</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI2</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM2</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x40088000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM2</name>
        <value>16</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI3</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM3</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x40089000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM3</name>
        <value>17</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI4</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM4</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x4008A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM4</name>
        <value>18</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI5</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM5</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x40096000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM5</name>
        <value>19</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI6</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM6</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x40097000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM6</name>
        <value>20</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI7</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM7</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x40098000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM7</name>
        <value>21</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI8</name>
      <description>Serial Peripheral Interfaces (SPI)</description>
      <alternatePeripheral>FLEXCOMM8</alternatePeripheral>
      <groupName>SPI</groupName>
      <baseAddress>0x4009F000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM8</name>
        <value>59</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>USART0</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM0</alternatePeripheral>
      <groupName>USART</groupName>
      <headerStructName>USART</headerStructName>
      <baseAddress>0x40086000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM0</name>
        <value>14</value>
      </interrupt>
      <registers>
        <register>
          <name>CFG</name>
          <description>USART Configuration register. Basic USART configuration settings that typically are not changed during operation.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFDDBFD</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>USART Enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The USART is enabled for operation.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATALEN</name>
              <description>Selects the data size for the USART.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BIT_7</name>
                  <description>7 bit Data length.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIT_8</name>
                  <description>8 bit Data length.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIT_9</name>
                  <description>9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PARITYSEL</name>
              <description>Selects what type of parity is used by the USART.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PARITY</name>
                  <description>No parity.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVEN_PARITY</name>
                  <description>Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ODD_PARITY</name>
                  <description>Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOPLEN</name>
              <description>Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BIT_1</name>
                  <description>1 stop bit.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BITS_2</name>
                  <description>2 stop bits. This setting should only be used for asynchronous communication.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE32K</name>
              <description>Selects standard or 32 kHz clocking mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. USART uses standard clocking.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LINMODE</name>
              <description>LIN break mode enable.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. Break detect and generate is configured for normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. Break detect and generate is configured for LIN bus operation.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTSEN</name>
              <description>CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No flow control. The transmitter does not receive any automatic flow control signal.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNCEN</name>
              <description>Selects synchronous or asynchronous operation.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ASYNCHRONOUS_MODE</name>
                  <description>Asynchronous mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SYNCHRONOUS_MODE</name>
                  <description>Synchronous mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLKPOL</name>
              <description>Selects the clock polarity and sampling edge of received data in synchronous mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FALLING_EDGE</name>
                  <description>Falling edge. Un_RXD is sampled on the falling edge of SCLK.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RISING_EDGE</name>
                  <description>Rising edge. Un_RXD is sampled on the rising edge of SCLK.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNCMST</name>
              <description>Synchronous mode Master select.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SLAVE</name>
                  <description>Slave. When synchronous mode is enabled, the USART is a slave.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASTER</name>
                  <description>Master. When synchronous mode is enabled, the USART is a master.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Selects data loopback mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPBACK</name>
                  <description>Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OETA</name>
              <description>Output Enable Turnaround time enable for RS-485 operation.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTOADDR</name>
              <description>Automatic Address matching enable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address).</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OESEL</name>
              <description>Output Enable Select.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard. The RTS signal is used as the standard flow control function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RS_485</name>
                  <description>RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OEPOL</name>
              <description>Output Enable Polarity.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>Low. If selected by OESEL, the output enable is active low.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>High. If selected by OESEL, the output enable is active high.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXPOL</name>
              <description>Receive data polarity.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INVERTED</name>
                  <description>Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXPOL</name>
              <description>Transmit data polarity.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STANDARD</name>
                  <description>Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INVERTED</name>
                  <description>Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTL</name>
          <description>USART Control register. USART control settings that are more likely to change during operation.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x10346</resetMask>
          <fields>
            <field>
              <name>TXBRKEN</name>
              <description>Break Enable.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINOUS</name>
                  <description>Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADDRDET</name>
              <description>Enable address detect mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. The USART presents all incoming data.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXDIS</name>
              <description>Transmit Disable.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Not disabled. USART transmitter is not disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CC</name>
              <description>Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLOCK_ON_CHARACTER</name>
                  <description>Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINOUS_CLOCK</name>
                  <description>Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRCCONRX</name>
              <description>Clear Continuous Clock.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. No effect on the CC bit.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AUTO_CLEAR</name>
                  <description>Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTOBAUD</name>
              <description>Autobaud enable.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled. USART is in normal operating mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>STAT</name>
          <description>USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA</resetValue>
          <resetMask>0x45A</resetMask>
          <fields>
            <field>
              <name>RXIDLE</name>
              <description>Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXIDLE</name>
              <description>Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTS</name>
              <description>This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DELTACTS</name>
              <description>This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXDISSTAT</name>
              <description>Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXBRK</name>
              <description>Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DELTARXBRK</name>
              <description>This bit is set when a change in the state of receiver break detection occurs. Cleared by software.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>START</name>
              <description>This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FRAMERRINT</name>
              <description>Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PARITYERRINT</name>
              <description>Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXNOISEINT</name>
              <description>Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ABERR</name>
              <description>Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENSET</name>
          <description>Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F868</resetMask>
          <fields>
            <field>
              <name>TXIDLEEN</name>
              <description>When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELTACTSEN</name>
              <description>When 1, enables an interrupt when there is a change in the state of the CTS input.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDISEN</name>
              <description>When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DELTARXBRKEN</name>
              <description>When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTEN</name>
              <description>When 1, enables an interrupt when a received start bit has been detected.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAMERREN</name>
              <description>When 1, enables an interrupt when a framing error has been detected.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARITYERREN</name>
              <description>When 1, enables an interrupt when a parity error has been detected.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXNOISEEN</name>
              <description>When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ABERREN</name>
              <description>When 1, enables an interrupt when an auto baud error occurs.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENCLR</name>
          <description>Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TXIDLECLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DELTACTSCLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXDISCLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DELTARXBRKCLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>STARTCLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FRAMERRCLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PARITYERRCLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXNOISECLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ABERRCLR</name>
              <description>Writing 1 clears the corresponding bit in the INTENSET register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BRG</name>
          <description>Baud Rate Generator register. 16-bit integer baud rate divisor value.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BRGVAL</name>
              <description>This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>Interrupt status register. Reflects interrupts that are currently enabled.</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F968</resetMask>
          <fields>
            <field>
              <name>TXIDLE</name>
              <description>Transmitter Idle status.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DELTACTS</name>
              <description>This bit is set when a change in the state of the CTS input is detected.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXDISINT</name>
              <description>Transmitter Disabled Interrupt flag.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DELTARXBRK</name>
              <description>This bit is set when a change in the state of receiver break detection occurs.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>START</name>
              <description>This bit is set when a start is detected on the receiver input.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRAMERRINT</name>
              <description>Framing Error interrupt flag.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PARITYERRINT</name>
              <description>Parity Error interrupt flag.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNOISEINT</name>
              <description>Received Noise interrupt flag.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ABERRINT</name>
              <description>Auto baud Error Interrupt flag.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OSR</name>
          <description>Oversample selection register for asynchronous communication.</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xF</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>OSRVAL</name>
              <description>Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDR</name>
          <description>Address register for automatic address matching.</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description>8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOCFG</name>
          <description>FIFO configuration and enable register.</description>
          <addressOffset>0xE00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7F033</resetMask>
          <fields>
            <field>
              <name>ENABLETX</name>
              <description>Enable the transmit FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>The transmit FIFO is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>The transmit FIFO is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLERX</name>
              <description>Enable the receive FIFO.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>The receive FIFO is not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>The receive FIFO is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIZE</name>
              <description>FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMATX</name>
              <description>DMA configuration for transmit.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>DMA is not used for the transmit function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMARX</name>
              <description>DMA configuration for receive.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>DMA is not used for the receive function.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKETX</name>
              <description>Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only enabled interrupts will wake up the device form reduced power modes.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKERX</name>
              <description>Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Only enabled interrupts will wake up the device form reduced power modes.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMPTYTX</name>
              <description>Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EMPTYRX</name>
              <description>Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOSTAT</name>
          <description>FIFO status register.</description>
          <addressOffset>0xE04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x30</resetValue>
          <resetMask>0x1F1FFB</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERINT</name>
              <description>Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEMPTY</name>
              <description>Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXNOTFULL</name>
              <description>Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNOTEMPTY</name>
              <description>Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFULL</name>
              <description>Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOTRIG</name>
          <description>FIFO trigger settings for interrupt and DMA request.</description>
          <addressOffset>0xE08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF0F03</resetMask>
          <fields>
            <field>
              <name>TXLVLENA</name>
              <description>Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Transmit FIFO level does not generate a FIFO level trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXLVLENA</name>
              <description>Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Receive FIFO level does not generate a FIFO level trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTENSET</name>
          <description>FIFO interrupt enable set (enable) and read register.</description>
          <addressOffset>0xE10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated for a transmit error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An interrupt will be generated when a transmit error occurs.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXERR</name>
              <description>Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated for a receive error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>An interrupt will be generated when a receive error occurs.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated based on the TX FIFO level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>No interrupt will be generated based on the RX FIFO level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTENCLR</name>
          <description>FIFO interrupt enable clear (disable) and read register.</description>
          <addressOffset>0xE14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Writing one clears the corresponding bits in the FIFOINTENSET register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOINTSTAT</name>
          <description>FIFO interrupt status register.</description>
          <addressOffset>0xE18</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>TXERR</name>
              <description>TX FIFO error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXERR</name>
              <description>RX FIFO error.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXLVL</name>
              <description>Transmit FIFO level interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXLVL</name>
              <description>Receive FIFO level interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERINT</name>
              <description>Peripheral interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOWR</name>
          <description>FIFO write data.</description>
          <addressOffset>0xE20</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>TXDATA</name>
              <description>Transmit data to the FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORD</name>
          <description>FIFO read data.</description>
          <addressOffset>0xE30</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xE1FF</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRAMERR</name>
              <description>Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PARITYERR</name>
              <description>Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNOISE</name>
              <description>Received Noise flag. See description of the RxNoiseInt bit in Table 354.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFORDNOPOP</name>
          <description>FIFO data read with no FIFO pop.</description>
          <addressOffset>0xE40</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xE1FF</resetMask>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRAMERR</name>
              <description>Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PARITYERR</name>
              <description>Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNOISE</name>
              <description>Received Noise flag. See description of the RxNoiseInt bit in Table 354.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFOSIZE</name>
          <description>FIFO size register</description>
          <addressOffset>0xE48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x8</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIFOSIZE</name>
              <description>Provides the size of the FIFO for software. The size of the SPI FIFO is 8 entries.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID</name>
          <description>Peripheral identification register.</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APERTURE</name>
              <description>Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MINOR_REV</name>
              <description>Minor revision of module implementation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR_REV</name>
              <description>Major revision of module implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>Module identifier for the selected function.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="USART0">
      <name>USART1</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM1</alternatePeripheral>
      <groupName>USART</groupName>
      <baseAddress>0x40087000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM1</name>
        <value>15</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART0">
      <name>USART2</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM2</alternatePeripheral>
      <groupName>USART</groupName>
      <baseAddress>0x40088000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM2</name>
        <value>16</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART0">
      <name>USART3</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM3</alternatePeripheral>
      <groupName>USART</groupName>
      <baseAddress>0x40089000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM3</name>
        <value>17</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART0">
      <name>USART4</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM4</alternatePeripheral>
      <groupName>USART</groupName>
      <baseAddress>0x4008A000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM4</name>
        <value>18</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART0">
      <name>USART5</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM5</alternatePeripheral>
      <groupName>USART</groupName>
      <baseAddress>0x40096000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM5</name>
        <value>19</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART0">
      <name>USART6</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM6</alternatePeripheral>
      <groupName>USART</groupName>
      <baseAddress>0x40097000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM6</name>
        <value>20</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART0">
      <name>USART7</name>
      <description>USARTs</description>
      <alternatePeripheral>FLEXCOMM7</alternatePeripheral>
      <groupName>USART</groupName>
      <baseAddress>0x40098000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>FLEXCOMM7</name>
        <value>21</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>GPIO</name>
      <description>General Purpose I/O (GPIO)</description>
      <groupName>GPIO</groupName>
      <baseAddress>0x4008C000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x2488</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <cluster>
          <dim>2</dim>
          <dimIncrement>0x20</dimIncrement>
          <name>B[%s]</name>
          <description>no description available</description>
          <addressOffset>0</addressOffset>
          <register>
            <dim>32</dim>
            <dimIncrement>0x1</dimIncrement>
            <name>B_[%s]</name>
            <description>Byte pin registers for all port GPIO pins</description>
            <addressOffset>0</addressOffset>
            <size>8</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>PBYTE</name>
                <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>1</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>2</dim>
          <dimIncrement>0x80</dimIncrement>
          <name>W[%s]</name>
          <description>no description available</description>
          <addressOffset>0x1000</addressOffset>
          <register>
            <dim>32</dim>
            <dimIncrement>0x4</dimIncrement>
            <name>W_[%s]</name>
            <description>Word pin registers for all port GPIO pins</description>
            <addressOffset>0</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PWORD</name>
                <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
                <bitOffset>0</bitOffset>
                <bitWidth>32</bitWidth>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DIR[%s]</name>
          <description>Direction registers for all port GPIO pins</description>
          <addressOffset>0x2000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DIRP</name>
              <description>Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>MASK[%s]</name>
          <description>Mask register for all port GPIO pins</description>
          <addressOffset>0x2080</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASKP</name>
              <description>Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package.0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PIN[%s]</name>
          <description>Port pin register for all port GPIO pins</description>
          <addressOffset>0x2100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT</name>
              <description>Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>MPIN[%s]</name>
          <description>Masked port register for all port GPIO pins</description>
          <addressOffset>0x2180</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MPORTP</name>
              <description>Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SET[%s]</name>
          <description>Write: Set register for port. Read: output bits for port</description>
          <addressOffset>0x2200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SETP</name>
              <description>Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CLR[%s]</name>
          <description>Clear port for all port GPIO pins</description>
          <addressOffset>0x2280</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CLRP</name>
              <description>Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>NOT[%s]</name>
          <description>Toggle port for all port GPIO pins</description>
          <addressOffset>0x2300</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>NOTP</name>
              <description>Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DIRSET[%s]</name>
          <description>Set pin direction bits for port</description>
          <addressOffset>0x2380</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DIRSETP</name>
              <description>Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DIRCLR[%s]</name>
          <description>Clear pin direction bits for port</description>
          <addressOffset>0x2400</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DIRCLRP</name>
              <description>Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DIRNOT[%s]</name>
          <description>Toggle pin direction bits for port</description>
          <addressOffset>0x2480</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DIRNOTP</name>
              <description>Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USBHSD</name>
      <description>USB1 High-speed Device Controller</description>
      <groupName>USBHSD</groupName>
      <baseAddress>0x40094000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x38</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USB1</name>
        <value>47</value>
      </interrupt>
      <interrupt>
        <name>USB1_NEEDCLK</name>
        <value>48</value>
      </interrupt>
      <registers>
        <register>
          <name>DEVCMDSTAT</name>
          <description>USB Device Command/Status register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x800</resetValue>
          <resetMask>0xF7DBFFFF</resetMask>
          <fields>
            <field>
              <name>DEV_ADDR</name>
              <description>USB device address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_EN</name>
              <description>USB device enable.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP</name>
              <description>SETUP token received.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_NEEDCLK</name>
              <description>Forces the NEEDCLK output to always be on:.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPM_SUP</name>
              <description>LPM Supported:.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTONNAK_AO</name>
              <description>Interrupt on NAK for interrupt and bulk OUT EP:.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTONNAK_AI</name>
              <description>Interrupt on NAK for interrupt and bulk IN EP:.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTONNAK_CO</name>
              <description>Interrupt on NAK for control OUT EP:.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTONNAK_CI</name>
              <description>Interrupt on NAK for control IN EP:.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCON</name>
              <description>Device status - connect.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSUS</name>
              <description>Device status - suspend.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPM_SUS</name>
              <description>Device status - LPM Suspend.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPM_REWP</name>
              <description>LPM Remote Wake-up Enabled by USB host.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Speed</name>
              <description>This field indicates the speed at which the device operates: 00b: reserved 01b: full-speed 10b: high-speed 11b: super-speed (reserved for future use).</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCON_C</name>
              <description>Device status - connect change.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSUS_C</name>
              <description>Device status - suspend change.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRES_C</name>
              <description>Device status - reset change.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBUS_DEBOUNCED</name>
              <description>This bit indicates if VBUS is detected or not.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PHY_TEST_MODE</name>
              <description>This field is written by firmware to put the PHY into a test mode as defined by the USB2.0 specification.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Test mode disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEST_J</name>
                  <description>Test_J.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEST_K</name>
                  <description>Test_K.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEST_SE0_NAK</name>
                  <description>Test_SE0_NAK.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEST_PACKET</name>
                  <description>Test_Packet.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEST_FORCE_ENABLE</name>
                  <description>Test_Force_Enable.</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INFO</name>
          <description>USB Info register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x2000000</resetValue>
          <resetMask>0xFFFF7FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_NR</name>
              <description>Frame number.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR_CODE</name>
              <description>The error code which last occurred:.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MINREV</name>
              <description>Minor revision.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJREV</name>
              <description>Major revision.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPLISTSTART</name>
          <description>USB EP Command/Status List start address</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>EP_LIST_PRG</name>
              <description>Programmable portion of the USB EP Command/Status List address.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP_LIST_FIXED</name>
              <description>Fixed portion of USB EP Command/Status List address.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATABUFSTART</name>
          <description>USB Data buffer start address</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x41000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DA_BUF</name>
              <description>Start address of the memory page where all endpoint data buffers are located.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LPM</name>
          <description>USB Link Power Management register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>HIRD_HW</name>
              <description>Host Initiated Resume Duration - HW.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HIRD_SW</name>
              <description>Host Initiated Resume Duration - SW.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_PENDING</name>
              <description>As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPSKIP</name>
          <description>USB Endpoint skip</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>SKIP</name>
              <description>Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPINUSE</name>
          <description>USB Endpoint Buffer in use</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFC</resetMask>
          <fields>
            <field>
              <name>BUF</name>
              <description>Buffer in use: This register has one bit per physical endpoint.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPBUFCFG</name>
          <description>USB Endpoint Buffer Configuration register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFC</resetMask>
          <fields>
            <field>
              <name>BUF_SB</name>
              <description>Buffer usage: This register has one bit per physical endpoint.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>USB interrupt status register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC0000FFF</resetMask>
          <fields>
            <field>
              <name>EP0OUT</name>
              <description>Interrupt status register bit for the Control EP0 OUT direction.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP0IN</name>
              <description>Interrupt status register bit for the Control EP0 IN direction.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP1OUT</name>
              <description>Interrupt status register bit for the EP1 OUT direction.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP1IN</name>
              <description>Interrupt status register bit for the EP1 IN direction.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP2OUT</name>
              <description>Interrupt status register bit for the EP2 OUT direction.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP2IN</name>
              <description>Interrupt status register bit for the EP2 IN direction.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP3OUT</name>
              <description>Interrupt status register bit for the EP3 OUT direction.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP3IN</name>
              <description>Interrupt status register bit for the EP3 IN direction.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP4OUT</name>
              <description>Interrupt status register bit for the EP4 OUT direction.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP4IN</name>
              <description>Interrupt status register bit for the EP4 IN direction.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP5OUT</name>
              <description>Interrupt status register bit for the EP5 OUT direction.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP5IN</name>
              <description>Interrupt status register bit for the EP5 IN direction.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INT</name>
              <description>Frame interrupt.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_INT</name>
              <description>Device status interrupt.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTEN</name>
          <description>USB interrupt enable register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC0000FFF</resetMask>
          <fields>
            <field>
              <name>EP_INT_EN</name>
              <description>If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INT_EN</name>
              <description>If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_INT_EN</name>
              <description>If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSETSTAT</name>
          <description>USB set interrupt status register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC0000FFF</resetMask>
          <fields>
            <field>
              <name>EP_SET_INT</name>
              <description>If software writes a one to one of these bits, the corresponding USB interrupt status bit is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_SET_INT</name>
              <description>If software writes a one to one of these bits, the corresponding USB interrupt status bit is set.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_SET_INT</name>
              <description>If software writes a one to one of these bits, the corresponding USB interrupt status bit is set.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPTOGGLE</name>
          <description>USB Endpoint toggle register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>TOGGLE</name>
              <description>Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CRC_ENGINE</name>
      <description>CRC engine</description>
      <groupName>CRC</groupName>
      <baseAddress>0x40095000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>MODE</name>
          <description>CRC mode register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>CRC_POLY</name>
              <description>CRC polynomial: 1X = CRC-32 polynomial 01 = CRC-16 polynomial 00 = CRC-CCITT polynomial</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RVS_WR</name>
              <description>Data bit order: 1 = Bit order reverse for CRC_WR_DATA (per byte) 0 = No bit order reverse for CRC_WR_DATA (per byte)</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPL_WR</name>
              <description>Data complement: 1 = 1's complement for CRC_WR_DATA 0 = No 1's complement for CRC_WR_DATA</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RVS_SUM</name>
              <description>CRC sum bit order: 1 = Bit order reverse for CRC_SUM 0 = No bit order reverse for CRC_SUM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPL_SUM</name>
              <description>CRC sum complement: 1 = 1's complement for CRC_SUM 0 = No 1's complement for CRC_SUM</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEED</name>
          <description>CRC seed register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CRC_SEED</name>
              <description>A write access to this register will load CRC seed value to CRC_SUM register with selected bit order and 1's complement pre-processes. A write access to this register will overrule the CRC calculation in progresses.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUM</name>
          <description>CRC checksum register</description>
          <alternateGroup>SUM_WR_DATA</alternateGroup>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CRC_SUM</name>
              <description>The most recent CRC sum can be read through this register with selected bit order and 1's complement post-processes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_DATA</name>
          <description>CRC data register</description>
          <alternateGroup>SUM_WR_DATA</alternateGroup>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CRC_WR_DATA</name>
              <description>Data written to this register will be taken to perform CRC calculation with selected bit order and 1's complement pre-process. Any write size 8, 16 or 32-bit are allowed and accept back-to-back transactions.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DBGMAILBOX</name>
      <description>MCU Debugger Mailbox</description>
      <groupName>DBGMAILBOX</groupName>
      <baseAddress>0x4009C000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CSW</name>
          <description>CRC mode register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>RESYNCH_REQ</name>
              <description>Debugger will set this bit to 1 to request a resynchronrisation</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REQ_PENDING</name>
              <description>Request is pending from debugger (i.e unread value in REQUEST)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_OR_ERR</name>
              <description>Debugger overrun error (previous REQUEST overwritten before being picked up by ROM)</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB_OR_ERR</name>
              <description>AHB overrun Error (Return value overwritten by ROM)</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOFT_RESET</name>
              <description>Soft Reset for DM (write-only from AHB, not readable and selfclearing). A write to this bit will cause a soft reset for DM.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHIP_RESET_REQ</name>
              <description>Write only bit. Once written will cause the chip to reset (note that the DM is not reset by this reset as it is only resettable by a SOFT reset or a POR/BOD event)</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REQUEST</name>
          <description>CRC seed register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REQ</name>
              <description>Request Value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETURN</name>
          <description>Return value from ROM.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RET</name>
              <description>The Return value from ROM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID</name>
          <description>Identification register</description>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x2A0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Identification value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CAN0</name>
      <description>Controller Area Network Flexible Data (CAN FD)</description>
      <groupName>CAN</groupName>
      <baseAddress>0x4009D000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x604</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CAN0_IRQ0</name>
        <value>43</value>
      </interrupt>
      <interrupt>
        <name>CAN0_IRQ1</name>
        <value>44</value>
      </interrupt>
      <registers>
        <register>
          <name>DBTP</name>
          <description>Data Bit Timing Prescaler Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xA33</resetValue>
          <resetMask>0x9F1FFF</resetMask>
          <fields>
            <field>
              <name>DSJW</name>
              <description>Data (re)synchronization jump width.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTSEG2</name>
              <description>Data time segment after sample point.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTSEG1</name>
              <description>Data time segment before sample point.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBRP</name>
              <description>Data bit rate prescaler.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TDC</name>
              <description>Transmitter delay compensation.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEST</name>
          <description>Test Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF0</resetMask>
          <fields>
            <field>
              <name>LBCK</name>
              <description>Loop back mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX</name>
              <description>Control of transmit pin.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX</name>
              <description>Monitors the actual value of the CAN_RXD.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCCR</name>
          <description>CC Control Register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0xF3FF</resetMask>
          <fields>
            <field>
              <name>INIT</name>
              <description>Initialization.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CCE</name>
              <description>Configuration change enable.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ASM</name>
              <description>Restricted operational mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CSA</name>
              <description>Clock Stop Acknowledge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CSR</name>
              <description>Clock Stop Request.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MON</name>
              <description>Bus monitoring mode.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAR</name>
              <description>Disable automatic retransmission.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEST</name>
              <description>Test mode enable.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDOE</name>
              <description>CAN FD operation enable.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BRSE</name>
              <description>When CAN FD operation is disabled, this bit is not evaluated.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PXHD</name>
              <description>Protocol exception handling disable.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFBI</name>
              <description>Edge filtering during bus integration.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXP</name>
              <description>Transmit pause.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NISO</name>
              <description>Non ISO operation.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NBTP</name>
          <description>Nominal Bit Timing and Prescaler Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x6000A03</resetValue>
          <resetMask>0xFFFFFF7F</resetMask>
          <fields>
            <field>
              <name>NTSEG2</name>
              <description>Nominal time segment after sample point.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NTSEG1</name>
              <description>Nominal time segment before sample point.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NBRP</name>
              <description>Nominal bit rate prescaler.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NSJW</name>
              <description>Nominal (re)synchronization jump width.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSCC</name>
          <description>Timestamp Counter Configuration</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF0003</resetMask>
          <fields>
            <field>
              <name>TSS</name>
              <description>Timestamp select.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCP</name>
              <description>Timestamp counter prescaler Configures the timestamp and timeout counters time unit in multiple of CAN bit times.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSCV</name>
          <description>Timestamp Counter Value</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>TSC</name>
              <description>Timestamp counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOCC</name>
          <description>Timeout Counter Configuration</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFF0000</resetValue>
          <resetMask>0xFFFF0007</resetMask>
          <fields>
            <field>
              <name>ETOC</name>
              <description>Enable timeout counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOS</name>
              <description>Timeout select.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOP</name>
              <description>Timeout period.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOCV</name>
          <description>Timeout Counter Value</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>TOC</name>
              <description>Timeout counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECR</name>
          <description>Error Counter Register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>TEC</name>
              <description>Transmit error counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REC</name>
              <description>Receive error counter.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RP</name>
              <description>Receive error passive.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CEL</name>
              <description>CAN error logging.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PSR</name>
          <description>Protocol Status Register</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x707</resetValue>
          <resetMask>0x7F7FFF</resetMask>
          <fields>
            <field>
              <name>LEC</name>
              <description>Last error code.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activity.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EP</name>
              <description>Error Passive.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EW</name>
              <description>Warning status.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BO</name>
              <description>Bus Off Status.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DLEC</name>
              <description>Data phase last error code.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESI</name>
              <description>ESI flag of the last received CAN FD message.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RBRS</name>
              <description>BRS flag of last received CAN FD message.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RFDF</name>
              <description>Received a CAN FD message.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PXE</name>
              <description>Protocol exception event.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TDCV</name>
              <description>Transmitter delay compensation value.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TDCR</name>
          <description>Transmitter Delay Compensator Register</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7F7F</resetMask>
          <fields>
            <field>
              <name>TDCF</name>
              <description>Transmitter delay compensation filter window length.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TDCO</name>
              <description>Transmitter delay compensation offset.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR</name>
          <description>Interrupt Register</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>RF0N</name>
              <description>Rx FIFO 0 new message.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0W</name>
              <description>Rx FIFO 0 watermark reached.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0F</name>
              <description>Rx FIFO 0 full.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0L</name>
              <description>Rx FIFO 0 message lost.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1N</name>
              <description>Rx FIFO 1 new message.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1W</name>
              <description>Rx FIFO 1 watermark reached.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1F</name>
              <description>Rx FIFO 1 full.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1L</name>
              <description>Rx FIFO 1 message lost.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HPM</name>
              <description>High priority message.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TC</name>
              <description>Transmission completed.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCF</name>
              <description>Transmission cancellation finished.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TFE</name>
              <description>Tx FIFO empty.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFN</name>
              <description>Tx event FIFO new entry.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFW</name>
              <description>Tx event FIFO watermark reached.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFF</name>
              <description>Tx event FIFO full.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFL</name>
              <description>Tx event FIFO element lost.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSW</name>
              <description>Timestamp wraparound.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MRAF</name>
              <description>Message RAM access failure.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOO</name>
              <description>Timeout occurred.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRX</name>
              <description>Message stored in dedicated Rx buffer.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BEC</name>
              <description>Bit error corrected.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BEU</name>
              <description>Bit error uncorrected.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ELO</name>
              <description>Error logging overflow.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EP</name>
              <description>Error passive.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EW</name>
              <description>Warning status.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BO</name>
              <description>Bus_Off Status.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDI</name>
              <description>Watchdog interrupt.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEA</name>
              <description>Protocol error in arbitration phase.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PED</name>
              <description>Protocol error in data phase.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARA</name>
              <description>Access to reserved address.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IE</name>
          <description>Interrupt Enable</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>RF0NE</name>
              <description>Rx FIFO 0 new message interrupt enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0WE</name>
              <description>Rx FIFO 0 watermark reached interrupt enable.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0FE</name>
              <description>Rx FIFO 0 full interrupt enable.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0LE</name>
              <description>Rx FIFO 0 message lost interrupt enable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1NE</name>
              <description>Rx FIFO 1 new message interrupt enable.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1WE</name>
              <description>Rx FIFO 1 watermark reached interrupt enable.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1FE</name>
              <description>Rx FIFO 1 full interrupt enable.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1LE</name>
              <description>Rx FIFO 1 message lost interrupt enable.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HPME</name>
              <description>High priority message interrupt enable.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCE</name>
              <description>Transmission completed interrupt enable.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCFE</name>
              <description>Transmission cancellation finished interrupt enable.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TFEE</name>
              <description>Tx FIFO empty interrupt enable.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFNE</name>
              <description>Tx event FIFO new entry interrupt enable.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFWE</name>
              <description>Tx event FIFO watermark reached interrupt enable.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFFE</name>
              <description>Tx event FIFO full interrupt enable.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFLE</name>
              <description>Tx event FIFO element lost interrupt enable.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSWE</name>
              <description>Timestamp wraparound interrupt enable.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MRAFE</name>
              <description>Message RAM access failure interrupt enable.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOOE</name>
              <description>Timeout occurred interrupt enable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRXE</name>
              <description>Message stored in dedicated Rx buffer interrupt enable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BECE</name>
              <description>Bit error corrected interrupt enable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BEUE</name>
              <description>Bit error uncorrected interrupt enable.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ELOE</name>
              <description>Error logging overflow interrupt enable.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPE</name>
              <description>Error passive interrupt enable.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EWE</name>
              <description>Warning status interrupt enable.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOE</name>
              <description>Bus_Off Status interrupt enable.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDIE</name>
              <description>Watchdog interrupt enable.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEAE</name>
              <description>Protocol error in arbitration phase interrupt enable.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEDE</name>
              <description>Protocol error in data phase interrupt enable.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARAE</name>
              <description>Access to reserved address interrupt enable.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ILS</name>
          <description>Interrupt Line Select</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>RF0NL</name>
              <description>Rx FIFO 0 new message interrupt line.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0WL</name>
              <description>Rx FIFO 0 watermark reached interrupt line.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0FL</name>
              <description>Rx FIFO 0 full interrupt line.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF0LL</name>
              <description>Rx FIFO 0 message lost interrupt line.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1NL</name>
              <description>Rx FIFO 1 new message interrupt line.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1WL</name>
              <description>Rx FIFO 1 watermark reached interrupt line.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1FL</name>
              <description>Rx FIFO 1 full interrupt line.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RF1LL</name>
              <description>Rx FIFO 1 message lost interrupt line.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HPML</name>
              <description>High priority message interrupt line.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCL</name>
              <description>Transmission completed interrupt line.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCFL</name>
              <description>Transmission cancellation finished interrupt line.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TFEL</name>
              <description>Tx FIFO empty interrupt line.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFNL</name>
              <description>Tx event FIFO new entry interrupt line.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFWL</name>
              <description>Tx event FIFO watermark reached interrupt line.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFFL</name>
              <description>Tx event FIFO full interrupt line.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEFLL</name>
              <description>Tx event FIFO element lost interrupt line.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSWL</name>
              <description>Timestamp wraparound interrupt line.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MRAFL</name>
              <description>Message RAM access failure interrupt line.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOOL</name>
              <description>Timeout occurred interrupt line.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRXL</name>
              <description>Message stored in dedicated Rx buffer interrupt line.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BECL</name>
              <description>Bit error corrected interrupt line.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BEUL</name>
              <description>Bit error uncorrected interrupt line.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ELOL</name>
              <description>Error logging overflow interrupt line.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPL</name>
              <description>Error passive interrupt line.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EWL</name>
              <description>Warning status interrupt line.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOL</name>
              <description>Bus_Off Status interrupt line.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDIL</name>
              <description>Watchdog interrupt line.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEAL</name>
              <description>Protocol error in arbitration phase interrupt line.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEDL</name>
              <description>Protocol error in data phase interrupt line.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARAL</name>
              <description>Access to reserved address interrupt line.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ILE</name>
          <description>Interrupt Line Enable</description>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>EINT0</name>
              <description>Enable interrupt line 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT1</name>
              <description>Enable interrupt line 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GFC</name>
          <description>Global Filter Configuration</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>RRFE</name>
              <description>Reject remote frames extended.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RRFS</name>
              <description>Reject remote frames standard.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANFE</name>
              <description>Accept non-matching frames extended.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANFS</name>
              <description>Accept non-matching frames standard.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIDFC</name>
          <description>Standard ID Filter Configuration</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFC</resetMask>
          <fields>
            <field>
              <name>FLSSA</name>
              <description>Filter list standard start address.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSS</name>
              <description>List size standard 0 = No standard message ID filter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XIDFC</name>
          <description>Extended ID Filter Configuration</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFC</resetMask>
          <fields>
            <field>
              <name>FLESA</name>
              <description>Filter list extended start address.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSE</name>
              <description>List size extended 0 = No extended message ID filter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XIDAM</name>
          <description>Extended ID AND Mask</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1FFFFFFF</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>EIDM</name>
              <description>Extended ID mask.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HPMS</name>
          <description>High Priority Message Status</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BIDX</name>
              <description>Buffer index.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MSI</name>
              <description>Message storage indicator.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FIDX</name>
              <description>Filter index.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLST</name>
              <description>Filter list.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDAT1</name>
          <description>New Data 1</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ND</name>
              <description>New Data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDAT2</name>
          <description>New Data 2</description>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ND</name>
              <description>New Data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXF0C</name>
          <description>Rx FIFO 0 Configuration</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF7FFFFC</resetMask>
          <fields>
            <field>
              <name>F0SA</name>
              <description>Rx FIFO 0 start address.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F0S</name>
              <description>Rx FIFO 0 size.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F0WM</name>
              <description>Rx FIFO 0 watermark 0 = Watermark interrupt disabled.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F0OM</name>
              <description>FIFO 0 operation mode.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXF0S</name>
          <description>Rx FIFO 0 Status</description>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x33F3F7F</resetMask>
          <fields>
            <field>
              <name>F0FL</name>
              <description>Rx FIFO 0 fill level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>F0GI</name>
              <description>Rx FIFO 0 get index.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>F0PI</name>
              <description>Rx FIFO 0 put index.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>F0F</name>
              <description>Rx FIFO 0 full.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RF0L</name>
              <description>Rx FIFO 0 message lost.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXF0A</name>
          <description>Rx FIFO 0 Acknowledge</description>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>F0AI</name>
              <description>Rx FIFO 0 acknowledge index.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXBC</name>
          <description>Rx Buffer Configuration</description>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFC</resetMask>
          <fields>
            <field>
              <name>RBSA</name>
              <description>Rx buffer start address.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXF1C</name>
          <description>Rx FIFO 1 Configuration</description>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF7FFFFC</resetMask>
          <fields>
            <field>
              <name>F1SA</name>
              <description>Rx FIFO 1 start address.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F1S</name>
              <description>Rx FIFO 1 size 0 = No Rx FIFO 1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F1WM</name>
              <description>Rx FIFO 1 watermark 0 = Watermark interrupt disabled.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F1OM</name>
              <description>FIFO 1 operation mode.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXF1S</name>
          <description>Rx FIFO 1 Status</description>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x33F3F7F</resetMask>
          <fields>
            <field>
              <name>F1FL</name>
              <description>Rx FIFO 1 fill level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>F1GI</name>
              <description>Rx FIFO 1 get index.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>F1PI</name>
              <description>Rx FIFO 1 put index.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>F1F</name>
              <description>Rx FIFO 1 full.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RF1L</name>
              <description>Rx FIFO 1 message lost.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXF1A</name>
          <description>Rx FIFO 1 Acknowledge</description>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>F1AI</name>
              <description>Rx FIFO 1 acknowledge index.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXESC</name>
          <description>Rx Buffer and FIFO Element Size Configuration</description>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x777</resetMask>
          <fields>
            <field>
              <name>F0DS</name>
              <description>Rx FIFO 0 data field size.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F1DS</name>
              <description>Rx FIFO 1 data field size.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RBDS</name>
              <description>.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBC</name>
          <description>Tx Buffer Configuration</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7F3FFFFC</resetMask>
          <fields>
            <field>
              <name>TBSA</name>
              <description>Tx buffers start address.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NDTB</name>
              <description>Number of dedicated transmit buffers 0 = No dedicated Tx buffers.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TFQS</name>
              <description>Transmit FIFO/queue size 0 = No tx FIFO/Queue.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TFQM</name>
              <description>Tx FIFO/queue mode.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFQS</name>
          <description>Tx FIFO/Queue Status</description>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F1F3F</resetMask>
          <fields>
            <field>
              <name>TFGI</name>
              <description>Tx FIFO get index.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TFQPI</name>
              <description>Tx FIFO/queue put index.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TFQF</name>
              <description>Tx FIFO/queue full.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXESC</name>
          <description>Tx Buffer Element Size Configuration</description>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TBDS</name>
              <description>Tx buffer data field size.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBRP</name>
          <description>Tx Buffer Request Pending</description>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TRP</name>
              <description>Transmission request pending.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBAR</name>
          <description>Tx Buffer Add Request</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AR</name>
              <description>Add request.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBCR</name>
          <description>Tx Buffer Cancellation Request</description>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CR</name>
              <description>Cancellation request.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBTO</name>
          <description>Tx Buffer Transmission Occurred</description>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TO</name>
              <description>Transmission occurred.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBCF</name>
          <description>Tx Buffer Cancellation Finished</description>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TO</name>
              <description>Cancellation finished.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBTIE</name>
          <description>Tx Buffer Transmission Interrupt Enable</description>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TIE</name>
              <description>Transmission interrupt enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBCIE</name>
          <description>Tx Buffer Cancellation Finished Interrupt Enable</description>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CFIE</name>
              <description>Cancellation finished interrupt enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXEFC</name>
          <description>Tx Event FIFO Configuration</description>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3F3FFFFC</resetMask>
          <fields>
            <field>
              <name>EFSA</name>
              <description>Event FIFO start address.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFS</name>
              <description>Event FIFO size 0 = Tx event FIFO disabled.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFWM</name>
              <description>Event FIFO watermark 0 = Watermark interrupt disabled.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXEFS</name>
          <description>Tx Event FIFO Status</description>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0x33F1F3F</resetMask>
          <fields>
            <field>
              <name>EFFL</name>
              <description>Event FIFO fill level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EFGI</name>
              <description>Event FIFO get index.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EFPI</name>
              <description>Event FIFO put index.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EFF</name>
              <description>Event FIFO full.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TEFL</name>
              <description>Tx event FIFO element lost.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXEFA</name>
          <description>Tx Event FIFO Acknowledge</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>EFAI</name>
              <description>Event FIFO acknowledge index.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MRBA</name>
          <description>CAN Message RAM Base Address</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BA</name>
              <description>Base address for the message RAM in the chip memory map.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ETSCC</name>
          <description>External Timestamp Counter Configuration</description>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x800007FF</resetMask>
          <fields>
            <field>
              <name>ETCP</name>
              <description>External timestamp prescaler value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ETCE</name>
              <description>External timestamp counter enable.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ETSCV</name>
          <description>External Timestamp Counter Value</description>
          <addressOffset>0x600</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ETSC</name>
              <description>External timestamp counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ADC0</name>
      <description>ADC</description>
      <groupName>ADC</groupName>
      <baseAddress>0x400A0000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x584</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ADC0</name>
        <value>22</value>
      </interrupt>
      <registers>
        <register>
          <name>VERID</name>
          <description>Version ID Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x1002C0B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RES</name>
              <description>Resolution</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RES_0</name>
                  <description>Up to 13-bit differential/12-bit single ended resolution supported.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RES_1</name>
                  <description>Up to 16-bit differential/16-bit single ended resolution supported.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIFFEN</name>
              <description>Differential Supported</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DIFFEN_0</name>
                  <description>Differential operation not supported.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIFFEN_1</name>
                  <description>Differential operation supported. CMDLa[CTYPE] controls fields implemented.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MVI</name>
              <description>Multi Vref Implemented</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MVI_0</name>
                  <description>Single voltage reference high (VREFH) input supported.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MVI_1</name>
                  <description>Multiple voltage reference high (VREFH) inputs supported.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSW</name>
              <description>Channel Scale Width</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CSW_0</name>
                  <description>Channel scaling not supported.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSW_1</name>
                  <description>Channel scaling supported. 1-bit CSCALE control field.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSW_6</name>
                  <description>Channel scaling supported. 6-bit CSCALE control field.</description>
                  <value>0x6</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VR1RNGI</name>
              <description>Voltage Reference 1 Range Control Bit Implemented</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VR1RNGI_0</name>
                  <description>Range control not required. CFG[VREF1RNG] is not implemented.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VR1RNGI_1</name>
                  <description>Range control required. CFG[VREF1RNG] is implemented.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IADCKI</name>
              <description>Internal ADC Clock implemented</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IADCKI_0</name>
                  <description>Internal clock source not implemented.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IADCKI_1</name>
                  <description>Internal clock source (and CFG[ADCKEN]) implemented.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CALOFSI</name>
              <description>Calibration Function Implemented</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CALOFSI_0</name>
                  <description>Calibration Not Implemented.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CALOFSI_1</name>
                  <description>Calibration Implemented.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NUM_SEC</name>
              <description>Number of Single Ended Outputs Supported</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NUM_SEC_0</name>
                  <description>This design supports one single ended conversion at a time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NUM_SEC_1</name>
                  <description>This design supports two simultanious single ended conversions.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NUM_FIFO</name>
              <description>Number of FIFOs</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NUM_FIFO_0</name>
                  <description>N/A</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NUM_FIFO_1</name>
                  <description>This design supports one result FIFO.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NUM_FIFO_2</name>
                  <description>This design supports two result FIFOs.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NUM_FIFO_3</name>
                  <description>This design supports three result FIFOs.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NUM_FIFO_4</name>
                  <description>This design supports four result FIFOs.</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MINOR</name>
              <description>Minor Version Number</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR</name>
              <description>Major Version Number</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PARAM</name>
          <description>Parameter Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0xF041010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TRIG_NUM</name>
              <description>Trigger Number</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFOSIZE</name>
              <description>Result FIFO Depth</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFOSIZE_1</name>
                  <description>Result FIFO depth = 1 dataword.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFOSIZE_4</name>
                  <description>Result FIFO depth = 4 datawords.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFOSIZE_8</name>
                  <description>Result FIFO depth = 8 datawords.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFOSIZE_16</name>
                  <description>Result FIFO depth = 16 datawords.</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFOSIZE_32</name>
                  <description>Result FIFO depth = 32 datawords.</description>
                  <value>0x20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFOSIZE_64</name>
                  <description>Result FIFO depth = 64 datawords.</description>
                  <value>0x40</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CV_NUM</name>
              <description>Compare Value Number</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMD_NUM</name>
              <description>Command Buffer Number</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>ADC Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCEN</name>
              <description>ADC Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCEN_0</name>
                  <description>ADC is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCEN_1</name>
                  <description>ADC is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RST</name>
              <description>Software Reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RST_0</name>
                  <description>ADC logic is not reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RST_1</name>
                  <description>ADC logic is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DOZEN</name>
              <description>Doze Enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DOZEN_0</name>
                  <description>ADC is enabled in Doze mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DOZEN_1</name>
                  <description>ADC is disabled in Doze mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAL_REQ</name>
              <description>Auto-Calibration Request</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CAL_REQ_0</name>
                  <description>No request for auto-calibration has been made.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_REQ_1</name>
                  <description>A request for auto-calibration has been made</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CALOFS</name>
              <description>Configure for offset calibration function</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CALOFS_0</name>
                  <description>Calibration function disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CALOFS_1</name>
                  <description>Request for offset calibration function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RSTFIFO0</name>
              <description>Reset FIFO 0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RSTFIFO0_0</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RSTFIFO0_1</name>
                  <description>FIFO 0 is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RSTFIFO1</name>
              <description>Reset FIFO 1</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RSTFIFO1_0</name>
                  <description>No effect.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RSTFIFO1_1</name>
                  <description>FIFO 1 is reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAL_AVGS</name>
              <description>Auto-Calibration Averages</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CAL_AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>STAT</name>
          <description>ADC Status Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RDY0</name>
              <description>Result FIFO 0 Ready Flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RDY0_0</name>
                  <description>Result FIFO 0 data level not above watermark level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RDY0_1</name>
                  <description>Result FIFO 0 holding data above watermark level.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FOF0</name>
              <description>Result FIFO 0 Overflow Flag</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FOF0_0</name>
                  <description>No result FIFO 0 overflow has occurred since the last time the flag was cleared.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FOF0_1</name>
                  <description>At least one result FIFO 0 overflow has occurred since the last time the flag was cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RDY1</name>
              <description>Result FIFO1 Ready Flag</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RDY1_0</name>
                  <description>Result FIFO1 data level not above watermark level.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RDY1_1</name>
                  <description>Result FIFO1 holding data above watermark level.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FOF1</name>
              <description>Result FIFO1 Overflow Flag</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FOF1_0</name>
                  <description>No result FIFO1 overflow has occurred since the last time the flag was cleared.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FOF1_1</name>
                  <description>At least one result FIFO1 overflow has occurred since the last time the flag was cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TEXC_INT</name>
              <description>Interrupt Flag For High Priority Trigger Exception</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TEXC_INT_0</name>
                  <description>No trigger exceptions have occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_INT_1</name>
                  <description>A trigger exception has occurred and is pending acknowledgement.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCOMP_INT</name>
              <description>Interrupt Flag For Trigger Completion</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TCOMP_INT_0</name>
                  <description>Either IE[TCOMP_IE] is set to 0, or no trigger sequences have run to completion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_INT_1</name>
                  <description>Trigger sequence has been completed and all data is stored in the associated FIFO.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAL_RDY</name>
              <description>Calibration Ready</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CAL_RDY_0</name>
                  <description>Calibration is incomplete or hasn't been ran.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAL_RDY_1</name>
                  <description>The ADC is calibrated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_ACTIVE</name>
              <description>ADC Active</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC_ACTIVE_0</name>
                  <description>The ADC is IDLE. There are no pending triggers to service and no active commands are being processed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC_ACTIVE_1</name>
                  <description>The ADC is processing a conversion, running through the power up delay, or servicing a trigger.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRGACT</name>
              <description>Trigger Active</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRGACT_0</name>
                  <description>Command (sequence) associated with Trigger 0 currently being executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_1</name>
                  <description>Command (sequence) associated with Trigger 1 currently being executed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_2</name>
                  <description>Command (sequence) associated with Trigger 2 currently being executed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_3</name>
                  <description>Command (sequence) from the associated Trigger number is currently being executed.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_4</name>
                  <description>Command (sequence) from the associated Trigger number is currently being executed.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_5</name>
                  <description>Command (sequence) from the associated Trigger number is currently being executed.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_6</name>
                  <description>Command (sequence) from the associated Trigger number is currently being executed.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_7</name>
                  <description>Command (sequence) from the associated Trigger number is currently being executed.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_8</name>
                  <description>Command (sequence) from the associated Trigger number is currently being executed.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRGACT_9</name>
                  <description>Command (sequence) from the associated Trigger number is currently being executed.</description>
                  <value>0x9</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMDACT</name>
              <description>Command Active</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CMDACT_0</name>
                  <description>No command is currently in progress.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_1</name>
                  <description>Command 1 currently being executed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_2</name>
                  <description>Command 2 currently being executed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_3</name>
                  <description>Associated command number is currently being executed.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_4</name>
                  <description>Associated command number is currently being executed.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_5</name>
                  <description>Associated command number is currently being executed.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_6</name>
                  <description>Associated command number is currently being executed.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_7</name>
                  <description>Associated command number is currently being executed.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_8</name>
                  <description>Associated command number is currently being executed.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDACT_9</name>
                  <description>Associated command number is currently being executed.</description>
                  <value>0x9</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IE</name>
          <description>Interrupt Enable Register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FWMIE0</name>
              <description>FIFO 0 Watermark Interrupt Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FWMIE0_0</name>
                  <description>FIFO 0 watermark interrupts are not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FWMIE0_1</name>
                  <description>FIFO 0 watermark interrupts are enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FOFIE0</name>
              <description>Result FIFO 0 Overflow Interrupt Enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FOFIE0_0</name>
                  <description>FIFO 0 overflow interrupts are not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FOFIE0_1</name>
                  <description>FIFO 0 overflow interrupts are enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FWMIE1</name>
              <description>FIFO1 Watermark Interrupt Enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FWMIE1_0</name>
                  <description>FIFO1 watermark interrupts are not enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FWMIE1_1</name>
                  <description>FIFO1 watermark interrupts are enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FOFIE1</name>
              <description>Result FIFO1 Overflow Interrupt Enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FOFIE1_0</name>
                  <description>No result FIFO1 overflow has occurred since the last time the flag was cleared.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FOFIE1_1</name>
                  <description>At least one result FIFO1 overflow has occurred since the last time the flag was cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TEXC_IE</name>
              <description>Trigger Exception Interrupt Enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TEXC_IE_0</name>
                  <description>Trigger exception interrupts are disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_IE_1</name>
                  <description>Trigger exception interrupts are enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCOMP_IE</name>
              <description>Trigger Completion Interrupt Enable</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TCOMP_IE_0</name>
                  <description>Trigger completion interrupts are disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_1</name>
                  <description>Trigger completion interrupts are enabled for trigger source 0 only.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_2</name>
                  <description>Trigger completion interrupts are enabled for trigger source 1 only.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_3</name>
                  <description>Associated trigger completion interrupts are enabled.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_4</name>
                  <description>Associated trigger completion interrupts are enabled.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_5</name>
                  <description>Associated trigger completion interrupts are enabled.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_6</name>
                  <description>Associated trigger completion interrupts are enabled.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_7</name>
                  <description>Associated trigger completion interrupts are enabled.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_8</name>
                  <description>Associated trigger completion interrupts are enabled.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_9</name>
                  <description>Associated trigger completion interrupts are enabled.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_IE_65535</name>
                  <description>Trigger completion interrupts are enabled for every trigger source.</description>
                  <value>0xFFFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DE</name>
          <description>DMA Enable Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FWMDE0</name>
              <description>FIFO 0 Watermark DMA Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FWMDE0_0</name>
                  <description>DMA request disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FWMDE0_1</name>
                  <description>DMA request enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FWMDE1</name>
              <description>FIFO1 Watermark DMA Enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FWMDE1_0</name>
                  <description>DMA request disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FWMDE1_1</name>
                  <description>DMA request enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CFG</name>
          <description>ADC Configuration Register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x800000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TPRICTRL</name>
              <description>ADC trigger priority control</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TPRICTRL_0</name>
                  <description>If a higher priority trigger is detected during command processing, the current conversion is aborted and the new command specified by the trigger is started.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRICTRL_1</name>
                  <description>If a higher priority trigger is received during command processing, the current command is stopped after after completing the current conversion. If averaging is enabled, the averaging loop will be completed. However, CMDHa[LOOP] will be ignored and the higher priority trigger will be serviced.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRICTRL_2</name>
                  <description>If a higher priority trigger is received during command processing, the current command will be completed (averaging, looping, compare) before servicing the higher priority trigger.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWRSEL</name>
              <description>Power Configuration Select</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWRSEL_0</name>
                  <description>Lowest power setting.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWRSEL_1</name>
                  <description>Higher power setting than 0b0.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWRSEL_2</name>
                  <description>Higher power setting than 0b1.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWRSEL_3</name>
                  <description>Highest power setting.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REFSEL</name>
              <description>Voltage Reference Selection</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>REFSEL_0</name>
                  <description>(Default) Option 1 setting.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REFSEL_1</name>
                  <description>Option 2 setting.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REFSEL_2</name>
                  <description>Option 3 setting.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRES</name>
              <description>Trigger Resume Enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRES_0</name>
                  <description>Trigger sequences interrupted by a high priority trigger exception will not be automatically resumed or restarted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRES_1</name>
                  <description>Trigger sequences interrupted by a high priority trigger exception will be automatically resumed or restarted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCMDRES</name>
              <description>Trigger Command Resume</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TCMDRES_0</name>
                  <description>Trigger sequences interrupted by a high priority trigger exception will be automatically restarted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMDRES_1</name>
                  <description>Trigger sequences interrupted by a high priority trigger exception will be resumed from the command executing before the exception.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPT_EXDI</name>
              <description>High Priority Trigger Exception Disable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HPT_EXDI_0</name>
                  <description>High priority trigger exceptions are enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HPT_EXDI_1</name>
                  <description>High priority trigger exceptions are disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PUDLY</name>
              <description>Power Up Delay</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWREN</name>
              <description>ADC Analog Pre-Enable</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWREN_0</name>
                  <description>ADC analog circuits are only enabled while conversions are active. Performance is affected due to analog startup delays.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWREN_1</name>
                  <description>ADC analog circuits are pre-enabled and ready to execute conversions without startup delays (at the cost of higher DC current consumption). A single power up delay (CFG[PUDLY]) is executed immediately once PWREN is set, and any detected trigger does not begin ADC operation until the power up delay time has passed. After this initial delay expires the analog will remain pre-enabled, and no additional delays will be executed.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PAUSE</name>
          <description>ADC Pause Register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PAUSEDLY</name>
              <description>Pause Delay</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAUSEEN</name>
              <description>PAUSE Option Enable</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PAUSEEN_0</name>
                  <description>Pause operation disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAUSEEN_1</name>
                  <description>Pause operation enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SWTRIG</name>
          <description>Software Trigger Register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWT0</name>
              <description>Software trigger 0 event</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT0_0</name>
                  <description>No trigger 0 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT0_1</name>
                  <description>Trigger 0 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT1</name>
              <description>Software trigger 1 event</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT1_0</name>
                  <description>No trigger 1 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT1_1</name>
                  <description>Trigger 1 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT2</name>
              <description>Software trigger 2 event</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT2_0</name>
                  <description>No trigger 2 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT2_1</name>
                  <description>Trigger 2 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT3</name>
              <description>Software trigger 3 event</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT3_0</name>
                  <description>No trigger 3 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT3_1</name>
                  <description>Trigger 3 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT4</name>
              <description>Software trigger 4 event</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT4_0</name>
                  <description>No trigger 4 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT4_1</name>
                  <description>Trigger 4 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT5</name>
              <description>Software trigger 5 event</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT5_0</name>
                  <description>No trigger 5 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT5_1</name>
                  <description>Trigger 5 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT6</name>
              <description>Software trigger 6 event</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT6_0</name>
                  <description>No trigger 6 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT6_1</name>
                  <description>Trigger 6 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT7</name>
              <description>Software trigger 7 event</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT7_0</name>
                  <description>No trigger 7 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT7_1</name>
                  <description>Trigger 7 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT8</name>
              <description>Software trigger 8 event</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT8_0</name>
                  <description>No trigger 8 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT8_1</name>
                  <description>Trigger 8 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT9</name>
              <description>Software trigger 9 event</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT9_0</name>
                  <description>No trigger 9 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT9_1</name>
                  <description>Trigger 9 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT10</name>
              <description>Software trigger 10 event</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT10_0</name>
                  <description>No trigger 10 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT10_1</name>
                  <description>Trigger 10 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT11</name>
              <description>Software trigger 11 event</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT11_0</name>
                  <description>No trigger 11 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT11_1</name>
                  <description>Trigger 11 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT12</name>
              <description>Software trigger 12 event</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT12_0</name>
                  <description>No trigger 12 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT12_1</name>
                  <description>Trigger 12 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT13</name>
              <description>Software trigger 13 event</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT13_0</name>
                  <description>No trigger 13 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT13_1</name>
                  <description>Trigger 13 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT14</name>
              <description>Software trigger 14 event</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT14_0</name>
                  <description>No trigger 14 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT14_1</name>
                  <description>Trigger 14 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SWT15</name>
              <description>Software trigger 15 event</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SWT15_0</name>
                  <description>No trigger 15 event generated.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SWT15_1</name>
                  <description>Trigger 15 event generated.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TSTAT</name>
          <description>Trigger Status Register</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TEXC_NUM</name>
              <description>Trigger Exception Number</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TEXC_NUM_0</name>
                  <description>No triggers have been interrupted by a high priority exception. Or CFG[TRES] = 1.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_1</name>
                  <description>Trigger 0 has been interrupted by a high priority exception.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_2</name>
                  <description>Trigger 1 has been interrupted by a high priority exception.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_3</name>
                  <description>Associated trigger sequence has interrupted by a high priority exception.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_4</name>
                  <description>Associated trigger sequence has interrupted by a high priority exception.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_5</name>
                  <description>Associated trigger sequence has interrupted by a high priority exception.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_6</name>
                  <description>Associated trigger sequence has interrupted by a high priority exception.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_7</name>
                  <description>Associated trigger sequence has interrupted by a high priority exception.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_8</name>
                  <description>Associated trigger sequence has interrupted by a high priority exception.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_9</name>
                  <description>Associated trigger sequence has interrupted by a high priority exception.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEXC_NUM_65535</name>
                  <description>Every trigger sequence has been interrupted by a high priority exception.</description>
                  <value>0xFFFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCOMP_FLAG</name>
              <description>Trigger Completion Flag</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TCOMP_FLAG_0</name>
                  <description>No triggers have been completed. Trigger completion interrupts are disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_1</name>
                  <description>Trigger 0 has been completed and triger 0 has enabled completion interrupts.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_2</name>
                  <description>Trigger 1 has been completed and triger 1 has enabled completion interrupts.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_3</name>
                  <description>Associated trigger sequence has completed and has enabled completion interrupts.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_4</name>
                  <description>Associated trigger sequence has completed and has enabled completion interrupts.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_5</name>
                  <description>Associated trigger sequence has completed and has enabled completion interrupts.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_6</name>
                  <description>Associated trigger sequence has completed and has enabled completion interrupts.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_7</name>
                  <description>Associated trigger sequence has completed and has enabled completion interrupts.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_8</name>
                  <description>Associated trigger sequence has completed and has enabled completion interrupts.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_9</name>
                  <description>Associated trigger sequence has completed and has enabled completion interrupts.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCOMP_FLAG_65535</name>
                  <description>Every trigger sequence has been completed and every trigger has enabled completion interrupts.</description>
                  <value>0xFFFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OFSTRIM</name>
          <description>ADC Offset Trim Register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OFSTRIM_A</name>
              <description>Trim for offset</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFSTRIM_B</name>
              <description>Trim for offset</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TCTRL[%s]</name>
          <description>Trigger Control Register</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HTEN</name>
              <description>Trigger enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HTEN_0</name>
                  <description>Hardware trigger source disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HTEN_1</name>
                  <description>Hardware trigger source enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_SEL_A</name>
              <description>SAR Result Destination For Channel A</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_SEL_A_0</name>
                  <description>Result written to FIFO 0</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_SEL_A_1</name>
                  <description>Result written to FIFO 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_SEL_B</name>
              <description>SAR Result Destination For Channel B</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_SEL_B_0</name>
                  <description>Result written to FIFO 0</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_SEL_B_1</name>
                  <description>Result written to FIFO 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TPRI</name>
              <description>Trigger priority setting</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TPRI_0</name>
                  <description>Set to highest priority, Level 1</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_1</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_2</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_3</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_4</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_5</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_6</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_7</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_8</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_9</name>
                  <description>Set to corresponding priority level</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TPRI_15</name>
                  <description>Set to lowest priority, Level 16</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RSYNC</name>
              <description>Trigger Resync</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TDLY</name>
              <description>Trigger delay select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCMD</name>
              <description>Trigger command select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TCMD_0</name>
                  <description>Not a valid selection from the command buffer. Trigger event is ignored.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_1</name>
                  <description>CMD1 is executed</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_2</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_3</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_4</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_5</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_6</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_7</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_8</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_9</name>
                  <description>Corresponding CMD is executed</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCMD_15</name>
                  <description>CMD15 is executed</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>FCTRL[%s]</name>
          <description>FIFO Control Register</description>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FCOUNT</name>
              <description>Result FIFO counter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FWMARK</name>
              <description>Watermark level selection</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>GCC[%s]</name>
          <description>Gain Calibration Control</description>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_CAL</name>
              <description>Gain Calibration Value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RDY</name>
              <description>Gain Calibration Value Valid</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RDY_0</name>
                  <description>The gain calibration value is invalid. Run the auto-calibration routine for this value to be written.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RDY_1</name>
                  <description>The gain calibration value is valid. It should be used to update the GCRa[GCALR] register field.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>GCR[%s]</name>
          <description>Gain Calculation Result</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GCALR</name>
              <description>Gain Calculation Result</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDY</name>
              <description>Gain Calculation Ready</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RDY_0</name>
                  <description>The gain offset calculation value is invalid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RDY_1</name>
                  <description>The gain calibration value is valid.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL1</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH1</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMPEN</name>
              <description>Compare Function Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CMPEN_0</name>
                  <description>Compare disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_2</name>
                  <description>Compare enabled. Store on true.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_3</name>
                  <description>Compare enabled. Repeat channel acquisition (sample/convert/compare) until true.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL2</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH2</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMPEN</name>
              <description>Compare Function Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CMPEN_0</name>
                  <description>Compare disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_2</name>
                  <description>Compare enabled. Store on true.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_3</name>
                  <description>Compare enabled. Repeat channel acquisition (sample/convert/compare) until true.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL3</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH3</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMPEN</name>
              <description>Compare Function Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CMPEN_0</name>
                  <description>Compare disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_2</name>
                  <description>Compare enabled. Store on true.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_3</name>
                  <description>Compare enabled. Repeat channel acquisition (sample/convert/compare) until true.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL4</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH4</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMPEN</name>
              <description>Compare Function Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CMPEN_0</name>
                  <description>Compare disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_2</name>
                  <description>Compare enabled. Store on true.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPEN_3</name>
                  <description>Compare enabled. Repeat channel acquisition (sample/convert/compare) until true.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL5</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH5</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL6</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH6</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL7</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH7</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL8</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH8</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL9</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH9</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL10</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH10</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL11</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH11</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x154</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL12</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x158</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH12</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x15C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL13</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH13</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL14</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH14</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDL15</name>
          <description>ADC Command Low Buffer Register</description>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADCH</name>
              <description>Input channel select</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADCH_0</name>
                  <description>Select CH0A or CH0B or CH0A/CH0B pair.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_1</name>
                  <description>Select CH1A or CH1B or CH1A/CH1B pair.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_2</name>
                  <description>Select CH2A or CH2B or CH2A/CH2B pair.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_3</name>
                  <description>Select CH3A or CH3B or CH3A/CH3B pair.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_4</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_5</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_6</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_7</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_8</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_9</name>
                  <description>Select corresponding channel CHnA or CHnB or CHnA/CHnB pair.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_30</name>
                  <description>Select CH30A or CH30B or CH30A/CH30B pair.</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCH_31</name>
                  <description>Select CH31A or CH31B or CH31A/CH31B pair.</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTYPE</name>
              <description>Conversion Type</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CTYPE_0</name>
                  <description>Single-Ended Mode. Only A side channel is converted.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_1</name>
                  <description>Single-Ended Mode. Only B side channel is converted.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_2</name>
                  <description>Differential Mode. A-B.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTYPE_3</name>
                  <description>Dual-Single-Ended Mode. Both A side and B side channels are converted independently.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Select resolution of conversions</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Standard resolution. Single-ended 12-bit conversion; Differential 13-bit conversion with 2's complement output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>High resolution. Single-ended 16-bit conversion; Differential 16-bit conversion with 2's complement output.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMDH15</name>
          <description>ADC Command High Buffer Register</description>
          <addressOffset>0x174</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TRIG</name>
              <description>Wait for trigger assertion before execution.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WAIT_TRIG_0</name>
                  <description>This command will be automatically executed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAIT_TRIG_1</name>
                  <description>The active trigger must be asserted again before executing this command.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LWI</name>
              <description>Loop with Increment</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LWI_0</name>
                  <description>Auto channel increment disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LWI_1</name>
                  <description>Auto channel increment enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STS</name>
              <description>Sample Time Select</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STS_0</name>
                  <description>Minimum sample time of 3 ADCK cycles.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_1</name>
                  <description>3 + 21 ADCK cycles; 5 ADCK cycles total sample time.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_2</name>
                  <description>3 + 22 ADCK cycles; 7 ADCK cycles total sample time.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_3</name>
                  <description>3 + 23 ADCK cycles; 11 ADCK cycles total sample time.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_4</name>
                  <description>3 + 24 ADCK cycles; 19 ADCK cycles total sample time.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_5</name>
                  <description>3 + 25 ADCK cycles; 35 ADCK cycles total sample time.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_6</name>
                  <description>3 + 26 ADCK cycles; 67 ADCK cycles total sample time.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STS_7</name>
                  <description>3 + 27 ADCK cycles; 131 ADCK cycles total sample time.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVGS</name>
              <description>Hardware Average Select</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AVGS_0</name>
                  <description>Single conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_1</name>
                  <description>2 conversions averaged.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_2</name>
                  <description>4 conversions averaged.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_3</name>
                  <description>8 conversions averaged.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_4</name>
                  <description>16 conversions averaged.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_5</name>
                  <description>32 conversions averaged.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_6</name>
                  <description>64 conversions averaged.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AVGS_7</name>
                  <description>128 conversions averaged.</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Count Select</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOP_0</name>
                  <description>Looping not enabled. Command executes 1 time.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_1</name>
                  <description>Loop 1 time. Command executes 2 times.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_2</name>
                  <description>Loop 2 times. Command executes 3 times.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_3</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_4</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_5</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_6</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_7</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_8</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_9</name>
                  <description>Loop corresponding number of times. Command executes LOOP+1 times.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOP_15</name>
                  <description>Loop 15 times. Command executes 16 times.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEXT</name>
              <description>Next Command Select</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NEXT_0</name>
                  <description>No next command defined. Terminate conversions at completion of current command. If lower priority trigger pending, begin command associated with lower priority trigger.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_1</name>
                  <description>Select CMD1 command buffer register as next command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_2</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_3</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_4</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_5</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_6</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_7</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_8</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_9</name>
                  <description>Select corresponding CMD command buffer register as next command</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEXT_15</name>
                  <description>Select CMD15 command buffer register as next command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>1,2,3,4</dimIndex>
          <name>CV%s</name>
          <description>Compare Value Register</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CVL</name>
              <description>Compare Value Low.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CVH</name>
              <description>Compare Value High.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RESFIFO[%s]</name>
          <description>ADC Data Result FIFO Register</description>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>D</name>
              <description>Data result</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSRC</name>
              <description>Trigger Source</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TSRC_0</name>
                  <description>Trigger source 0 initiated this conversion.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_1</name>
                  <description>Trigger source 1 initiated this conversion.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_2</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_3</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_4</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_5</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_6</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_7</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_8</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_9</name>
                  <description>Corresponding trigger source initiated this conversion.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSRC_15</name>
                  <description>Trigger source 15 initiated this conversion.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOPCNT</name>
              <description>Loop count value</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOOPCNT_0</name>
                  <description>Result is from initial conversion in command.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_1</name>
                  <description>Result is from second conversion in command.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_2</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_3</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_4</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_5</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_6</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_7</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_8</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_9</name>
                  <description>Result is from LOOPCNT+1 conversion in command.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPCNT_15</name>
                  <description>Result is from 16th conversion in command.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMDSRC</name>
              <description>Command Buffer Source</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CMDSRC_0</name>
                  <description>Not a valid value CMDSRC value for a dataword in RESFIFO. 0x0 is only found in initial FIFO state prior to an ADC conversion result dataword being stored to a RESFIFO buffer.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_1</name>
                  <description>CMD1 buffer used as control settings for this conversion.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_2</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_3</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_4</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_5</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_6</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_7</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_8</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_9</name>
                  <description>Corresponding command buffer used as control settings for this conversion.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMDSRC_15</name>
                  <description>CMD15 buffer used as control settings for this conversion.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VALID</name>
              <description>FIFO entry is valid</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VALID_0</name>
                  <description>FIFO is empty. Discard any read from RESFIFO.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID_1</name>
                  <description>FIFO record read from RESFIFO is valid.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>33</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CAL_GAR[%s]</name>
          <description>Calibration General A-Side Registers</description>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAL_GAR_VAL</name>
              <description>Calibration General A Side Register Element</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>33</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CAL_GBR[%s]</name>
          <description>Calibration General B-Side Registers</description>
          <addressOffset>0x500</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CAL_GBR_VAL</name>
              <description>Calibration General B Side Register Element</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CDOG</name>
      <description>CDOG</description>
      <groupName>CDOG</groupName>
      <baseAddress>0x400A1000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x4C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CDOG</name>
        <value>60</value>
      </interrupt>
      <registers>
        <register>
          <name>CONTROL</name>
          <description>The control fields, which constitute CONTROL, control all controllable attributes of the module, including those of CONTROL itself.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x50092492</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOCK_CTRL</name>
              <description>Lock control field</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMEOUT_CTRL</name>
              <description>TIMEOUT control</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MISCOMPARE_CTRL</name>
              <description>MISCOMPARE control field</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQUENCE_CTRL</name>
              <description>SEQUENCE control field</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_CTRL</name>
              <description>CONTROL control field</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STATE_CTRL</name>
              <description>STATE control field</description>
              <bitOffset>14</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDRESS_CTRL</name>
              <description>ADDRESS control field</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRQ_PAUSE</name>
              <description>IRQ pause control field</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEBUG_HALT_CTRL</name>
              <description>DEBUG_HALT control field</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RELOAD</name>
          <description>Instruction timer reload</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RLOAD</name>
              <description>Inst. Timer reload value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INSTRUCTION_TIMER</name>
          <description>The INSTRUCTION TIMER itself</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTIM</name>
              <description>INSTRUCTION TIMER 32-bit value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SECURE_COUNTER</name>
          <description>Also known as SEC_CNT</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SECCNT</name>
              <description>Secure Counter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>Status register (1 of 2)</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NUMTOF</name>
              <description>Number of Timeout Faults</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMMISCOMPF</name>
              <description>Number of Miscompare Faults</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMILSEQF</name>
              <description>Number of illegal sequence faults</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CURST</name>
              <description>Current State</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS2</name>
          <description>STATUS register (2 of 2)</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NUMCNTF</name>
              <description>Number (of) control faults</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMILLSTF</name>
              <description>Number (of) state faults</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMILLA</name>
              <description>Number of (illegal) address faults</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLAGS</name>
          <description>Hardware flags</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TO_FLAG</name>
              <description>Timeout flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MISCOM_FLAG</name>
              <description>Miscompare flag</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ_FLAG</name>
              <description>Sequence flag</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_FLAG</name>
              <description>Control (fault) flag</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STATE_FLAG</name>
              <description>State flag</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_FLAG</name>
              <description>Address flag</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POR_FLAG</name>
              <description>Power-on reset flag</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERSISTENT</name>
          <description>Persistent (Ad. Hoc., quasi-NV) data storage</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PERSIS</name>
              <description>32 regs free for user SW to enjoy</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>START</name>
          <description>Write address for issuing the START command.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>STRT</name>
              <description>Address of start command access</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STOP</name>
          <description>Write address for issuing the STOP command.</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>STP</name>
              <description>Address of stop command access</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RESTART</name>
          <description>Write address for issuing the RESTART command.</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSTRT</name>
              <description>Write address for issuing the RESTART command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADD</name>
          <description>Write address for issuing the ADD command.</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AD</name>
              <description>Address of ADD command</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADD1</name>
          <description>Write address for issuing the ADD1 command.</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AD1</name>
              <description>Address of ADD1 command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADD16</name>
          <description>Write address for issuing the ADD16 command.</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AD16</name>
              <description>Address of ADD16</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADD256</name>
          <description>Write address for issuing the ADD16 command.</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AD256</name>
              <description>Address of ADD256 command</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUB</name>
          <description>Write address for issuing the SUB command.</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>S0B</name>
              <description>Address of SUB command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUB1</name>
          <description>Write address for issuing the SUB1 command.</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>S1B</name>
              <description>Address of SUB1 command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUB16</name>
          <description>Write address for issuing the SUB16 command.</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SB16</name>
              <description>Address of SUB16 command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUB256</name>
          <description>Write address for issuing the SUB256 command.</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SB256</name>
              <description>Address of (you guessed it) SUB256 command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USBFSH</name>
      <description>USB0 Full-speed Host controller</description>
      <groupName>USBFSH</groupName>
      <baseAddress>0x400A2000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x60</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USB0_NEEDCLK</name>
        <value>27</value>
      </interrupt>
      <interrupt>
        <name>USB0</name>
        <value>28</value>
      </interrupt>
      <registers>
        <register>
          <name>HCREVISION</name>
          <description>BCD representation of the version of the HCI specification that is implemented by the Host Controller (HC)</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>REV</name>
              <description>Revision.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCONTROL</name>
          <description>Defines the operating modes of the HC</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>CBSR</name>
              <description>ControlBulkServiceRatio.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLE</name>
              <description>PeriodicListEnable.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>IsochronousEnable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLE</name>
              <description>ControlListEnable.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLE</name>
              <description>BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HCFS</name>
              <description>HostControllerFunctionalState for USB 00b: USBRESET 01b: USBRESUME 10b: USBOPERATIONAL 11b: USBSUSPEND A transition to USBOPERATIONAL from another state causes SOFgeneration to begin 1 ms later.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IR</name>
              <description>InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RWC</name>
              <description>RemoteWakeupConnected This bit indicates whether HC supports remote wake-up signaling.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RWE</name>
              <description>RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wake-up feature upon the detection of upstream resume signaling.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCOMMANDSTATUS</name>
          <description>This register is used to receive the commands from the Host Controller Driver (HCD)</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>HCR</name>
              <description>HostControllerReset This bit is set by HCD to initiate a software reset of HC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLF</name>
              <description>ControlListFilled This bit is used to indicate whether there are any TDs on the Control list.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLF</name>
              <description>BulkListFilled This bit is used to indicate whether there are any TDs on the Bulk list.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCR</name>
              <description>OwnershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOC</name>
              <description>SchedulingOverrunCount These bits are incremented on each scheduling overrun error.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTERRUPTSTATUS</name>
          <description>Indicates the status on various events that cause hardware interrupts by setting the appropriate bits</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFC7F</resetMask>
          <fields>
            <field>
              <name>SO</name>
              <description>SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of HccaFrameNumber.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDH</name>
              <description>WritebackDoneHead This bit is set immediately after HC has written HcDoneHead to HccaDoneHead.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SF</name>
              <description>StartofFrame This bit is set by HC at each start of a frame and after the update of HccaFrameNumber.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RD</name>
              <description>ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UE</name>
              <description>UnrecoverableError This bit is set when HC detects a system error not related to USB.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FNO</name>
              <description>FrameNumberOverflow This bit is set when the MSb of HcFmNumber (bit 15) changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been updated.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RHSC</name>
              <description>RootHubStatusChange This bit is set when the content of HcRhStatus or the content of any of HcRhPortStatus[NumberofDownstreamPort] has changed.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC</name>
              <description>OwnershipChange This bit is set by HC when HCD sets the OwnershipChangeRequest field in HcCommandStatus.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTERRUPTENABLE</name>
          <description>Controls the bits in the HcInterruptStatus register and indicates which events will generate a hardware interrupt</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC000007F</resetMask>
          <fields>
            <field>
              <name>SO</name>
              <description>Scheduling Overrun interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDH</name>
              <description>HcDoneHead Writeback interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SF</name>
              <description>Start of Frame interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RD</name>
              <description>Resume Detect interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UE</name>
              <description>Unrecoverable Error interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FNO</name>
              <description>Frame Number Overflow interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RHSC</name>
              <description>Root Hub Status Change interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC</name>
              <description>Ownership Change interrupt.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MIE</name>
              <description>Master Interrupt Enable.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTERRUPTDISABLE</name>
          <description>The bits in this register are used to disable corresponding bits in the HCInterruptStatus register and in turn disable that event leading to hardware interrupt</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xC000007F</resetMask>
          <fields>
            <field>
              <name>SO</name>
              <description>Scheduling Overrun interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDH</name>
              <description>HcDoneHead Writeback interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SF</name>
              <description>Start of Frame interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RD</name>
              <description>Resume Detect interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UE</name>
              <description>Unrecoverable Error interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FNO</name>
              <description>Frame Number Overflow interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RHSC</name>
              <description>Root Hub Status Change interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC</name>
              <description>Ownership Change interrupt.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MIE</name>
              <description>A 0 written to this field is ignored by HC.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCHCCA</name>
          <description>Contains the physical address of the host controller communication area</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>HCCA</name>
              <description>Base address of the Host Controller Communication Area.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCPERIODCURRENTED</name>
          <description>Contains the physical address of the current isochronous or interrupt endpoint descriptor</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFF0</resetMask>
          <fields>
            <field>
              <name>PCED</name>
              <description>The content of this register is updated by HC after a periodic ED is processed.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCONTROLHEADED</name>
          <description>Contains the physical address of the first endpoint descriptor of the control list</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFF0</resetMask>
          <fields>
            <field>
              <name>CHED</name>
              <description>HC traverses the Control list starting with the HcControlHeadED pointer.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCONTROLCURRENTED</name>
          <description>Contains the physical address of the current endpoint descriptor of the control list</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFF0</resetMask>
          <fields>
            <field>
              <name>CCED</name>
              <description>ControlCurrentED.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCBULKHEADED</name>
          <description>Contains the physical address of the first endpoint descriptor of the bulk list</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFF0</resetMask>
          <fields>
            <field>
              <name>BHED</name>
              <description>BulkHeadED HC traverses the bulk list starting with the HcBulkHeadED pointer.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCBULKCURRENTED</name>
          <description>Contains the physical address of the current endpoint descriptor of the bulk list</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFF0</resetMask>
          <fields>
            <field>
              <name>BCED</name>
              <description>BulkCurrentED This is advanced to the next ED after the HC has served the current one.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDONEHEAD</name>
          <description>Contains the physical address of the last transfer descriptor added to the 'Done' queue</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFF0</resetMask>
          <fields>
            <field>
              <name>DH</name>
              <description>DoneHead When a TD is completed, HC writes the content of HcDoneHead to the NextTD field of the TD.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCFMINTERVAL</name>
          <description>Defines the bit time interval in a frame and the full speed maximum packet size which would not cause an overrun</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x2EDF</resetValue>
          <resetMask>0xFFFF3FFF</resetMask>
          <fields>
            <field>
              <name>FI</name>
              <description>FrameInterval This specifies the interval between two consecutive SOFs in bit times.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FSMPS</name>
              <description>FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIT</name>
              <description>FrameIntervalToggle HCD toggles this bit whenever it loads a new value to FrameInterval.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCFMREMAINING</name>
          <description>A 14-bit counter showing the bit time remaining in the current frame</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x80003FFF</resetMask>
          <fields>
            <field>
              <name>FR</name>
              <description>FrameRemaining This counter is decremented at each bit time.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRT</name>
              <description>FrameRemainingToggle This bit is loaded from the FrameIntervalToggle field of HcFmInterval whenever FrameRemaining reaches 0.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCFMNUMBER</name>
          <description>Contains a 16-bit counter and provides the timing reference among events happening in the HC and the HCD</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FN</name>
              <description>FrameNumber This is incremented when HcFmRemaining is re-loaded.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCPERIODICSTART</name>
          <description>Contains a programmable 14-bit value which determines the earliest time HC should start processing a periodic list</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PS</name>
              <description>PeriodicStart After a hardware reset, this field is cleared and then set by HCD during the HC initialization.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCLSTHRESHOLD</name>
          <description>Contains 11-bit value which is used by the HC to determine whether to commit to transfer a maximum of 8-byte LS packet before EOF</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x628</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>LST</name>
              <description>LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCRHDESCRIPTORA</name>
          <description>First of the two registers which describes the characteristics of the root hub</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF000902</resetValue>
          <resetMask>0xFF001FFF</resetMask>
          <fields>
            <field>
              <name>NDP</name>
              <description>NumberDownstreamPorts These bits specify the number of downstream ports supported by the root hub.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSM</name>
              <description>PowerSwitchingMode This bit is used to specify how the power switching of the root hub ports is controlled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NPS</name>
              <description>NoPowerSwitching These bits are used to specify whether power switching is supported or port are always powered.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT</name>
              <description>DeviceType This bit specifies that the root hub is not a compound device.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCPM</name>
              <description>OverCurrentProtectionMode This bit describes how the overcurrent status for the root hub ports are reported.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOCP</name>
              <description>NoOverCurrentProtection This bit describes how the overcurrent status for the root hub ports are reported.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POTPGT</name>
              <description>PowerOnToPowerGoodTime This byte specifies the duration the HCD has to wait before accessing a powered-on port of the root hub.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCRHDESCRIPTORB</name>
          <description>Second of the two registers which describes the characteristics of the Root Hub</description>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR</name>
              <description>DeviceRemovable Each bit is dedicated to a port of the Root Hub.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PPCM</name>
              <description>PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCRHSTATUS</name>
          <description>This register is divided into two parts</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x80038003</resetMask>
          <fields>
            <field>
              <name>LPS</name>
              <description>(read) LocalPowerStatus The Root Hub does not support the local power status feature; thus, this bit is always read as 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCI</name>
              <description>OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRWE</name>
              <description>(read) DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPSC</name>
              <description>(read) LocalPowerStatusChange The root hub does not support the local power status feature.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCIC</name>
              <description>OverCurrentIndicatorChange This bit is set by hardware when a change has occurred to the OCI field of this register.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRWE</name>
              <description>(write) ClearRemoteWakeupEnable Writing a 1 clears DeviceRemoveWakeupEnable.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCRHPORTSTATUS</name>
          <description>Controls and reports the port events on a per-port basis</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F031F</resetMask>
          <fields>
            <field>
              <name>CCS</name>
              <description>(read) CurrentConnectStatus This bit reflects the current state of the downstream port.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PES</name>
              <description>(read) PortEnableStatus This bit indicates whether the port is enabled or disabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSS</name>
              <description>(read) PortSuspendStatus This bit indicates the port is suspended or in the resume sequence.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POCI</name>
              <description>(read) PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRS</name>
              <description>(read) PortResetStatus When this bit is set by a write to SetPortReset, port reset signaling is asserted.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PPS</name>
              <description>(read) PortPowerStatus This bit reflects the porta's power status, regardless of the type of power switching implemented.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSDA</name>
              <description>(read) LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC</name>
              <description>ConnectStatusChange This bit is set whenever a connect or disconnect event occurs.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PESC</name>
              <description>PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be cleared.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSSC</name>
              <description>PortSuspendStatusChange This bit is set when the full resume sequence is completed.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCIC</name>
              <description>PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRSC</name>
              <description>PortResetStatusChange This bit is set at the end of the 10 ms port reset signal.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PORTMODE</name>
          <description>Controls the port if it is attached to the host block or the device block</description>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x10101</resetMask>
          <fields>
            <field>
              <name>ID</name>
              <description>Port ID pin value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_EN</name>
              <description>Port ID pin pull-up enable.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_ENABLE</name>
              <description>1: device 0: host.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USBHSH</name>
      <description>USB1 High-speed Host Controller</description>
      <groupName>USBHSH</groupName>
      <baseAddress>0x400A3000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x54</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USB1</name>
        <value>47</value>
      </interrupt>
      <interrupt>
        <name>USB1_NEEDCLK</name>
        <value>48</value>
      </interrupt>
      <registers>
        <register>
          <name>CAPLENGTH_CHIPID</name>
          <description>This register contains the offset value towards the start of the operational register space and the version number of the IP block</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x1010010</resetValue>
          <resetMask>0xFFFF00FF</resetMask>
          <fields>
            <field>
              <name>CAPLENGTH</name>
              <description>Capability Length: This is used as an offset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CHIPID</name>
              <description>Chip identification: indicates major and minor revision of the IP: [31:24] = Major revision [23:16] = Minor revision Major revisions used: 0x01: USB2.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSPARAMS</name>
          <description>Host Controller Structural Parameters</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x10011</resetValue>
          <resetMask>0x1001F</resetMask>
          <fields>
            <field>
              <name>N_PORTS</name>
              <description>This register specifies the number of physical downstream ports implemented on this host controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PPC</name>
              <description>This field indicates whether the host controller implementation includes port power control.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>P_INDICATOR</name>
              <description>This bit indicates whether the ports support port indicator control.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCPARAMS</name>
          <description>Host Controller Capability Parameters</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x20006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LPMC</name>
              <description>Link Power Management Capability.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLADJ_FRINDEX</name>
          <description>Frame Length Adjustment</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x20</resetValue>
          <resetMask>0x3FFF003F</resetMask>
          <fields>
            <field>
              <name>FLADJ</name>
              <description>Frame Length Timing Value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRINDEX</name>
              <description>Frame Index: Bits 29 to16 in this register are used for the frame number field in the SOF packet.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ATLPTD</name>
          <description>Memory base address where ATL PTD0 is stored</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFF0</resetMask>
          <fields>
            <field>
              <name>ATL_CUR</name>
              <description>This indicates the current PTD that is used by the hardware when it is processing the ATL list.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATL_BASE</name>
              <description>Base address to be used by the hardware to find the start of the ATL list.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISOPTD</name>
          <description>Memory base address where ISO PTD0 is stored</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFE0</resetMask>
          <fields>
            <field>
              <name>ISO_FIRST</name>
              <description>This indicates the first PTD that is used by the hardware when it is processing the ISO list.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISO_BASE</name>
              <description>Base address to be used by the hardware to find the start of the ISO list.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTPTD</name>
          <description>Memory base address where INT PTD0 is stored</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFE0</resetMask>
          <fields>
            <field>
              <name>INT_FIRST</name>
              <description>This indicates the first PTD that is used by the hardware when it is processing the INT list.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_BASE</name>
              <description>Base address to be used by the hardware to find the start of the INT list.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATAPAYLOAD</name>
          <description>Memory base address that indicates the start of the data payload buffers</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFF0000</resetMask>
          <fields>
            <field>
              <name>DAT_BASE</name>
              <description>Base address to be used by the hardware to find the start of the data payload section.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBCMD</name>
          <description>USB Command register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F00078F</resetMask>
          <fields>
            <field>
              <name>RS</name>
              <description>Run/Stop: 1b = Run.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HCRESET</name>
              <description>Host Controller Reset: This control bit is used by the software to reset the host controller.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLS</name>
              <description>Frame List Size: This field specifies the size of the frame list.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LHCR</name>
              <description>Light Host Controller Reset: This bit allows the driver software to reset the host controller without affecting the state of the ports.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATL_EN</name>
              <description>ATL List enabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISO_EN</name>
              <description>ISO List enabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_EN</name>
              <description>INT List enabled.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HIRD</name>
              <description>Host-Initiated Resume Duration.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPM_RWU</name>
              <description>bRemoteWake field.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBSTS</name>
          <description>USB Interrupt Status register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF000C</resetMask>
          <fields>
            <field>
              <name>PCD</name>
              <description>Port Change Detect: The host controller sets this bit to logic 1 when any port has a change bit transition from a 0 to a one or a Force Port Resume bit transition from a 0 to a 1 as a result of a J-K transition detected on a suspended port.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLR</name>
              <description>Frame List Rollover: The host controller sets this bit to logic 1 when the frame list index rolls over its maximum value to 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATL_IRQ</name>
              <description>ATL IRQ: Indicates that an ATL PTD (with I-bit set) was completed.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISO_IRQ</name>
              <description>ISO IRQ: Indicates that an ISO PTD (with I-bit set) was completed.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_IRQ</name>
              <description>INT IRQ: Indicates that an INT PTD (with I-bit set) was completed.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOF_IRQ</name>
              <description>SOF interrupt: Every time when the host sends a Start of Frame token on the USB bus, this bit is set.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBINTR</name>
          <description>USB Interrupt Enable register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF000C</resetMask>
          <fields>
            <field>
              <name>PCDE</name>
              <description>Port Change Detect Interrupt Enable: 1: enable 0: disable.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLRE</name>
              <description>Frame List Rollover Interrupt Enable: 1: enable 0: disable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATL_IRQ_E</name>
              <description>ATL IRQ Enable bit: 1: enable 0: disable.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISO_IRQ_E</name>
              <description>ISO IRQ Enable bit: 1: enable 0: disable.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_IRQ_E</name>
              <description>INT IRQ Enable bit: 1: enable 0: disable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOF_E</name>
              <description>SOF Interrupt Enable bit: 1: enable 0: disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PORTSC1</name>
          <description>Port Status and Control register</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFDFFF</resetMask>
          <fields>
            <field>
              <name>CCS</name>
              <description>Current Connect Status: Logic 1 indicates a device is present on the port.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC</name>
              <description>Connect Status Change: Logic 1 means that the value of CCS has changed.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PED</name>
              <description>Port Enabled/Disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEDC</name>
              <description>Port Enabled/Disabled Change: Logic 1 means that the value of PED has changed.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCA</name>
              <description>Over-current active: Logic 1 means that this port has an over-current condition.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCC</name>
              <description>Over-current change: Logic 1 means that the value of OCA has changed.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FPR</name>
              <description>Force Port Resume: Logic 1 means resume (K-state) detected or driven on the port.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUSP</name>
              <description>Suspend: Logic 1 means port is in the suspend state.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PR</name>
              <description>Port Reset: Logic 1 means the port is in the reset state.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUS_L1</name>
              <description>Suspend using L1 0b = Suspend using L2 1b = Suspend using L1 When this bit is set to a 1 and a non-zero value is specified in the Device Address field, the host controller will generate an LPM Token to enter the L1 state whenever software writes a one to the Suspend bit, as well as L1 exit timing during any device or host-initiated resume.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LS</name>
              <description>Line Status: This field reflects the current logical levels of the DP (bit 11) and DM (bit 10) signal lines.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PP</name>
              <description>Port Power: The function of this bit depends on the value of the Port Power Control (PPC) bit in the HCSPARAMS register.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIC</name>
              <description>Port Indicator Control : Writing to this field has no effect if the P_INDICATOR bit in the HCSPARAMS register is logic 0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PTC</name>
              <description>Port Test Control: A non-zero value indicates that the port is operating in the test mode as indicated by the value.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSPD</name>
              <description>Port Speed: 00b: Low-speed 01b: Full-speed 10b: High-speed 11b: Reserved.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WOO</name>
              <description>Wake on overcurrent enable: Writing this bit to a one enables the port to be sensitive to overcurrent conditions as wake-up events.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUS_STAT</name>
              <description>These two bits are used by software to determine whether the most recent L1 suspend request was successful: 00b: Success-state transition was successful (ACK) 01b: Not Yet - Device was unable to enter the L1 state at this time (NYET) 10b: Not supported - Device does not support the L1 state (STALL) 11b: Timeout/Error - Device failed to respond or an error occurred.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEV_ADD</name>
              <description>Device Address for LPM tokens.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ATLPTDD</name>
          <description>Done map for each ATL PTD</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATL_DONE</name>
              <description>The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ATLPTDS</name>
          <description>Skip map for each ATL PTD</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATL_SKIP</name>
              <description>When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISOPTDD</name>
          <description>Done map for each ISO PTD</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ISO_DONE</name>
              <description>The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISOPTDS</name>
          <description>Skip map for each ISO PTD</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ISO_SKIP</name>
              <description>The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTPTDD</name>
          <description>Done map for each INT PTD</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_DONE</name>
              <description>The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTPTDS</name>
          <description>Skip map for each INT PTD</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_SKIP</name>
              <description>When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LASTPTD</name>
          <description>Marks the last PTD in the list for ISO, INT and ATL</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1F1F1F</resetMask>
          <fields>
            <field>
              <name>ATL_LAST</name>
              <description>If hardware has reached this PTD and the J bit is not set, it will go to PTD0 as the next PTD to be processed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISO_LAST</name>
              <description>This indicates the last PTD in the ISO list.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_LAST</name>
              <description>This indicates the last PTD in the INT list.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PORTMODE</name>
          <description>Controls the port if it is attached to the host block or the device block</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x40000</resetValue>
          <resetMask>0xD0101</resetMask>
          <fields>
            <field>
              <name>DEV_ENABLE</name>
              <description>If this bit is set to one, one of the ports will behave as a USB device.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_CTRL_PDCOM</name>
              <description>This bit indicates if the PHY power-down input is controlled by software or by hardware.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_PDCOM</name>
              <description>This bit is only used when SW_CTRL_PDCOM is set to 1b.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>HASHCRYPT</name>
      <description>Hash-Crypt peripheral</description>
      <groupName>HASHCRYPT</groupName>
      <baseAddress>0x400A4000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xDC</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>HASHCRYPT</name>
        <value>54</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>Control register to enable and operate Hash and Crypto</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3337</resetMask>
          <fields>
            <field>
              <name>Mode</name>
              <description>The operational mode to use, or 0 if none. Note that the CONFIG register will indicate if specific modes beyond SHA1 and SHA2-256 are available.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHA1</name>
                  <description>SHA1 is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHA2_256</name>
                  <description>SHA2-256 is enabled</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AES</name>
                  <description>AES if available (see also CRYPTCFG register for more controls)</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>New_Hash</name>
              <description>Written with 1 when starting a new Hash/Crypto. It self clears. Note that the WAITING Status bit will clear for a cycle during the initialization from New=1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>START</name>
                  <description>Starts a new Hash/Crypto and initializes the Digest/Result.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Reload</name>
              <description>If 1, allows the SHA RELOAD registers to be used. This is used to save a partial Hash Digest (e.g. when need to run AES) and then reload it later for continuation.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELOAD</name>
                  <description>Allow RELOAD registers to be used.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_I</name>
              <description>Written with 1 to use DMA to fill INDATA. If Hash, will request from DMA for 16 words and then will process the Hash. If Cryptographic, it will load as many words as needed, including key if not already loaded. It will then request again. Normal model is that the DMA interrupts the processor when its length expires. Note that if the processor will write the key and optionally IV, it should not enable this until it has done so. Otherwise, the DMA will be expected to load those for the 1st block (when needed).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_USED</name>
                  <description>DMA is not used. Processor writes the necessary words when WAITING is set (interrupts), unless AHB Master is used.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PUSH</name>
                  <description>DMA will push in the data.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_O</name>
              <description>Written to 1 to use DMA to drain the digest/output. If both DMA_I and DMA_O are set, the DMA has to know to switch direction and the locations. This can be used for crypto uses.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOTUSED</name>
                  <description>DMA is not used. Processor reads the digest/output in response to DIGEST interrupt.</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASHSWPB</name>
              <description>If 1, will swap bytes in the word for SHA hashing. The default is byte order (so LSB is 1st byte) but this allows swapping to MSB is 1st such as is shown in SHS spec. For cryptographic swapping, see the CRYPTCFG register.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AESFLUSH</name>
              <description>Flushes the AES engine registers. This bit self clears.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOFLUSH</name>
                  <description>Do not flush the AES engine registers.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLUSH</name>
                  <description>Flush the AES engine registers.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>Indicates status of Hash peripheral.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x1500</resetValue>
          <resetMask>0x3F3737</resetMask>
          <fields>
            <field>
              <name>WAITING</name>
              <description>If 1, the block is waiting for more data to process.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_WAITING</name>
                  <description>Not waiting for data - may be disabled or may be busy. Note that for cryptographic uses, this is not set if IsLast is set nor will it set until at least 1 word is read of the output.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WAITING</name>
                  <description>Waiting for data to be written in (16 words)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGEST</name>
              <description>For Hash, if 1 then a DIGEST is ready and waiting and there is no active next block already started. For Cryptographic uses, this will be set for each block processed, indicating OUTDATA (and OUTDATA2 if larger output) contains the next value to read out. This is cleared when any data is written, when New is written, for Cryptographic uses when the last word is read out, or when the block is disabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>No Digest is ready</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Digest is ready. Application may read it or may write more data</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERROR</name>
              <description>If 1, an error occurred. For normal uses, this is due to an attempted overrun: INDATA was written when it was not appropriate. For Master cases, this is an AHB bus error; the COUNT field will indicate which block it was on.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>No error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>An error occurred since last cleared (written 1 to clear).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FAULT</name>
              <description>Indicates if an AES or PRNG fault has occurred</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_FAULT</name>
                  <description>No AES or PRNG fault has occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAULT</name>
                  <description>An AES or PRNG fault has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEEDKEY</name>
              <description>Indicates the block wants the key to be written in (set along with WAITING)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_NEED</name>
                  <description>No Key is needed and writes will not be treated as Key</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEED</name>
                  <description>Key is needed and INDATA/ALIAS will be accepted as Key. Will also set WAITING.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEEDIV</name>
              <description>Indicates the block wants an IV/NONE to be written in (set along with WAITING)</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_NEED</name>
                  <description>No IV/Nonce is needed, either because written already or because not needed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NEED</name>
                  <description>IV/Nonce is needed and INDATA/ALIAS will be accepted as IV/Nonce. Will also set WAITING.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AESFAULT</name>
              <description>AES fault status</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_FAULT</name>
                  <description>No AES fault has occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAULT</name>
                  <description>An AES fault has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRNGFAULT</name>
              <description>PRNG fault status</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_FAULT</name>
                  <description>No PRNG fault has occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FAULT</name>
                  <description>A PRNG fault has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENSET</name>
          <description>Write 1 to enable interrupts; reads back with which are set.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>WAITING</name>
              <description>Indicates if should interrupt when waiting for data input.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_INTERRUPT</name>
                  <description>Will not interrupt when waiting.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INTERRUPT</name>
                  <description>Will interrupt when waiting</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIGEST</name>
              <description>Indicates if should interrupt when Digest (or Outdata) is ready (completed a hash/crypto or completed a full sequence).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_INTERRUPT</name>
                  <description>Will not interrupt when Digest is ready</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INTERRUPT</name>
                  <description>Will interrupt when Digest is ready. Interrupt cleared by writing more data, starting a new Hash, or disabling (done).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERROR</name>
              <description>Indicates if should interrupt on an ERROR (as defined in Status)</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_INTERRUPT</name>
                  <description>Will not interrupt on Error.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INTERRUPT</name>
                  <description>Will interrupt on Error (until cleared).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FAULT</name>
              <description>Indicates if should interrupt on an AES or PRNG fault as indicated in the STATUS register</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_INTERRUPT</name>
                  <description>No interrupt on an AES or PRNG fault</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INTERRUPT</name>
                  <description>Interrupt on an AES or PRNG fault</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENCLR</name>
          <description>Write 1 to clear interrupts.</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>WAITING</name>
              <description>Write 1 to clear mask.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DIGEST</name>
              <description>Write 1 to clear mask.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ERROR</name>
              <description>Write 1 to clear mask.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FAULT</name>
              <description>Write 1 to clear mask.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MEMCTRL</name>
          <description>Setup Master to access memory (if available)</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x7FF0001</resetMask>
          <fields>
            <field>
              <name>MASTER</name>
              <description>Enables mastering.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_USED</name>
                  <description>Mastering is not used and the normal DMA or Interrupt based model is used with INDATA.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Mastering is enabled and DMA and INDATA should not be used.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COUNT</name>
              <description>Number of 512-bit (128-bit if AES, except 1st block which may include key and IV) blocks to copy starting at MEMADDR. This register will decrement after each block is copied, ending in 0. For Hash, the DIGEST interrupt will occur when it reaches 0. Fro AES, the DIGEST/OUTDATA interrupt will occur on ever block. If a bus error occurs, it will stop with this field set to the block that failed. 0:Done - nothing to process. 1 to 2K: Number of 512-bit (or 128bit) blocks to hash.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEMADDR</name>
          <description>Address to start memory access from (if available).</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BASE</name>
              <description>Address base to start copying from, word aligned (so bits 1:0 must be 0). This field will advance as it processes the words. If it fails with a bus error, the register will contain the failing word. N:Address in Flash or RAM space; RAM only as mapped in this part. May also be able to address SPIFI.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INDATA</name>
          <description>Input of 16 words at a time to load up buffer.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Write next word in little-endian form. The hash requires big endian word data, but this block swaps the bytes automatically. That is, SHA assumes the data coming in is treated as bytes (e.g. &quot;abcd&quot;) and since the ARM core will treat &quot;abcd&quot; as a word as 0x64636261, the block will swap the word to restore into big endian.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>7</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ALIAS[%s]</name>
          <description>Aliases to allow writing words in a burst.</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DATA</name>
              <description>Write next word in little-endian form. The hash requires big endian word data, but this block swaps the bytes automatically. That is, SHA assumes the data coming in is treated as bytes (e.g. &quot;abcd&quot;) and since the ARM core will treat &quot;abcd&quot; as a word as 0x64636261, the block will swap the word to restore into big endian.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>DIGEST0[%s]</name>
          <description>Result digest (when status says so): Is 1st 5 words if SHA1 used Is all 8 words if SHA2 used Is all 8 words if crypto or SHA512</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DIGEST</name>
              <description>One word of the Digest or output. Note that only 1st 4 are populated for AES and 1st 5 are populated for SHA1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRYPTCFG</name>
          <description>Crypto settings for AES and Salsa and ChaCha</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xF31FFF</resetMask>
          <fields>
            <field>
              <name>MSW1ST_OUT</name>
              <description>If 1, OUTDATA0 will be read Most significant word 1st for AES. Else it will be read in normal little endian - Least significant word 1st. Note: only if allowed by configuration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWAPKEY</name>
              <description>If 1, will Swap the key input (bytes in each word).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWAPDAT</name>
              <description>If 1, will SWAP the data and IV inputs (bytes in each word).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSW1ST</name>
              <description>If 1, load of key, IV, and data is MSW 1st for AES. Else, the words are little endian. Note: only if allowed by configuration.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AESMODE</name>
              <description>AES Cipher mode to use if plain AES</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECB</name>
                  <description>ECB - used as is</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CBC</name>
                  <description>CBC mode (see details on IV/nonce)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTR</name>
                  <description>CTR mode (see details on IV/nonce). See also AESCTRPOS.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AESDECRYPT</name>
              <description>AES ECB direction. Only encryption used if CTR mode or manual modes such as CFB</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENCRYPT</name>
                  <description>Encrypt</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DECRYPT</name>
                  <description>Decrypt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AESSECRET</name>
              <description>Selects the Hidden Secret key vs. User key, if provided. If security levels are used, only the highest level is permitted to select this.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL_WAY</name>
                  <description>User key provided in normal way</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIDDEN_WAY</name>
                  <description>Secret key provided in hidden way by HW</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AESKEYSZ</name>
              <description>Sets the AES key size</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BITS_128</name>
                  <description>128 bit key</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BITS_192</name>
                  <description>192 bit key</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BITS_256</name>
                  <description>256 bit key</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AESCTRPOS</name>
              <description>Halfword position of 16b counter in IV if AESMODE is CTR (position is fixed for Salsa and ChaCha). Only supports 16b counter, so application must control any additional bytes if using more. The 16-bit counter is read from the IV and incremented by 1 each time. Any other use CTR should use ECB directly and do its own XOR and so on.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STREAMLAST</name>
              <description>Is 1 if last stream block. If not 1, then the engine will compute the next &quot;hash&quot;.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFIG</name>
          <description>Returns the configuration of this block in this chip - indicates what services are available.</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DUAL</name>
              <description>1 if 2 x 512 bit buffers, 0 if only 1 x 512 bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA</name>
              <description>1 if DMA is connected</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AHB</name>
              <description>1 if AHB Master is enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AES</name>
              <description>1 if AES 128 included</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AESKEY</name>
              <description>1 if AES 192 and 256 also included</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECRET</name>
              <description>1 if AES Secret key available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOCK</name>
          <description>Lock register allows locking to the current security level or unlocking by the lock holding level.</description>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFF3</resetMask>
          <fields>
            <field>
              <name>SECLOCK</name>
              <description>Write 1 to secure-lock this block (if running in a security state). Write 0 to unlock. If locked already, may only write if at same or higher security level as lock. Reads as: 0 if unlocked, else 1, 2, 3 to indicate security level it is locked at. NOTE: this and ID are the only readable registers if locked and current state is lower than lock level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCK</name>
                  <description>Unlocks, so block is open to all. But, AHB Master will only issue non-secure requests.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>Locks to the current security level. AHB Master will issue requests at this level.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PATTERN</name>
              <description>Must write 0xA75 to change lock state. A75:Pattern needed to change bits 1:0</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>MASK[%s]</name>
          <description>Allows Application to write a random mask for ICB use. Normally only a new one on each system reset (including power up).</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>MASK</name>
              <description>A random word.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RELOAD[%s]</name>
          <description>The WO digest-reload registers may be written with a saved Hash digest, to allow continuation from where left off. These registers may only be written if the Reload field in CTRL is 1. If SHA1, only the 1st 5 are used.</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DIGEST</name>
              <description>SHA Digest word to reload.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRNG_SEED</name>
          <description>PRNG random input value used as an entropy source</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRNG_SEED</name>
              <description>Random input value used as an entropy source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRNG_OUT</name>
          <description>Provide random number.</description>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>PRNG_OUT</name>
              <description>Provide random number.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CASPER</name>
      <description>CASPER</description>
      <groupName>CASPER</groupName>
      <baseAddress>0x400A5000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x84</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CASER</name>
        <value>55</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL0</name>
          <description>Contains the offsets of AB and CD in the RAM.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFD0005</resetMask>
          <fields>
            <field>
              <name>ABBPAIR</name>
              <description>Which bank-pair the offset ABOFF is within. This must be 0 if only 2-up</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PAIR0</name>
                  <description>Bank-pair 0 (1st)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAIR1</name>
                  <description>Bank-pair 1 (2nd)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ABOFF</name>
              <description>Word or DWord Offset of AB values, with B at [2]=0 and A at [2]=1 as far as the code sees (normally will be an interleaved bank so only sequential to AHB). Word offset only allowed if 32 bit operation. Ideally not in the same RAM as the CD values if 4-up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CDBPAIR</name>
              <description>Which bank-pair the offset CDOFF is within. This must be 0 if only 2-up</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PAIR0</name>
                  <description>Bank-pair 0 (1st)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAIR1</name>
                  <description>Bank-pair 1 (2nd)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CDOFF</name>
              <description>Word or DWord Offset of CD, with D at [2]=0 and C at [2]=1 as far as the code sees (normally will be an interleaved bank so only sequential to AHB). Word offset only allowed if 32 bit operation. Ideally not in the same RAM as the AB values</description>
              <bitOffset>18</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL1</name>
          <description>Contains the opcode mode, iteration count, and result offset (in RAM) and also launches the accelerator. Note: with CP version: CTRL0 and CRTL1 can be written in one go with MCRR.</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xDFFDFFFF</resetMask>
          <fields>
            <field>
              <name>ITER</name>
              <description>Iteration counter. Is number_cycles - 1. write 0 means Does one cycle - does not iterate.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Operation mode to perform. write 0 means Accelerator is inactive. write others means accelerator is active.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESBPAIR</name>
              <description>Which bank-pair the offset RESOFF is within. This must be 0 if only 2-up. Ideally this is not the same bank as ABBPAIR (when 4-up supported)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PAIR0</name>
                  <description>Bank-pair 0 (1st)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAIR1</name>
                  <description>Bank-pair 1 (2nd)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESOFF</name>
              <description>Word or DWord Offset of result. Word offset only allowed if 32 bit operation. Ideally not in the same RAM as the AB and CD values</description>
              <bitOffset>18</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CSKIP</name>
              <description>Skip rules on Carry if needed. This operation will be skipped based on Carry value (from previous operation) if not 0:</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_SKIP</name>
                  <description>No Skip</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SKIP_IF_1</name>
                  <description>Skip if Carry is 1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SKIP_IF_0</name>
                  <description>Skip if Carry is 0</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_AND_SKIP</name>
                  <description>Set CTRLOFF to CDOFF and Skip</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOADER</name>
          <description>Contains an optional loader to load into CTRL0/1 in steps to perform a set of operations.</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFD00FF</resetMask>
          <fields>
            <field>
              <name>COUNT</name>
              <description>Number of control pairs to load 0 relative (so 1 means load 1). write 1 means Does one op - does not iterate, write N means N control pairs to load</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTRLBPAIR</name>
              <description>Which bank-pair the offset CTRLOFF is within. This must be 0 if only 2-up. Does not matter which bank is used as this is loaded when not performing an operation.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PAIR0</name>
                  <description>Bank-pair 0 (1st)</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAIR1</name>
                  <description>Bank-pair 1 (2nd)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTRLOFF</name>
              <description>DWord Offset of CTRL pair to load next.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>Indicates operational status and would contain the carry bit if used.</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x31</resetMask>
          <fields>
            <field>
              <name>DONE</name>
              <description>Indicates if the accelerator has finished an operation. Write 1 to clear, or write CTRL1 to clear.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BUSY</name>
                  <description>Busy or just cleared</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMPLETED</name>
                  <description>Completed last operation</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARRY</name>
              <description>Last carry value if operation produced a carry bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_CARRY</name>
                  <description>Carry was 0 or no carry</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CARRY</name>
                  <description>Carry was 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>Indicates if the accelerator is busy performing an operation</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>Not busy - is idle</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BUSY</name>
                  <description>Is busy</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENSET</name>
          <description>Sets interrupts</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>DONE</name>
              <description>Set if the accelerator should interrupt when done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_INTERRUPT</name>
                  <description>Do not interrupt when done</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INTERRUPT</name>
                  <description>Interrupt when done</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENCLR</name>
          <description>Clears interrupts</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>DONE</name>
              <description>Written to clear an interrupt set with INTENSET.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IGNORED</name>
                  <description>If written 0, ignored</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NO_INTERRUPT</name>
                  <description>If written 1, do not Interrupt when done</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTSTAT</name>
          <description>Interrupt status bits (mask of INTENSET and STATUS)</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>DONE</name>
              <description>If set, interrupt is caused by accelerator being done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_CAUSED</name>
                  <description>Not caused by accelerator being done</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAUSED</name>
                  <description>Caused by accelerator being done</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AREG</name>
          <description>A register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to be fed into Multiplier. Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BREG</name>
          <description>B register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to be fed into Multiplier. Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CREG</name>
          <description>C register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to be fed into Multiplier. Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DREG</name>
          <description>D register</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to be fed into Multiplier. Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RES0</name>
          <description>Result register 0</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to hold working result (from multiplier, adder/xor, etc). Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RES1</name>
          <description>Result register 1</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to hold working result (from multiplier, adder/xor, etc). Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RES2</name>
          <description>Result register 2</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to hold working result (from multiplier, adder/xor, etc). Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RES3</name>
          <description>Result register 3</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_VALUE</name>
              <description>Register to hold working result (from multiplier, adder/xor, etc). Is not normally written or read by application, but is available when accelerator not busy.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MASK</name>
          <description>Optional mask register</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASK</name>
              <description>Mask to apply as side channel countermeasure. 0: No mask to be used. N: Mask to XOR onto values</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMASK</name>
          <description>Optional re-mask register</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASK</name>
              <description>Mask to apply as side channel countermeasure. 0: No mask to be used. N: Mask to XOR onto values</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOCK</name>
          <description>Security lock register</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1FFFF</resetMask>
          <fields>
            <field>
              <name>LOCK</name>
              <description>Reads back with security level locked to, or 0. Writes as 0 to unlock, 1 to lock.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCK</name>
                  <description>unlock</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>Lock to current security level</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEY</name>
              <description>Must be written as 0x73D to change the register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>KWY_VALUE</name>
                  <description>If set during write, will allow lock or unlock</description>
                  <value>0x73D</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SECGPIO</name>
      <description>General Purpose I/O (GPIO)</description>
      <groupName>GPIO</groupName>
      <baseAddress>0x400A8000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x2484</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>B0_0</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_1</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x1</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_2</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x2</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_3</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x3</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_4</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x4</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_5</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x5</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_6</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x6</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_7</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x7</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_8</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x8</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_9</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x9</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_10</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0xA</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_11</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0xB</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_12</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0xC</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_13</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0xD</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_14</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0xE</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_15</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0xF</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_16</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x10</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_17</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x11</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_18</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x12</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_19</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x13</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_20</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x14</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_21</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x15</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_22</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x16</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_23</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x17</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_24</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x18</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_25</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x19</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_26</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x1A</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_27</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x1B</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_28</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x1C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_29</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x1D</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_30</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x1E</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>B0_31</name>
          <description>Byte pin registers for all port GPIO pins</description>
          <addressOffset>0x1F</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PBYTE</name>
              <description>Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_0</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_1</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_2</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_3</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_4</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_5</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_6</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_7</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_8</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_9</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_10</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_11</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_12</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_13</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1034</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_14</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1038</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_15</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x103C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_16</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1040</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_17</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1044</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_18</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1048</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_19</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x104C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_20</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1050</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_21</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1054</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_22</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1058</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_23</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x105C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_24</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1060</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_25</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1064</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_26</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1068</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_27</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x106C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_28</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1070</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_29</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1074</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_30</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x1078</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0_31</name>
          <description>Word pin registers for all port GPIO pins</description>
          <addressOffset>0x107C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PWORD</name>
              <description>Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIR0</name>
          <description>Direction registers for all port GPIO pins</description>
          <addressOffset>0x2000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DIRP</name>
              <description>Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MASK0</name>
          <description>Mask register for all port GPIO pins</description>
          <addressOffset>0x2080</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASKP</name>
              <description>Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package.0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIN0</name>
          <description>Port pin register for all port GPIO pins</description>
          <addressOffset>0x2100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT</name>
              <description>Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPIN0</name>
          <description>Masked port register for all port GPIO pins</description>
          <addressOffset>0x2180</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MPORTP</name>
              <description>Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET0</name>
          <description>Write: Set register for port. Read: output bits for port</description>
          <addressOffset>0x2200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SETP</name>
              <description>Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLR0</name>
          <description>Clear port for all port GPIO pins</description>
          <addressOffset>0x2280</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CLRP</name>
              <description>Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NOT0</name>
          <description>Toggle port for all port GPIO pins</description>
          <addressOffset>0x2300</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>NOTP</name>
              <description>Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIRSET0</name>
          <description>Set pin direction bits for port</description>
          <addressOffset>0x2380</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DIRSETP</name>
              <description>Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIRCLR0</name>
          <description>Clear pin direction bits for port</description>
          <addressOffset>0x2400</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DIRCLRP</name>
              <description>Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIRNOT0</name>
          <description>Toggle pin direction bits for port</description>
          <addressOffset>0x2480</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>DIRNOTP</name>
              <description>Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>AHB_SECURE_CTRL</name>
      <description>AHB secure controller</description>
      <groupName>AHB_SECURE_CTRL</groupName>
      <baseAddress>0x400AC000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SEC_CTRL_FLASH_ROM_SLAVE_RULE</name>
          <description>Security access rules for Flash and ROM slaves.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASH_RULE</name>
              <description>Security access rules for the whole FLASH : 0x0000_0000 - 0x0003_FFFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROM_RULE</name>
              <description>Security access rules for the whole ROM : 0x0300_0000 - 0x0301_FFFF</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_FLASH_MEM_RULE0</name>
          <description>Security access rules for FLASH sector 0 to sector 7. Each Flash sector is 32 Kbytes. There are 8 FLASH sectors in total.</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE4</name>
              <description>secure control rule4. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE5</name>
              <description>secure control rule5. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE6</name>
              <description>secure control rule6. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE7</name>
              <description>secure control rule7. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_ROM_MEM_RULE0</name>
          <description>Security access rules for ROM sector 0 to sector 31. Each ROM sector is 4 Kbytes. There are 32 ROM sectors in total.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE4</name>
              <description>secure control rule4. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE5</name>
              <description>secure control rule5. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE6</name>
              <description>secure control rule6. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE7</name>
              <description>secure control rule7. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_ROM_MEM_RULE1</name>
          <description>Security access rules for ROM sector 0 to sector 31. Each ROM sector is 4 Kbytes. There are 32 ROM sectors in total.</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE4</name>
              <description>secure control rule4. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE5</name>
              <description>secure control rule5. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE6</name>
              <description>secure control rule6. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE7</name>
              <description>secure control rule7. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_ROM_MEM_RULE2</name>
          <description>Security access rules for ROM sector 0 to sector 31. Each ROM sector is 4 Kbytes. There are 32 ROM sectors in total.</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE4</name>
              <description>secure control rule4. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE5</name>
              <description>secure control rule5. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE6</name>
              <description>secure control rule6. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE7</name>
              <description>secure control rule7. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_ROM_MEM_RULE3</name>
          <description>Security access rules for ROM sector 0 to sector 31. Each ROM sector is 4 Kbytes. There are 32 ROM sectors in total.</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE4</name>
              <description>secure control rule4. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE5</name>
              <description>secure control rule5. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE6</name>
              <description>secure control rule6. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE7</name>
              <description>secure control rule7. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAMX_SLAVE_RULE</name>
          <description>Security access rules for RAMX slaves.</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RAMX_RULE</name>
              <description>Security access rules for the whole RAMX : 0x0400_0000 - 0x0400_7FFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAMX_MEM_RULE0</name>
          <description>Security access rules for RAMX slaves.</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAM0_SLAVE_RULE</name>
          <description>Security access rules for RAM0 slaves.</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RAM0_RULE</name>
              <description>Security access rules for the whole RAM0 : 0x2000_0000 - 0x2000_7FFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAM0_MEM_RULE0</name>
          <description>Security access rules for RAM0 slaves.</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE4</name>
              <description>secure control rule4. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE5</name>
              <description>secure control rule5. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE6</name>
              <description>secure control rule6. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE7</name>
              <description>secure control rule7. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAM1_SLAVE_RULE</name>
          <description>Security access rules for RAM1 slaves.</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RAM1_RULE</name>
              <description>Security access rules for the whole RAM1 : 0x2000_8000 - 0x2000_BFFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAM1_MEM_RULE0</name>
          <description>Security access rules for RAM1 slaves.</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAM2_SLAVE_RULE</name>
          <description>Security access rules for RAM2 slaves.</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RAM2_RULE</name>
              <description>Security access rules for the whole RAM2 : 0x2000_C000 - 0x2000_FFFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_RAM2_MEM_RULE0</name>
          <description>Security access rules for RAM2 slaves.</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RULE0</name>
              <description>secure control rule0. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE1</name>
              <description>secure control rule1. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE2</name>
              <description>secure control rule2. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RULE3</name>
              <description>secure control rule3. it can be set when check_reg's write_lock is '0'</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_USB_HS_SLAVE_RULE</name>
          <description>Security access rules for USB High speed RAM slaves.</description>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RAM_USB_HS_RULE</name>
              <description>Security access rules for the whole USB High Speed RAM : 0x2001_0000 - 0x2001_3FFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_USB_HS_MEM_RULE</name>
          <description>Security access rules for RAM_USB_HS.</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SRAM_SECT_0_RULE</name>
              <description>Address space: 0x2001_0000 - 0x2001_0FFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_SECT_1_RULE</name>
              <description>Address space: 0x2001_1000 - 0x2001_1FFF</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_SECT_2_RULE</name>
              <description>Address space: 0x2001_2000 - 0x2001_2FFF</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_SECT_3_RULE</name>
              <description>Address space: 0x2001_3000 - 0x2001_3FFF</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE_SLAVE_RULE</name>
          <description>Security access rules for both APB Bridges slaves.</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APBBRIDGE0_RULE</name>
              <description>Security access rules for the whole APB Bridge 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBBRIDGE1_RULE</name>
              <description>Security access rules for the whole APB Bridge 1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE0_MEM_CTRL0</name>
          <description>Security access rules for APB Bridge 0 peripherals. Each APB bridge sector is 4 Kbytes. There are 32 APB Bridge 0 sectors in total.</description>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYSCON_RULE</name>
              <description>System Configuration</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IOCON_RULE</name>
              <description>I/O Configuration</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GINT0_RULE</name>
              <description>GPIO input Interrupt 0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GINT1_RULE</name>
              <description>GPIO input Interrupt 1</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PINT_RULE</name>
              <description>Pin Interrupt and Pattern match</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEC_PINT_RULE</name>
              <description>Secure Pin Interrupt and Pattern match</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUTMUX_RULE</name>
              <description>Peripheral input multiplexing</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE0_MEM_CTRL1</name>
          <description>Security access rules for APB Bridge 0 peripherals. Each APB bridge sector is 4 Kbytes. There are 32 APB Bridge 0 sectors in total.</description>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CTIMER0_RULE</name>
              <description>Standard counter/Timer 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTIMER1_RULE</name>
              <description>Standard counter/Timer 1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WWDT_RULE</name>
              <description>Windiwed wtachdog Timer</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MRT_RULE</name>
              <description>Multi-rate Timer</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UTICK_RULE</name>
              <description>Micro-Timer</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE0_MEM_CTRL2</name>
          <description>Security access rules for APB Bridge 0 peripherals. Each APB bridge sector is 4 Kbytes. There are 32 APB Bridge 0 sectors in total.</description>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ANACTRL_RULE</name>
              <description>Analog Modules controller</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE1_MEM_CTRL0</name>
          <description>Security access rules for APB Bridge 1 peripherals. Each APB bridge sector is 4 Kbytes. There are 32 APB Bridge 1 sectors in total.</description>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMC_RULE</name>
              <description>Power Management Controller</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSCTRL_RULE</name>
              <description>System Controller</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI_FILTER_RULE</name>
              <description>SPI FILTER control</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE1_MEM_CTRL1</name>
          <description>Security access rules for APB Bridge 1 peripherals. Each APB bridge sector is 4 Kbytes. There are 32 APB Bridge 1 sectors in total.</description>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CTIMER2_RULE</name>
              <description>Standard counter/Timer 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTIMER3_RULE</name>
              <description>Standard counter/Timer 3</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTIMER4_RULE</name>
              <description>Standard counter/Timer 4</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC_RULE</name>
              <description>Real Time Counter</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OSEVENT_RULE</name>
              <description>OS Event Timer</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE1_MEM_CTRL2</name>
          <description>Security access rules for APB Bridge 1 peripherals. Each APB bridge sector is 4 Kbytes. There are 32 APB Bridge 1 sectors in total.</description>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASH_CTRL_RULE</name>
              <description>Flash Controller</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRINCE_RULE</name>
              <description>Prince</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_APB_BRIDGE1_MEM_CTRL3</name>
          <description>Security access rules for APB Bridge 1 peripherals. Each APB bridge sector is 4 Kbytes. There are 32 APB Bridge 1 sectors in total.</description>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USBHPHY_RULE</name>
              <description>USB High Speed Phy controller</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RNG_RULE</name>
              <description>True Random Number Generator</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PUF_RULE</name>
              <description>PUF</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLU_RULE</name>
              <description>Programmable Look-Up logic</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_AHB_PORT7_SLAVE0_RULE</name>
          <description>Security access rules for AHB peripherals.</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA0_RULE</name>
              <description>DMA Controller</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FS_USB_DEV_RULE</name>
              <description>USB Full-speed device</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCT_RULE</name>
              <description>SCTimer</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLEXCOMM0_RULE</name>
              <description>Flexcomm interface 0</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLEXCOMM1_RULE</name>
              <description>Flexcomm interface 1</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_AHB_PORT7_SLAVE1_RULE</name>
          <description>Security access rules for AHB peripherals.</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLEXCOMM2_RULE</name>
              <description>Flexcomm interface 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLEXCOMM3_RULE</name>
              <description>Flexcomm interface 3</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLEXCOMM4_RULE</name>
              <description>Flexcomm interface 4</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIO0_RULE</name>
              <description>High Speed GPIO</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_AHB_PORT8_SLAVE0_RULE</name>
          <description>Security access rules for AHB peripherals.</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USB_HS_DEV_RULE</name>
              <description>USB high Speed device registers</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRC_RULE</name>
              <description>CRC engine</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLEXCOMM5_RULE</name>
              <description>Flexcomm interface 5</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLEXCOMM6_RULE</name>
              <description>Flexcomm interface 6</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_AHB_PORT8_SLAVE1_RULE</name>
          <description>Security access rules for AHB peripherals.</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLEXCOMM7_RULE</name>
              <description>Flexcomm interface 7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBG_MAILBOX_RULE</name>
              <description>Debug mailbox (aka ISP-AP)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAN0_RULE</name>
              <description>CAN-FD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_LSPI_RULE</name>
              <description>High Speed SPI</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_AHB_PORT9_SLAVE0_RULE</name>
          <description>Security access rules for AHB peripherals.</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADC_RULE</name>
              <description>ADC</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_FS_HOST_RULE</name>
              <description>USB Full Speed Host registers.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_HS_HOST_RULE</name>
              <description>USB High speed host registers</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH_RULE</name>
              <description>SHA-2 crypto registers</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CASPER_RULE</name>
              <description>RSA/ECC crypto accelerator</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_RULE</name>
              <description>DMA Controller (Secure)</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_AHB_PORT9_SLAVE1_RULE</name>
          <description>Security access rules for AHB peripherals.</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO1_RULE</name>
              <description>Secure High Speed GPIO</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_SEC_CTRL_RULE</name>
              <description>AHB Secure Controller</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_CTRL_AHB_SEC_CTRL_MEM_RULE</name>
          <description>Security access rules for AHB_SEC_CTRL_AHB.</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AHB_SEC_CTRL_SECT_0_RULE</name>
              <description>Address space: 0x400A_0000 - 0x400A_CFFF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_SEC_CTRL_SECT_1_RULE</name>
              <description>Address space: 0x400A_D000 - 0x400A_DFFF</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_SEC_CTRL_SECT_2_RULE</name>
              <description>Address space: 0x400A_E000 - 0x400A_EFFF</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_SEC_CTRL_SECT_3_RULE</name>
              <description>Address space: 0x400A_F000 - 0x400A_FFFF</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>10</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>sec_vio_addr[%s]</name>
          <description>most recent security violation address for AHB layer n</description>
          <addressOffset>0xE00</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SEC_VIO_ADDR</name>
              <description>security violation address for AHB layer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>10</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>sec_vio_misc_info[%s]</name>
          <description>most recent security violation miscellaneous information for AHB layer n</description>
          <addressOffset>0xE80</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFF3</resetMask>
          <fields>
            <field>
              <name>SEC_VIO_INFO_WRITE</name>
              <description>security violation access read/write indicator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>READ</name>
                  <description>Read access.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITE</name>
                  <description>Write access.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEC_VIO_INFO_DATA_ACCESS</name>
              <description>security violation access data/code indicator.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CODE</name>
                  <description>Code access.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA</name>
                  <description>Data access.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEC_VIO_INFO_MASTER_SEC_LEVEL</name>
              <description>bit [5:4]: master sec level and privilege level bit [7:6]: anti-pol value for master sec level and privilege level</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SEC_VIO_INFO_MASTER</name>
              <description>security violation master number</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VALUE_0</name>
                  <description>CPU0 Code.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_1</name>
                  <description>CPU0 System.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_4</name>
                  <description>USB-HS Device.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_5</name>
                  <description>SDMA0.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_10</name>
                  <description>HASH.</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_11</name>
                  <description>USB-FS Host.</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_12</name>
                  <description>SDMA1.</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALUE_13</name>
                  <description>CAN-FD.</description>
                  <value>0xD</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_VIO_INFO_VALID</name>
          <description>security violation address/information registers valid flags</description>
          <addressOffset>0xF00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>VIO_INFO_VALID0</name>
              <description>violation information valid flag for AHB port 0. Write 1 to clear.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID1</name>
              <description>violation information valid flag for AHB port 1. Write 1 to clear.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID2</name>
              <description>violation information valid flag for AHB port 2. Write 1 to clear.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID3</name>
              <description>violation information valid flag for AHB port 3. Write 1 to clear.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID4</name>
              <description>violation information valid flag for AHB port 4. Write 1 to clear.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID5</name>
              <description>violation information valid flag for AHB port 5. Write 1 to clear.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID6</name>
              <description>violation information valid flag for AHB port 6. Write 1 to clear.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID7</name>
              <description>violation information valid flag for AHB port 7. Write 1 to clear.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID8</name>
              <description>violation information valid flag for AHB port 8. Write 1 to clear.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VIO_INFO_VALID9</name>
              <description>violation information valid flag for AHB port 9. Write 1 to clear.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>Not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>Valid (violation occurred).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_GPIO_MASK0</name>
          <description>Secure GPIO mask for port 0 pins.</description>
          <addressOffset>0xF80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO0_PIN0_SEC_MASK</name>
              <description>Secure mask for pin P0_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN1_SEC_MASK</name>
              <description>Secure mask for pin P0_1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN2_SEC_MASK</name>
              <description>Secure mask for pin P0_2</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN3_SEC_MASK</name>
              <description>Secure mask for pin P0_3</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN4_SEC_MASK</name>
              <description>Secure mask for pin P0_4</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN5_SEC_MASK</name>
              <description>Secure mask for pin P0_5</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN6_SEC_MASK</name>
              <description>Secure mask for pin P0_6</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN7_SEC_MASK</name>
              <description>Secure mask for pin P0_7</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN8_SEC_MASK</name>
              <description>Secure mask for pin P0_8</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN9_SEC_MASK</name>
              <description>Secure mask for pin P0_9</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN10_SEC_MASK</name>
              <description>Secure mask for pin P0_10</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN11_SEC_MASK</name>
              <description>Secure mask for pin P0_11</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN12_SEC_MASK</name>
              <description>Secure mask for pin P0_12</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN13_SEC_MASK</name>
              <description>Secure mask for pin P0_13</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN14_SEC_MASK</name>
              <description>Secure mask for pin P0_14</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN15_SEC_MASK</name>
              <description>Secure mask for pin P0_15</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN16_SEC_MASK</name>
              <description>Secure mask for pin P0_16</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN17_SEC_MASK</name>
              <description>Secure mask for pin P0_17</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN18_SEC_MASK</name>
              <description>Secure mask for pin P0_18</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN19_SEC_MASK</name>
              <description>Secure mask for pin P0_19</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN20_SEC_MASK</name>
              <description>Secure mask for pin P0_20</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN21_SEC_MASK</name>
              <description>Secure mask for pin P0_21</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN22_SEC_MASK</name>
              <description>Secure mask for pin P0_22</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN23_SEC_MASK</name>
              <description>Secure mask for pin P0_23</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN24_SEC_MASK</name>
              <description>Secure mask for pin P0_24</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN25_SEC_MASK</name>
              <description>Secure mask for pin P0_25</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN26_SEC_MASK</name>
              <description>Secure mask for pin P0_26</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN27_SEC_MASK</name>
              <description>Secure mask for pin P0_27</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN28_SEC_MASK</name>
              <description>Secure mask for pin P0_28</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN29_SEC_MASK</name>
              <description>Secure mask for pin P0_29</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN30_SEC_MASK</name>
              <description>Secure mask for pin P0_30</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO0_PIN31_SEC_MASK</name>
              <description>Secure mask for pin P0_31</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_GPIO_MASK1</name>
          <description>Secure GPIO mask for port 1 pins.</description>
          <addressOffset>0xF84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO1_PIN0_SEC_MASK</name>
              <description>Secure mask for pin P1_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN1_SEC_MASK</name>
              <description>Secure mask for pin P1_1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN2_SEC_MASK</name>
              <description>Secure mask for pin P1_2</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN3_SEC_MASK</name>
              <description>Secure mask for pin P1_3</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN4_SEC_MASK</name>
              <description>Secure mask for pin P1_4</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN5_SEC_MASK</name>
              <description>Secure mask for pin P1_5</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN6_SEC_MASK</name>
              <description>Secure mask for pin P1_6</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN7_SEC_MASK</name>
              <description>Secure mask for pin P1_7</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN8_SEC_MASK</name>
              <description>Secure mask for pin P1_8</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN9_SEC_MASK</name>
              <description>Secure mask for pin P1_9</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN10_SEC_MASK</name>
              <description>Secure mask for pin P1_10</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN11_SEC_MASK</name>
              <description>Secure mask for pin P1_11</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN12_SEC_MASK</name>
              <description>Secure mask for pin P1_12</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN13_SEC_MASK</name>
              <description>Secure mask for pin P1_13</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN14_SEC_MASK</name>
              <description>Secure mask for pin P1_14</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN15_SEC_MASK</name>
              <description>Secure mask for pin P1_15</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN16_SEC_MASK</name>
              <description>Secure mask for pin P1_16</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN17_SEC_MASK</name>
              <description>Secure mask for pin P1_17</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN18_SEC_MASK</name>
              <description>Secure mask for pin P1_18</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN19_SEC_MASK</name>
              <description>Secure mask for pin P1_19</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN20_SEC_MASK</name>
              <description>Secure mask for pin P1_20</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN21_SEC_MASK</name>
              <description>Secure mask for pin P1_21</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN22_SEC_MASK</name>
              <description>Secure mask for pin P1_22</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN23_SEC_MASK</name>
              <description>Secure mask for pin P1_23</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN24_SEC_MASK</name>
              <description>Secure mask for pin P1_24</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN25_SEC_MASK</name>
              <description>Secure mask for pin P1_25</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN26_SEC_MASK</name>
              <description>Secure mask for pin P1_26</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN27_SEC_MASK</name>
              <description>Secure mask for pin P1_27</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN28_SEC_MASK</name>
              <description>Secure mask for pin P1_28</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN29_SEC_MASK</name>
              <description>Secure mask for pin P1_29</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN30_SEC_MASK</name>
              <description>Secure mask for pin P1_30</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO1_PIN31_SEC_MASK</name>
              <description>Secure mask for pin P1_31</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Pin state is blocked to non-secure world.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READABLE</name>
                  <description>Pin state is readable by non-secure world.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_MASK_LOCK</name>
          <description>Security General Purpose register access control.</description>
          <addressOffset>0xFBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xAAA</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>SEC_GPIO_MASK0_LOCK</name>
              <description>SEC_GPIO_MASK0 register write-lock.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEC_GPIO_MASK1_LOCK</name>
              <description>SEC_GPIO_MASK1 register write-lock.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MASTER_SEC_LEVEL</name>
          <description>master secure level register</description>
          <addressOffset>0xFD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USBFSD</name>
              <description>USB Full Speed Device.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDMA0</name>
              <description>System DMA 0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH</name>
              <description>Hash.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBFSH</name>
              <description>USB Full speed Host.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDMA1</name>
              <description>System DMA 1 security level.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CANFD</name>
              <description>CAN FD.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER_SEC_LEVEL_LOCK</name>
              <description>MASTER_SEC_LEVEL write-lock.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MASTER_SEC_ANTI_POL_REG</name>
          <description>master secure level anti-pole register</description>
          <addressOffset>0xFD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xBFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USBFSD</name>
              <description>USB Full Speed Device. Must be equal to NOT(MASTER_SEC_LEVEL.USBFSD)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDMA0</name>
              <description>System DMA 0. Must be equal to NOT(MASTER_SEC_LEVEL.SDMA0)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH</name>
              <description>Hash. Must be equal to NOT(MASTER_SEC_LEVEL.HASH)</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBFSH</name>
              <description>USB Full speed Host. Must be equal to NOT(MASTER_SEC_LEVEL.USBFSH)</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDMA1</name>
              <description>System DMA 1 security level. Must be equal to NOT(MASTER_SEC_LEVEL.SDMA1)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CANFD</name>
              <description>CAN FD. Must be equal to NOT(MASTER_SEC_LEVEL.CANFD)</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENUM_S_P</name>
                  <description>Secure and Priviledge user access allowed.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_S_NP</name>
                  <description>Secure and Non-priviledge user access allowed.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_P</name>
                  <description>Non-secure and Privilege access allowed.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENUM_NS_NP</name>
                  <description>Non-secure and Non-priviledge user access allowed.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER_SEC_LEVEL_ANTIPOL_LOCK</name>
              <description>MASTER_SEC_ANTI_POL_REG register write-lock.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU0_LOCK_REG</name>
          <description>Miscalleneous control signals for in Cortex M33 (CPU0)</description>
          <addressOffset>0xFEC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x800002AA</resetValue>
          <resetMask>0xC00003FF</resetMask>
          <fields>
            <field>
              <name>LOCK_NS_VTOR</name>
              <description>Cortex M33 (CPU0) VTOR_NS register write-lock.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_NS_MPU</name>
              <description>Cortex M33 (CPU0) non-secure MPU register write-lock.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_S_VTAIRCR</name>
              <description>Cortex M33 (CPU0) VTOR_S, AIRCR.PRIS, IRCR.BFHFNMINS registers write-lock.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_S_MPU</name>
              <description>Cortex M33 (CPU0) Secure MPU registers write-lock.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_SAU</name>
              <description>Cortex M33 (CPU0) SAU registers write-lock.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_LOCK_REG_LOCK</name>
              <description>CPU0_LOCK_REG write-lock.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLOCKED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITABLE</name>
                  <description>Writable.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC_CTRL_DP_REG</name>
          <description>secure control duplicate register</description>
          <addressOffset>0xFF8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xAAAA</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>WRITE_LOCK</name>
              <description>Write lock.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RESTRICTED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACCESSIBLE</name>
                  <description>Secure control registers can be written.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_SECURE_CHECKING</name>
              <description>Enable secure check for AHB matrix.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable check.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_S_PRIV_CHECK</name>
              <description>Enable secure privilege check for AHB matrix.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable check.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_NS_PRIV_CHECK</name>
              <description>Enable non-secure privilege check for AHB matrix.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable check.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISABLE_VIOLATION_ABORT</name>
              <description>Disable secure violation abort.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable abort fort secure checker.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable abort fort secure checker.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISABLE_SIMPLE_MASTER_STRICT_MODE</name>
              <description>Disable simple master strict mode.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TIER_MODE</name>
                  <description>Simple master in tier mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STRICT_MODE</name>
                  <description>Simple master in strict mode.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISABLE_SMART_MASTER_STRICT_MODE</name>
              <description>Disable smart master strict mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TIER_MODE</name>
                  <description>Smart master in tier mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STRICT_MODE</name>
                  <description>Smart master in strict mode.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IDAU_ALL_NS</name>
              <description>Disable IDAU.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>IDAU is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>IDAU is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC_CTRL_REG</name>
          <description>secure control register</description>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xAAAA</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>WRITE_LOCK</name>
              <description>Write lock.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RESTRICTED</name>
                  <description>Restricted mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACCESSIBLE</name>
                  <description>Secure control registers can be written.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_SECURE_CHECKING</name>
              <description>Enable secure check for AHB matrix.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enabled (restricted mode)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable check.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_S_PRIV_CHECK</name>
              <description>Enable secure privilege check for AHB matrix.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enabled (restricted mode)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable check.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_NS_PRIV_CHECK</name>
              <description>Enable non-secure privilege check for AHB matrix.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enabled (restricted mode)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable check.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISABLE_VIOLATION_ABORT</name>
              <description>Disable secure violation abort.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable abort fort secure checker.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable abort fort secure checker.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISABLE_SIMPLE_MASTER_STRICT_MODE</name>
              <description>Disable simple master strict mode.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TIER_MODE</name>
                  <description>Simple master in tier mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STRICT_MODE</name>
                  <description>Simple master in strict mode.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISABLE_SMART_MASTER_STRICT_MODE</name>
              <description>Disable smart master strict mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TIER_MODE</name>
                  <description>Smart master in tier mode.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STRICT_MODE</name>
                  <description>Smart master in strict mode.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IDAU_ALL_NS</name>
              <description>Disable IDAU.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>IDAU is disable.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>IDAU is enabled.</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SCnSCB</name>
      <description>no description available</description>
      <groupName>SCNSCB</groupName>
      <baseAddress>0xE000E000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CPPWR</name>
          <description>Coprocessor Power Control Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>SU0</name>
              <description>State UNKNOWN 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS0</name>
              <description>State UNKNOWN Secure only 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU0 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU0 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU1</name>
              <description>State UNKNOWN 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS1</name>
              <description>State UNKNOWN Secure only 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU7 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU7 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU2</name>
              <description>State UNKNOWN 2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS2</name>
              <description>State UNKNOWN Secure only 2.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU2 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU2 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU3</name>
              <description>State UNKNOWN 3.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS3</name>
              <description>State UNKNOWN Secure only 3.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU3 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU3 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU4</name>
              <description>State UNKNOWN 4.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS4</name>
              <description>State UNKNOWN Secure only 4.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU4 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU4 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU5</name>
              <description>State UNKNOWN 5.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS5</name>
              <description>State UNKNOWN Secure only 5.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU5 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU5 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU6</name>
              <description>State UNKNOWN 6.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS6</name>
              <description>State UNKNOWN Secure only 6.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU6 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU6 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU7</name>
              <description>State UNKNOWN 7.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The coprocessor state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The coprocessor state is permitted to become UNKNOWN.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS7</name>
              <description>State UNKNOWN Secure only 7.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU7 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU7 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU10</name>
              <description>State UNKNOWN 10.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNKNOWN_NOT_PERMITTED</name>
                  <description>The floating-point state is not permitted to become UNKNOWN.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UNKNOWN_PERMITTED</name>
                  <description>The floating-point state is permitted to become UNKNOWN</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SUS10</name>
              <description>State UNKNOWN Secure only 10.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SU10 field is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SU10 field is only accessible from the Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SU11</name>
              <description>State UNKNOWN 11.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUS11</name>
              <description>State UNKNOWN Secure only 11.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>NVIC</name>
      <description>no description available</description>
      <groupName>NVIC</groupName>
      <baseAddress>0xE000E100</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xE04</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ISER[%s]</name>
          <description>Interrupt Set Enable Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SETENA0</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA1</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA2</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA3</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA4</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA5</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA6</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA7</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA8</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA9</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA10</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA11</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA12</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA13</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA14</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA15</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA16</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA17</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA18</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA19</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA20</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA21</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA22</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA23</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA24</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA25</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA26</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA27</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA28</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA29</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA30</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETENA31</name>
              <description>Interrupt set-enable bits.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ICER[%s]</name>
          <description>Interrupt Clear Enable Register</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLRENA0</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA1</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA2</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA3</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA4</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA5</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA6</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA7</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA8</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA9</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA10</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA11</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA12</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA13</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA14</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA15</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA16</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA17</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA18</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA19</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA20</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA21</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA22</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA23</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA24</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA25</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA26</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA27</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA28</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA29</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA30</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRENA31</name>
              <description>Interrupt clear-enable bits.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>Write: No effect; Read: Interrupt 32n+m disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ISPR[%s]</name>
          <description>Interrupt Set Pending Register</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SETPEND0</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND1</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND2</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND3</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND4</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND5</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND6</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND7</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND8</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND9</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND10</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND11</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND12</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND13</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND14</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND15</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND16</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND17</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND18</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND19</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND20</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND21</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND22</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND23</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND24</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND25</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND26</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND27</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND28</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND29</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND30</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SETPEND31</name>
              <description>Interrupt set-pending bits.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ICPR[%s]</name>
          <description>Interrupt Clear Pending Register</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLRPEND0</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND1</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND2</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND3</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND4</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND5</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND6</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND7</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND8</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND9</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND10</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND11</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND12</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND13</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND14</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND15</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND16</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND17</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND18</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND19</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND20</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND21</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND22</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND23</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND24</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND25</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND26</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND27</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND28</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND29</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND30</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLRPEND31</name>
              <description>Interrupt clear-pending bits.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>Write: No effect; Read: Interrupt 32n+m is not pending</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>IABR[%s]</name>
          <description>Interrupt Active Bit Register</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ACTIVE0</name>
              <description>Active state bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE1</name>
              <description>Active state bits.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE2</name>
              <description>Active state bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE3</name>
              <description>Active state bits.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE4</name>
              <description>Active state bits.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE5</name>
              <description>Active state bits.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE6</name>
              <description>Active state bits.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE7</name>
              <description>Active state bits.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE8</name>
              <description>Active state bits.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE9</name>
              <description>Active state bits.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE10</name>
              <description>Active state bits.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE11</name>
              <description>Active state bits.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE12</name>
              <description>Active state bits.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE13</name>
              <description>Active state bits.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE14</name>
              <description>Active state bits.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE15</name>
              <description>Active state bits.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE16</name>
              <description>Active state bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE17</name>
              <description>Active state bits.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE18</name>
              <description>Active state bits.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE19</name>
              <description>Active state bits.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE20</name>
              <description>Active state bits.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE21</name>
              <description>Active state bits.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE22</name>
              <description>Active state bits.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE23</name>
              <description>Active state bits.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE24</name>
              <description>Active state bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE25</name>
              <description>Active state bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE26</name>
              <description>Active state bits.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE27</name>
              <description>Active state bits.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE28</name>
              <description>Active state bits.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE29</name>
              <description>Active state bits.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE30</name>
              <description>Active state bits.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE31</name>
              <description>Active state bits.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>The interrupt is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>The interrupt is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>ITNS[%s]</name>
          <description>Interrupt Target Non-secure Register</description>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>INTS0</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS1</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS2</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS3</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS4</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS5</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS6</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS7</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS8</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS9</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS10</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS11</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS12</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS13</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS14</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS15</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS16</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS17</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS18</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS19</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS20</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS21</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS22</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS23</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS24</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS25</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS26</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS27</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS28</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS29</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS30</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTS31</name>
              <description>Interrupt Targets Non-secure bits.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_STATE</name>
                  <description>The interrupt targets Secure state.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_STATE</name>
                  <description>The interrupt targets Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>120</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>IPR[%s]</name>
          <description>Interrupt Priority Register</description>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>PRI_0</name>
              <description>no description available</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_1</name>
              <description>no description available</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_2</name>
              <description>no description available</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_3</name>
              <description>no description available</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STIR</name>
          <description>Software Trigger Interrupt Register</description>
          <addressOffset>0xE00</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INTID</name>
              <description>Interrupt ID of the interrupt to trigger, in the range 0-479.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SCB</name>
      <description>no description available</description>
      <groupName>SCB</groupName>
      <baseAddress>0xE000ED00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x90</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>AIRCR</name>
          <description>Application Interrupt and Reset Control Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFA050000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VECTCLRACTIVE</name>
              <description>Reserved for Debug use. This bit reads as 0. When writing to the register you must write 0 to this bit, otherwise behavior is UNPREDICTABLE. This bit is not banked between Security states.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SYSRESETREQ</name>
              <description>System reset request. This bit allows software or a debugger to request a system reset. This bit is not banked between Security states. RW if SYSRESETREQS is 0. When SYSRESETREQS is set to 1, from Non-secure state this bit acts as RAZ/WI.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_REQUEST</name>
                  <description>Do not request a system reset.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REQUEST_RESET</name>
                  <description>Request a system reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSRESETREQS</name>
              <description>System reset request, Secure state only. The value of this bit defines whether the SYSRESETREQ bit is functional for Non-secure use. This bit is not banked between Security states. RW from Secure State and RAZ/WI from Non-secure state.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>SYSRESETREQ functionality is available to both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>SYSRESETREQ functionality is only available to Secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRIGROUP</name>
              <description>Interrupt priority grouping field. This field determines the split of group priority from subpriority. This bit is banked between Security states</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BFHFNMINS</name>
              <description>BusFault, HardFault, and NMI Non-secure enable. The value of this bit defines whether BusFault and NMI exceptions are Non-secure, and whether exceptions target the Non-secure HardFault exception. This bit is not banked between Security states. RW from Secure-state and RO from Non-secure state.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE</name>
                  <description>BusFault, HardFault, and NMI are Secure.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE</name>
                  <description>BusFault and NMI are Non-secure and exceptions can target Non-secure HardFault.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRIS</name>
              <description>Prioritize Secure exceptions. The value of this bit defines whether Secure exception priority boosting is enabled. This bit is not banked between Security states. RW from Secure state and RAZ/WI from Non-secure state.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SAME_PRIORITY</name>
                  <description>Priority ranges of Secure and Non-secure exceptions are identical</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_PRIORITIZED</name>
                  <description>Non-secure exceptions are de-prioritized</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENDIANNESS</name>
              <description>Data endianness bit. This bit is not banked between Security states.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LITTLE_ENDIAN</name>
                  <description>Little-endian.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIG_ENDIAN</name>
                  <description>Big-endian</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VECTKEY</name>
              <description>Register key: Reads as 0xFA05. On writes, write 0x5FA to VECTKEY, otherwise the write is ignored. This Field is not banked between Security states.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR</name>
          <description>The SCR controls features of entry to and exit from low-power state.</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SLEEPONEXIT</name>
              <description>Indicates sleep-on-exit when returning from Handler mode to Thread mode. Setting this bit to 1 enables an interrupt driven application to avoid returning to an empty main application. This bit is banked between Security states.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_SLEEP</name>
                  <description>Do not sleep when returning to Thread mode.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLEEP</name>
                  <description>Enter sleep, or deep sleep, on return from an ISR</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEEPDEEP</name>
              <description>Controls whether the processor uses sleep or deep sleep as its low-power mode. This bit is not banked between Security states.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SLEEP</name>
                  <description>Sleep.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DEEP_SLEEP</name>
                  <description>Deep sleep.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLEEPDEEPS</name>
              <description>Controls whether the SLEEPDEEP bit is only accessible from the Secure state. This bit in only accessible from the Secure state, and behaves as RAZ/WI when accessed from the Nonsecure state. This bit is not banked between Security states.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURE_AND_NON_SECURE</name>
                  <description>The SLEEPDEEP bit is accessible from both Security states.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SECURE_ONLY</name>
                  <description>The SLEEPDEEP bit behaves as RAZ/WI when accessed from the Non-secure state.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEVONPEND</name>
              <description>Send Event on Pending bit. When an event or interrupt enters pending state, the event signal wakes up the processor from WFE. If the processor is not waiting for an event, the event is registered and affects the next WFE. The processor also wakes up on execution of an SEV instruction or an external event. This bit is banked between Security states.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>EXCLUDE_DISABLED_INTERRUPTS</name>
                  <description>Only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INCLUDE_DISABLED_INTERRUPTS</name>
                  <description>Enabled events and all interrupts, including disabled interrupts, can wakeup the processor</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SHCSR</name>
          <description>System Handler Control and State Register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MEMFAULTACT</name>
              <description>MemManage exception active.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>MemManage exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>MemManage exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSFAULTACT</name>
              <description>BusFault exception active.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>BusFault exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>BusFault exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HARDFAULTACT</name>
              <description>HardFault exception active.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>HardFault exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>HardFault exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USGFAULTACT</name>
              <description>UsageFault exception active.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>UsageFault exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>UsageFault exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SECUREFAULTACT</name>
              <description>SecureFault exception active</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>SecureFault exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>SecureFault exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NMIACT</name>
              <description>NMI exception active.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>NMI exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>NMI exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SVCALLACT</name>
              <description>SVCall active.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>SVCall exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>SVCall exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MONITORACT</name>
              <description>Debug monitor active.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>Debug monitor exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>Debug monitor exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PENDSVACT</name>
              <description>PendSV exception active.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>PendSV exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>PendSV exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSTICKACT</name>
              <description>SysTick exception active.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_ACTIVE</name>
                  <description>SysTick exception is not active.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE</name>
                  <description>SysTick exception is active.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USGFAULTPENDED</name>
              <description>UsageFault exception pending.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>UsageFault exception is not pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>UsageFault exception is pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MEMFAULTPENDED</name>
              <description>MemManage exception pending.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>MemManage exception is not pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>MemManage exception is pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSFAULTPENDED</name>
              <description>BusFault exception pending.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>BusFault exception is pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>BusFault exception is not pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SVCALLPENDED</name>
              <description>SVCall pending.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PENDING</name>
                  <description>SVCall exception is not pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PENDING</name>
                  <description>SVCall exception is pending.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MEMFAULTENA</name>
              <description>MemManage enable.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>MemManage exception is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>MemManage exception is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSFAULTENA</name>
              <description>BusFault enable.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>BusFault is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>BusFault is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USGFAULTENA</name>
              <description>UsageFault enable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>UsageFault is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>UsageFault is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SECUREFAULTENA</name>
              <description>SecureFault exception enable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>SecureFault exception is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>SecureFault exception is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SECUREFAULTPENDED</name>
              <description>SecureFault exception pended state bit.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>SecureFault exception modification is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>SecureFault exception modification is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HARDFAULTPENDED</name>
              <description>HardFault exception pended state</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>HardFault exception modification is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>HardFault exception modification is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NSACR</name>
          <description>Non-secure Access Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>CP0</name>
              <description>CP0 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP1</name>
              <description>CP1 access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP2</name>
              <description>CP2 access.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP3</name>
              <description>CP3 access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP4</name>
              <description>CP4 access.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP5</name>
              <description>CP5 access.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP6</name>
              <description>CP6 access.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP7</name>
              <description>CP7 access.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to this coprocessor generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to this coprocessor permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP10</name>
              <description>CP10 access.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_PERMITTED</name>
                  <description>Non-secure accesses to the Floating-point Extension generate a NOCP UsageFault.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PERMITTED</name>
                  <description>Non-secure access to the Floatingpoint Extension permitted.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP11</name>
              <description>CP11 access.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SAU</name>
      <description>no description available</description>
      <groupName>SAU</groupName>
      <baseAddress>0xE000EDD0</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xEC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CTRL</name>
          <description>Security Attribution Unit Control Register</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>Enable. Enables the SAU. This bit is RAZ/WI when the Security Extension is implemented without an SAU region.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>The SAU is disabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>The SAU is enabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALLNS</name>
              <description>All Non-secure.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SECURED_MEMORY</name>
                  <description>Memory is marked as Secure and is not Non-secure callable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURED_MEMORY</name>
                  <description>Memory is marked as Non-secure.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TYPE</name>
          <description>Security Attribution Unit Type Register</description>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SREGION</name>
              <description>SAU regions. The number of implemented SAU regions.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNR</name>
          <description>Security Attribution Unit Region Number Register</description>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>REGION</name>
              <description>Region number.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RBAR</name>
          <description>Security Attribution Unit Region Base Address Register</description>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>BADDR</name>
              <description>Base address. Holds bits[31:5] of the base address for the selected SAU region. Bits[4:0] of the base address are defined as 0x00.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RLAR</name>
          <description>Security Attribution Unit Region Limit Address Register</description>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>Enable. SAU region enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLED</name>
                  <description>SAU region is enabled.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLED</name>
                  <description>SAU region is disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NSC</name>
              <description>Non-secure callable. Controls whether Non-secure state is permitted to execute an SG instruction from this region.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_NON_SECURE_CALLABLE</name>
                  <description>Region is not Non-secure callable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NON_SECURE_CALLABLE</name>
                  <description>Region is Non-secure callable.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LADDR</name>
              <description>Limit address. Holds bits[31:5] of the limit address for the selected SAU region. Bits[4:0] of the limit address are defined as 0x1F.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SFSR</name>
          <description>Secure Fault Status Register</description>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INVEP</name>
              <description>Invalid entry point.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>Error has not occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVIS</name>
              <description>Invalid integrity signature flag.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>Error has not occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVER</name>
              <description>Invalid exception return flag.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>Error has not occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUVIOL</name>
              <description>Attribution unit violation flag.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>Error has not occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INVTRAN</name>
              <description>Invalid transition flag.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>Error has not occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LSPERR</name>
              <description>Lazy state preservation error flag.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>Error has not occurred.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SFARVALID</name>
              <description>Secure fault address valid.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_VALID</name>
                  <description>SFAR content not valid.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VALID</name>
                  <description>SFAR content valid.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LSERR</name>
              <description>Lazy state error flag.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>Error has not occurred</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERROR</name>
                  <description>Error has occurred.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SFAR</name>
          <description>Secure Fault Address Register</description>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0</resetValue>
          <resetMask>0</resetMask>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description>When the SFARVALID bit of the SFSR is set to 1, this field holds the address of an access that caused an SAU violation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>