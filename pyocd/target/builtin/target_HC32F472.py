# pyOCD debugger
# Copyright (c) 2022 Huada Semiconductor Corporation
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from ...coresight.coresight_target import CoreSightTarget
from ...core.memory_map import (FlashRegion, RamRegion, MemoryMap)
from ...debug.svd.loader import SVDFile


class DBGMCU:
    STPCTL = 0xE0042020
    STPCTL_VALUE = 0x7FFFFF

    STPCTL1 = 0xE0042028
    STPCTL1_VALUE = 0xFFF

    TRACECTL = 0xE0042024
    TRACECTL_VALUE = 0x0

FLASH_ALGO = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string. HDSC.HC32F472.1.1.0.pack 9151
    'instructions': [
    0xE00ABE00,
    0x4770ba40, 0x4770ba40, 0x4770ba40, 0x4770bac0, 0x4770bac0, 0x4770bac0, 0x0030ea4f, 0x00004770,
    0x0030ea4f, 0x00004770, 0x0030ea4f, 0x00004770, 0x49052000, 0x49057008, 0x20016008, 0x39264902,
    0x002af881, 0x00004770, 0x40054026, 0x40010418, 0x6800480d, 0x0001f000, 0x480cb118, 0x6008490c,
    0x480ce002, 0x6008490a, 0x490b2002, 0x480b6008, 0x6208490b, 0x490a2000, 0x7008312a, 0x49082005,
    0x0026f881, 0x00004770, 0x40010684, 0x22202c81, 0x40054100, 0x22202381, 0x40010418, 0x00116310,
    0x40054000, 0xf000b510, 0xbd10f811, 0x4604b510, 0xf0004620, 0xbd10f87f, 0x49032000, 0x1e406008,
    0x391c4901, 0x47706008, 0x4001041c, 0xf000b570, 0xf44ff9db, 0x49337083, 0x25006008, 0x4410f44f,
    0x60202000, 0x1c6de007, 0x4285482f, 0xf000d303, 0x2001f9cb, 0x482bbd70, 0x68001d00, 0x7080f400,
    0x7f80f5b0, 0x4827d007, 0x68001d00, 0x7080f000, 0x7f80f1b0, 0xe007d1e7, 0x30084822, 0xf0406800,
    0x49201010, 0x60083108, 0x1d00481e, 0xf0006800, 0x28001010, 0x2004d1f0, 0x6008491a, 0x20004c1b,
    0xf0006020, 0xe007f9a1, 0x30084816, 0xf0406800, 0x49141010, 0x60083108, 0x1d004812, 0xf0006800,
    0x28001010, 0x2004d1f0, 0x6008490e, 0x20004c10, 0xf0006020, 0xe007f989, 0x3008480a, 0xf0406800,
    0x49081010, 0x60083108, 0x1d004806, 0xf0006800, 0x28001010, 0x4903d1f0, 0xf0006008, 0x2000f975,
    0x0000e7a8, 0x4001041c, 0x00061a80, 0x03002000, 0x03004000, 0x4604b570, 0xf0002500, 0x2004f965,
    0x60084919, 0x60202000, 0x1c6de007, 0x42854817, 0xf000d303, 0x2001f959, 0x4813bd70, 0x68001d00,
    0x7080f400, 0x7f80f5b0, 0x480fd007, 0x68001d00, 0x7080f000, 0x7f80f1b0, 0xe007d1e7, 0x3008480a,
    0xf0406800, 0x49081010, 0x60083108, 0x1d004806, 0xf0006800, 0x28001010, 0x4903d1f0, 0xf0006008,
    0x2000f933, 0x0000e7d8, 0x4001041c, 0x00061a80, 0xf000b510, 0xf240f929, 0x49121023, 0xf2436008,
    0x60082010, 0x30fff04f, 0x6008490f, 0x3110490e, 0x480e6008, 0x1d09490b, 0x43c06008, 0x480c6008,
    0x31184908, 0x12c06008, 0x60081d09, 0x5001f24a, 0x80084908, 0xfedcf7ff, 0xfeeaf7ff, 0xf904f000,
    0x0000bd10, 0x40010400, 0x40010590, 0x01234567, 0x00080005, 0x400543fe, 0x43f8e92d, 0x460c4606,
    0xf6494617, 0x90004040, 0xf24046b8, 0x49471003, 0x46356008, 0x4040f649, 0xbf009000, 0xf8e4f000,
    0x0000f8d8, 0xf5b56028, 0xd22c2f80, 0x68004840, 0x42884940, 0x2000d027, 0xe00c9000, 0x1c409800,
    0xf6499000, 0x98004140, 0xd3044288, 0xf8ccf000, 0xe8bd2001, 0x483583f8, 0x68001d00, 0x0010f000,
    0xd1eb2810, 0x4831e007, 0x68003008, 0x0010f040, 0x3108492e, 0x482d6008, 0x68001d00, 0x0010f000,
    0xd0f02810, 0x2000e027, 0xe00b9000, 0x1c409800, 0xf6499000, 0x98004140, 0xd3034288, 0xf8a4f000,
    0xe7d62001, 0x1d004821, 0xf4006800, 0xf5b01080, 0xd1eb1f80, 0x481de007, 0x68003008, 0x1080f440,
    0x3108491a, 0x48196008, 0x68001d00, 0x1080f400, 0x1f80f5b0, 0xf108d0ef, 0x1d2d0804, 0x2c041f24,
    0x2000d29c, 0x60084911, 0xe00b9000, 0x1c409800, 0xf6499000, 0x98004140, 0xd3034288, 0xf874f000,
    0xe7a62001, 0x1d004809, 0xf4006800, 0xf5b07080, 0xd0077f80, 0x1d004805, 0xf0006800, 0xf1b07080,
    0xd1e37f80, 0xf860f000, 0xe7922000, 0x4001041c, 0x03002000, 0x005a5a5a, 0x4604b570, 0x4616460d,
    0xff26f7ff, 0xbd702000, 0x4604b570, 0x4616460d, 0x46294632, 0xf7ff4620, 0xbd70ff4f, 0x49034802,
    0x48036008, 0x47706008, 0xffff0123, 0x40049408, 0xffff3210, 0x4604b510, 0xfe4ef7ff, 0xbd102000,
    0x4604b5f0, 0x2300460d, 0x27002600, 0x21004626, 0xf856e007, 0x6810cb04, 0xd0004584, 0x1d12e004,
    0xebb11c49, 0xd3f40f95, 0x4637bf00, 0xe0062300, 0xcb01f817, 0x45845cd0, 0xe004d000, 0xf0051c5b,
    0x42980003, 0xbf00d8f4, 0x0081eb04, 0xbdf04418, 0x49034802, 0x48036088, 0x47706088, 0xffff0123,
    0x40049000, 0xffff3210, 0x4807b500, 0xf4006800, 0xb9083080, 0xf854f000, 0x68004803, 0x0001f000,
    0xf000b908, 0xbd00f809, 0x40010680, 0x1e01bf00, 0x0001f1a0, 0x4770d1fb, 0x481fb510, 0xb2826800,
    0x6800481e, 0x0481f3c0, 0x6800481c, 0x2303f3c0, 0x1192b90c, 0x2c01e008, 0x1292d101, 0x2c02e004,
    0x1312d101, 0x1392e000, 0x2b0fb10b, 0xf7ffd102, 0xe020ff85, 0x0001f003, 0xb9e2b118, 0xff7ef7ff,
    0xf003e019, 0x28020002, 0x2a01d104, 0xf7ffd113, 0xe010ff75, 0x0004f003, 0xd1042804, 0xd10a2a02,
    0xff6cf7ff, 0xf003e007, 0x28080008, 0x2a03d103, 0xf7ffd101, 0xbd10ff63, 0x40049404, 0x40010680,
    0x4823b510, 0xb2826840, 0x68004822, 0x4481f3c0, 0x68004820, 0x6303f3c0, 0x1192b90c, 0x2c01e008,
    0x1292d101, 0x2c02e004, 0x1312d101, 0x1392e000, 0x2001b90b, 0x2000e000, 0xd1012b0f, 0xe0002101,
    0x43082100, 0xf7ffb110, 0xe020ff73, 0x0001f003, 0xb9e2b118, 0xff6cf7ff, 0xf003e019, 0x28020002,
    0x2a01d104, 0xf7ffd113, 0xe010ff63, 0x0004f003, 0xd1042804, 0xd10a2a02, 0xff5af7ff, 0xf003e007,
    0x28080008, 0x2a03d103, 0xf7ffd101, 0xbd10ff51, 0x40049000, 0x40010680, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x200003dd,
    'pc_unInit': 0x20000419,
    'pc_program_page': 0x200003ed,
    'pc_erase_sector': 0x200000b1,
    'pc_eraseAll': 0x200000a9,

    'static_base' : 0x20000000 + 0x00000004 + 0x000005d8,
    'begin_stack' : 0x20000800,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x200,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    'page_buffers' : [0x20001000, 0x20001200],   # Enable double buffering
    'min_program_length' : 0x200,

    # Flash information
    'flash_start': 0x0,
    'flash_size': 0x80000,
    'sector_sizes': (
        (0x0, 0x2000),
    )
}


FLASH_ALGO_OTP = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string. HDSC.HC32F472.1.1.0.pack 9151
    'instructions': [
    0xE00ABE00,
    0x4770ba40, 0x4770ba40, 0x4770ba40, 0x4770bac0, 0x4770bac0, 0x4770bac0, 0x0030ea4f, 0x00004770,
    0x0030ea4f, 0x00004770, 0x0030ea4f, 0x00004770, 0x49052000, 0x49057008, 0x20016008, 0x39264902,
    0x002af881, 0x00004770, 0x40054026, 0x40010418, 0x6800480d, 0x0001f000, 0x480cb118, 0x6008490c,
    0x480ce002, 0x6008490a, 0x490b2002, 0x480b6008, 0x6208490b, 0x490a2000, 0x7008312a, 0x49082005,
    0x0026f881, 0x00004770, 0x40010684, 0x22202c81, 0x40054100, 0x22202381, 0x40010418, 0x00116310,
    0x40054000, 0xf000b510, 0xbd10f811, 0x4604b510, 0xf0004620, 0xbd10f87f, 0x49032000, 0x1e406008,
    0x391c4901, 0x47706008, 0x4001041c, 0xf000b570, 0xf44ff9db, 0x49337083, 0x25006008, 0x4410f44f,
    0x60202000, 0x1c6de007, 0x4285482f, 0xf000d303, 0x2001f9cb, 0x482bbd70, 0x68001d00, 0x7080f400,
    0x7f80f5b0, 0x4827d007, 0x68001d00, 0x7080f000, 0x7f80f1b0, 0xe007d1e7, 0x30084822, 0xf0406800,
    0x49201010, 0x60083108, 0x1d00481e, 0xf0006800, 0x28001010, 0x2004d1f0, 0x6008491a, 0x20004c1b,
    0xf0006020, 0xe007f9a1, 0x30084816, 0xf0406800, 0x49141010, 0x60083108, 0x1d004812, 0xf0006800,
    0x28001010, 0x2004d1f0, 0x6008490e, 0x20004c10, 0xf0006020, 0xe007f989, 0x3008480a, 0xf0406800,
    0x49081010, 0x60083108, 0x1d004806, 0xf0006800, 0x28001010, 0x4903d1f0, 0xf0006008, 0x2000f975,
    0x0000e7a8, 0x4001041c, 0x00061a80, 0x03002000, 0x03004000, 0x4604b570, 0xf0002500, 0x2004f965,
    0x60084919, 0x60202000, 0x1c6de007, 0x42854817, 0xf000d303, 0x2001f959, 0x4813bd70, 0x68001d00,
    0x7080f400, 0x7f80f5b0, 0x480fd007, 0x68001d00, 0x7080f000, 0x7f80f1b0, 0xe007d1e7, 0x3008480a,
    0xf0406800, 0x49081010, 0x60083108, 0x1d004806, 0xf0006800, 0x28001010, 0x4903d1f0, 0xf0006008,
    0x2000f933, 0x0000e7d8, 0x4001041c, 0x00061a80, 0xf000b510, 0xf240f929, 0x49121023, 0xf2436008,
    0x60082010, 0x30fff04f, 0x6008490f, 0x3110490e, 0x480e6008, 0x1d09490b, 0x43c06008, 0x480c6008,
    0x31184908, 0x12c06008, 0x60081d09, 0x5001f24a, 0x80084908, 0xfedcf7ff, 0xfeeaf7ff, 0xf904f000,
    0x0000bd10, 0x40010400, 0x40010590, 0x01234567, 0x00080005, 0x400543fe, 0x43f8e92d, 0x460c4606,
    0xf6494617, 0x90004040, 0xf24046b8, 0x49471003, 0x46356008, 0x4040f649, 0xbf009000, 0xf8e4f000,
    0x0000f8d8, 0xf5b56028, 0xd22c2f80, 0x68004840, 0x42884940, 0x2000d027, 0xe00c9000, 0x1c409800,
    0xf6499000, 0x98004140, 0xd3044288, 0xf8ccf000, 0xe8bd2001, 0x483583f8, 0x68001d00, 0x0010f000,
    0xd1eb2810, 0x4831e007, 0x68003008, 0x0010f040, 0x3108492e, 0x482d6008, 0x68001d00, 0x0010f000,
    0xd0f02810, 0x2000e027, 0xe00b9000, 0x1c409800, 0xf6499000, 0x98004140, 0xd3034288, 0xf8a4f000,
    0xe7d62001, 0x1d004821, 0xf4006800, 0xf5b01080, 0xd1eb1f80, 0x481de007, 0x68003008, 0x1080f440,
    0x3108491a, 0x48196008, 0x68001d00, 0x1080f400, 0x1f80f5b0, 0xf108d0ef, 0x1d2d0804, 0x2c041f24,
    0x2000d29c, 0x60084911, 0xe00b9000, 0x1c409800, 0xf6499000, 0x98004140, 0xd3034288, 0xf874f000,
    0xe7a62001, 0x1d004809, 0xf4006800, 0xf5b07080, 0xd0077f80, 0x1d004805, 0xf0006800, 0xf1b07080,
    0xd1e37f80, 0xf860f000, 0xe7922000, 0x4001041c, 0x03002000, 0x005a5a5a, 0x4604b570, 0x4616460d,
    0xff26f7ff, 0xbd702000, 0x4604b570, 0x4616460d, 0x46294632, 0xf7ff4620, 0xbd70ff4f, 0x49034802,
    0x48036008, 0x47706008, 0xffff0123, 0x40049408, 0xffff3210, 0x4604b510, 0xfe4ef7ff, 0xbd102000,
    0x4604b5f0, 0x2300460d, 0x27002600, 0x21004626, 0xf856e007, 0x6810cb04, 0xd0004584, 0x1d12e004,
    0xebb11c49, 0xd3f40f95, 0x4637bf00, 0xe0062300, 0xcb01f817, 0x45845cd0, 0xe004d000, 0xf0051c5b,
    0x42980003, 0xbf00d8f4, 0x0081eb04, 0xbdf04418, 0x49034802, 0x48036088, 0x47706088, 0xffff0123,
    0x40049000, 0xffff3210, 0x4807b500, 0xf4006800, 0xb9083080, 0xf854f000, 0x68004803, 0x0001f000,
    0xf000b908, 0xbd00f809, 0x40010680, 0x1e01bf00, 0x0001f1a0, 0x4770d1fb, 0x481fb510, 0xb2826800,
    0x6800481e, 0x0481f3c0, 0x6800481c, 0x2303f3c0, 0x1192b90c, 0x2c01e008, 0x1292d101, 0x2c02e004,
    0x1312d101, 0x1392e000, 0x2b0fb10b, 0xf7ffd102, 0xe020ff85, 0x0001f003, 0xb9e2b118, 0xff7ef7ff,
    0xf003e019, 0x28020002, 0x2a01d104, 0xf7ffd113, 0xe010ff75, 0x0004f003, 0xd1042804, 0xd10a2a02,
    0xff6cf7ff, 0xf003e007, 0x28080008, 0x2a03d103, 0xf7ffd101, 0xbd10ff63, 0x40049404, 0x40010680,
    0x4823b510, 0xb2826840, 0x68004822, 0x4481f3c0, 0x68004820, 0x6303f3c0, 0x1192b90c, 0x2c01e008,
    0x1292d101, 0x2c02e004, 0x1312d101, 0x1392e000, 0x2001b90b, 0x2000e000, 0xd1012b0f, 0xe0002101,
    0x43082100, 0xf7ffb110, 0xe020ff73, 0x0001f003, 0xb9e2b118, 0xff6cf7ff, 0xf003e019, 0x28020002,
    0x2a01d104, 0xf7ffd113, 0xe010ff63, 0x0004f003, 0xd1042804, 0xd10a2a02, 0xff5af7ff, 0xf003e007,
    0x28080008, 0x2a03d103, 0xf7ffd101, 0xbd10ff51, 0x40049000, 0x40010680, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x200003dd,
    'pc_unInit': 0x20000419,
    'pc_program_page': 0x200003ed,
    'pc_erase_sector': 0x200000b1,
    'pc_eraseAll': 0x200000a9,

    'static_base' : 0x20000000 + 0x00000004 + 0x000005d8,
    'begin_stack' : 0x20000800,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x1800,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    'page_buffers' : [0x20001000, 0x20002800],   # Enable double buffering
    'min_program_length' : 0x1800,

    # Flash information
    'flash_start': 0x3000000,
    'flash_size': 0x1800,
    'sector_sizes': (
        (0x0, 0x1800),
    )
}


class HC32F472xC(CoreSightTarget):

    VENDOR = "HDSC"

    MEMORY_MAP = MemoryMap(
        FlashRegion( start=0x00000000, length=0x40000, page_size=0x200, sector_size=0x2000,
                        is_boot_memory=True,
                        algo=FLASH_ALGO),
        FlashRegion( start=0x3000000, length=0x1800, page_size=0x1800, sector_size=0x1800,
                        is_boot_memory=False,
                        is_default=False,
                        algo=FLASH_ALGO_OTP),
        RamRegion(   start=0x1FFF8000, length=0x10000),
        RamRegion(   start=0x200F0000, length=0x1000)
        )

    def __init__(self, session):
        super(HC32F472xC, self).__init__(session, self.MEMORY_MAP)
        self._svd_location = SVDFile.from_builtin("HC32F472.svd")

    def post_connect_hook(self):
        self.write32(DBGMCU.STPCTL, DBGMCU.STPCTL_VALUE)
        self.write32(DBGMCU.STPCTL1, DBGMCU.STPCTL1_VALUE)
        self.write32(DBGMCU.TRACECTL, DBGMCU.TRACECTL_VALUE)


class HC32F472xE(CoreSightTarget):

    VENDOR = "HDSC"

    MEMORY_MAP = MemoryMap(
        FlashRegion( start=0x00000000, length=0x80000, page_size=0x200, sector_size=0x2000,
                        is_boot_memory=True,
                        algo=FLASH_ALGO),
        FlashRegion( start=0x3000000, length=0x1800, page_size=0x1800, sector_size=0x1800,
                        is_boot_memory=False,
                        is_default=False,
                        algo=FLASH_ALGO_OTP),
        RamRegion(   start=0x1FFF8000, length=0x10000),
        RamRegion(   start=0x200F0000, length=0x1000)
        )

    def __init__(self, session):
        super(HC32F472xE, self).__init__(session, self.MEMORY_MAP)
        self._svd_location = SVDFile.from_builtin("HC32F472.svd")

    def post_connect_hook(self):
        self.write32(DBGMCU.STPCTL, DBGMCU.STPCTL_VALUE)
        self.write32(DBGMCU.STPCTL1, DBGMCU.STPCTL1_VALUE)
        self.write32(DBGMCU.TRACECTL, DBGMCU.TRACECTL_VALUE)

