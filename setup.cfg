[metadata]
name = pyocd
description = Cortex-M debugger for Python
long_description = file: README.md
long_description_content_type = text/markdown
maintainer = Chris Reed
maintainer_email = chris.reed@arm.com
url = https://github.com/pyocd/pyOCD
keywords = embedded, debug, debugger, arm, gdb, gdbserver, flash, test
license = Apache 2.0
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Manufacturing
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Operating System :: POSIX :: BSD
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Software Development
    Topic :: Software Development :: Debuggers
    Topic :: Software Development :: Embedded Systems
    Topic :: Software Development :: Testing
    Topic :: Utilities
project_urls =
    Website = https://pyocd.io/
    Documentation = https://pyocd.io//docs
    Source = https://github.com/pyocd/pyOCD
    Issues = https://github.com/pyocd/pyOCD/issues
    Discussions = https://github.com/pyocd/pyOCD/discussions
    Releases = https://github.com/pyocd/pyOCD/releases

[options]
zip_safe = True
include_package_data = True
packages = find:
python_requires = >=3.6.0
# Use hidapi on macOS and Windows, not needed on Linux.
install_requires =
    capstone>=4.0,<5.0
    cmsis-pack-manager>=0.4.0,<1.0
    colorama<1.0
    dataclasses; python_version < "3.7"
    hidapi>=0.10.1,<1.0; platform_system != "Linux"
    intelhex>=2.0,<3.0
    intervaltree>=3.0.2,<4.0
    libusb-package>=1.0,<2.0
    natsort>=8.0.0,<9.0
    prettytable>=2.0,<4.0
    pyelftools<1.0
    pylink-square>=0.11.1,<1.0
    pyusb>=1.2.1,<2.0
    pyyaml>=6.0,<7.0
    six>=1.15.0,<2.0
    typing-extensions>=4.0,<5.0

[options.extras_require]
pemicro =
    pyocd_pemicro>=1.0.6
test =
    pytest>=6.2
    pytest-cov
    coverage
    flake8
    pylint
    tox

[options.package_data]
pyocd = debug/svd/svd_data.zip

[options.entry_points]
console_scripts =
    pyocd = pyocd.__main__:main

    # Keep deprecated tools for compatibility.
    pyocd-gdbserver = pyocd.tools.gdb_server:main

pyocd.probe =
    cmsisdap = pyocd.probe.cmsis_dap_probe:CMSISDAPProbePlugin
    jlink = pyocd.probe.jlink_probe:JLinkProbePlugin
    picoprobe = pyocd.probe.picoprobe:PicoprobePlugin
    remote = pyocd.probe.tcp_client_probe:TCPClientProbePlugin
    stlink = pyocd.probe.stlink_probe:StlinkProbePlugin

pyocd.rtos =
    argon = pyocd.rtos.argon:ArgonPlugin
    freertos = pyocd.rtos.freertos:FreeRTOSPlugin
    rtx5 = pyocd.rtos.rtx5:RTX5Plugin
    threadx = pyocd.rtos.threadx:ThreadXPlugin
    zephyr = pyocd.rtos.zephyr:ZephyrPlugin

[flake8]
exclude =
    # Ignore the test user script since it uses globals not available to flake8, and will thus generate
    # many failures.
    test_user_script.py,
    # Ignore gdb test script for similar reasons.
    gdb_test_script.py

